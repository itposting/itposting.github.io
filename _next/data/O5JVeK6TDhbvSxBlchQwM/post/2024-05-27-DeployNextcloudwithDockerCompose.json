{"pageProps":{"post":{"title":"도커 컴포즈로 Nextcloud를 배포하기","description":"","date":"2024-05-27 13:46","slug":"2024-05-27-DeployNextcloudwithDockerCompose","content":"\n\nDIY, 실험, 그리고 학습을 즐기며, Google Drive와 One Drive를 대체하기 위해 Nextcloud 서버를 설정했어요. 몇 년 동안 제 Nextcloud 인스턴스는 백업된 파일, 연락처, 캘린더, 노트 등이 모두 모여 있는 집이 되었고, Collabora 덕분에 서버에는 사무실 스위트도 갖췄네요.\n\nNextcloud는 여러 서비스에 대한 멋진 오픈 소스 대안일 수 있어요.\n\n좋은 점이든 나쁜 점이든, 저는 도커 컨테이너를 사용해 홈 서버에 Nextcloud를 배포하기로 결정했어요. 도커 경험을 쌓고자 하거나 Nextcloud 배포를 위한 도커 컴포즈 파일을 설정하는 방법을 찾고 있다면, 여기가 바로 옳은 장소에요.\n\n다음은 docker-compose.yml입니다.\n\n<div class=\"content-ad\"></div>\n\n```yaml\n---\nversion: '3'\n\nservices:\n  nextcloud:\n    image: nextcloud\n    container_name: nextcloud\n    restart: unless-stopped\n    networks: \n      - cloud\n    depends_on:\n      - nextclouddb\n      - redis\n    ports:\n      - 8081:80\n    volumes:\n      - ./html:/var/www/html\n      - ./custom_apps:/var/www/html/custom_apps\n      - ./config:/var/www/html/config\n      - ./data:/var/www/html/data\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=America/Los_Angeles\n      - MYSQL_DATABASE=nextcloud\n      - MYSQL_USER=nextcloud\n      - MYSQL_PASSWORD=dbpassword\n      - MYSQL_HOST=nextclouddb\n      - REDIS_HOST=redis\n\n  nextclouddb:\n    image: mariadb\n    container_name: nextcloud-db\n    restart: unless-stopped\n    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW\n    networks: \n      - cloud\n    volumes:\n      - ./nextclouddb:/var/lib/mysql\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=America/Los_Angeles\n      - MYSQL_RANDOM_ROOT_PASSWORD=true\n      - MYSQL_PASSWORD=dbpassword\n      - MYSQL_DATABASE=nextcloud\n      - MYSQL_USER=nextcloud\n      \n  collabora:\n    image: collabora/code\n    container_name: collabora\n    restart: unless-stopped\n    networks: \n      - cloud\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=America/Los_Angeles\n      - password=password\n      - username=nextcloud\n      - domain=example.com\n      - extra_params=--o:ssl.enable=true\n    ports:\n      - 9980:9980\n\n  redis:\n    image: redis:alpine\n    container_name: redis\n    volumes:\n      - ./redis:/data  \n    networks: \n      - cloud\n  \n  nginx-proxy:\n    image: 'jc21/nginx-proxy-manager:latest'\n    container_name: nginx-proxy\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=America/Los_Angeles\n    restart: unless-stopped\n    ports:\n      - '80:80'\n      - '81:81'\n      - '443:443'\n    volumes:\n      - ./data:/data\n      - ./letsencrypt:/etc/letsencrypt\n\nnetworks:\n  cloud:\n    name: cloud\n    driver: bridge\n```\n\n알겠어요. 이제 한 번 살펴볼게요.\n\n이 Docker Compose 파일은 5개의 컨테이너를 배포합니다. 그들은 다음과 같습니다:\n\n- Nextcloud\n- Nextcloud에 필요한 MySQL 데이터베이스\n- Collabora - 구글 문서와 유사한 멋진 오픈 소스 오피스 스위트입니다. Collabora Office에는 모바일 앱도 있습니다.\n- Redis - 메모리 캐싱입니다. 중요한 파일을 다음 클라우드에 의존할 계획이라면 Redis를 설정하는 것을 강력히 권장합니다.\n- Nginx Proxy Manager - 서버로 들어오는 요청을 처리하는 리버스 프록시 매니저입니다.\n\n\n<div class=\"content-ad\"></div>\n\n## 도커 컴포즈\n\n각 줄이 하는 일에 대한 간단한 설명.\n\nNextcloud:\n\n```js\nnextcloud:\n    image: nextcloud # 사용할 이미지입니다. 공식 Nextcloud 도커 이미지\n    container_name: nextcloud # 컨테이너의 이름입니다. 식별하는 데 도움이 됩니다\n    restart: unless-stopped # 컨테이너가 충돌하는 등의 문제가 발생하면 다시 시작되도록 설정\n    networks: # 모든 컨테이너를 \"cloud\" 네트워크를 통해 연결합니다\n      - cloud\n    depends_on: # Nextcloud를 시작하기 전에 데이터베이스와 레디스 컨테이너가 준비될 때까지 기다립니다\n      - nextclouddb \n      - redis\n    ports: # 서버에 여러 웹 서비스가 있다면 포트를 변경해야 합니다. 저는 Nextcloud를 포트 80에서 8081로 연결하고 있습니다\n      - 8081:80\n    volumes: # 이 부분은 중요합니다. 컨테이너 내의 파일 디렉토리를 실제 컴퓨터의 디렉토리에 매핑합니다\n      - ./html:/var/www/html # 컨테이너 내의 /var/www/html 디렉토리를 docker-compose.yml 파일이 있는 폴더 내의 html 폴더에 매핑합니다\n      - ./custom_apps:/var/www/html/custom_apps # 이러한 볼륨을 사용하면 컨테이너 내의 파일에 쉽게 액세스할 수 있습니다\n      - ./config:/var/www/html/config\n      - ./data:/var/www/html/data\n    environment: # 환경 변수 설정\n      - PUID=1000 # 사용자 ID입니다. 아마도 둘 다 1000이어야 합니다. 이를 잘못 설정하면 파일 권한 문제가 발생할 수 있습니다\n      - PGID=1000 # 사용자 ID를 설정하세요.\n      - TZ=America/Los_Angeles # 사용하는 시간대를 설정하세요\n      - MYSQL_DATABASE=nextcloud # 다음 섹션에서 설정할 데이터베이스 정보입니다\n      - MYSQL_USER=nextcloud\n      - MYSQL_PASSWORD=dbpassword\n      - MYSQL_HOST=nextclouddb\n      - REDIS_HOST=redis # 사용할 Redis 컨테이너\n```\n\n<div class=\"content-ad\"></div>\n\nNextcloud 데이터베이스:\n\n```yaml\nnextclouddb:\n    image: mariadb # 공식 mariadb 이미지\n    container_name: nextcloud-db \n    restart: unless-stopped \n    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW # 정말 기억이 나지 않아요. 알고 계시면 알려주세요.\n    networks: \n      - cloud\n    volumes:\n      - ./nextclouddb:/var/lib/mysql\n    environment:\n      - PUID=1000 # 다른 컨테이너와 동일해야 함\n      - PGID=1000\n      - TZ=America/Los_Angeles\n      - MYSQL_RANDOM_ROOT_PASSWORD=true\n      - MYSQL_PASSWORD=dbpassword # Nextcloud 부분에 입력한 정보와 같아야 함\n      - MYSQL_DATABASE=nextcloud\n      - MYSQL_USER=nextcloud\n```\n\nCollabora (선택 사항, 하지만 정말 멋짐):\n\n```yaml\ncollabora:\n    image: collabora/code:latest\n    container_name: collabora\n    restart: unless-stopped\n    networks: \n      - cloud\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=America/Los_Angeles # 다른 것과 동일해야 함\n      - password=password \n      - username=nextcloud\n      - domain=example.com # Nextcloud가 있는 도메인\n      - extra_params=--o:ssl.enable=true # SSL을 사용하는 경우에 사용합니다. 꼭 사용해야 합니다.\n    ports:\n      - 9980:9980\n```\n\n<div class=\"content-ad\"></div>\n\nRedis (선택 사항이지만, 진지하게, 추가하세요. 파일 잠금 문제가 나타날 수 있으며 Redis가 이를 방지해줄 것입니다):\n\n```js\nredis:\n    image: redis:alpine\n    container_name: redis\n    volumes:\n      - ./redis:/data  \n    networks: \n      - cloud\n```\n\nNginx Proxy Manager:\n\n```js\nnginx-proxy:\n    image: 'jc21/nginx-proxy-manager:latest'\n    container_name: nginx-proxy\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=America/Los_Angeles\n    restart: unless-stopped\n    ports:\n      - '80:80'\n      - '81:81'\n      - '443:443'\n    volumes:\n      - ./data:/data\n      - ./letsencrypt:/etc/letsencrypt\n```\n\n<div class=\"content-ad\"></div>\n\nNginx Proxy Manager는 서버로 들어오는 트래픽을 Nextcloud로 전달하는 멋진 프로그램이에요. 새 호스트를 추가해보세요.\n\n세부 정보 패널에 도메인 이름을 입력해주세요.\n\nScheme = http, Forward Hostname = 이용 중인 기기의 로컬 IP 주소(예: 192.168.1.35), 전달할 포트 = 80.\n\n자산 캐시, 일반적인 공격 차단, 웹소켓 지원은 모두 켜두시는 게 좋아요.\n\n<div class=\"content-ad\"></div>\n\n\"맞춤 위치\" 탭에서 caldav와 carddav를 활성화하여 캘린더와 연락처에 대한 원격 액세스를 허용할 예정입니다.\n\n위치 1:\n\n- 위치 = /.well-known/caldav\n- 스킴 = html\n- 전방 호스트 이름 = `로컬 IP`/ remote.php/dav\n- 전방 포트 80\n\n위치 2:\n\n<div class=\"content-ad\"></div>\n\n- 위치 = /.well-known/carddav\n- scheme = html\n- 전달 호스트 이름 = `로컬 IP`/ remote.php/dav\n- 전달 포트 80\n\n## 추가 구성\n\n이제 Nextcloud를 사용자 정의 도메인과 함께 사용하도록 설정하는 경우 config.php 파일을 열어 신뢰할 수있는 도메인을 사용자의 도메인으로 변경해야합니다.\n\nNextcloud를 네트워크에서 액세스하려는 경우 Nextcloud의 로컬 IP 주소를 추가하는 것이 유용할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n'trusted_domains' => \narray (\n 0 => 'example.com',\n 1 => '192.168.1.12:8081',\n),\n'overwritehost' => 'example.com',\n'overwriteprotocol' => 'https',\n```\n\nNiginx Proxy Manager이 설정되어 있으므로 config.php 파일에 다음을 추가해야 합니다:\n\n```js\n'default_phone_region' => 'US',\n'trustedproxies' => \narray (\n 0 => 'NginxProxyManager',\n 1 => '192.168.0.145',\n),\n```\n\n일부 경고를 해결하려면 다음을 수행해야 합니다:\n  \n\n<div class=\"content-ad\"></div>\n\n```js\n 'default_phone_region' => 'US', \n```\n\n메일 알림을 설정하려면 구성 파일에 다음을 추가해야 합니다. 필요한 값은 이메일 공급업체에서 얻어야 합니다.\n\n```js\n 'mail_from_address' => 'user', # 이메일 사용자를 입력하세요\n 'mail_smtpmode' => 'smtp',\n 'mail_sendmailmode' => 'smtp',\n 'mail_domain' => 'example.com', # 귀하의 이메일 도메인\n 'mail_smtphost' => 'smtp.example.com',\n 'mail_smtpport' => '465',\n 'mail_smtpauth' => 1,\n 'mail_smtpsecure' => 'ssl',\n 'mail_smtpname' => 'user@example.com',\n 'mail_smtppassword' => '비밀번호',\n```\n\n## 컨테이너 실행하기\n\n\n<div class=\"content-ad\"></div>\n\n```yaml\ndocker-compose up -d\n```\n\n축하합니다! Docker 컨테이너와 docker compose를 사용하여 Nextcloud를 설정했습니다! 궁금한 점이 있으면 언제든지 물어보세요.\n\n## 잠재적인 문제점\n\n- 502 Gateway 오류가 발생하면 호스트 서버의 도메인에 대한 브라우저 쿠키를 지워보세요. 대부분의 경우에 도움이 됩니다.\n- 정기적으로 Docker 이미지를 업데이트해야 합니다. Docker에서는 Nextcloud의 버전을 한 번에 건너뛸 수 없습니다. 예를 들어, 현재 버전이 24이고 가장 최신 버전이 26인 경우, 바로 26으로 업데이트하지 마세요. 저는 이를 까다로운 방법으로 배웠습니다. 먼저 25로 업데이트하세요. 그래서 정기적으로 `docker-compose pull` 명령을 실행해 주세요.```","ogImage":{"url":"/assets/img/2024-05-27-DeployNextcloudwithDockerCompose_0.png"},"coverImage":"/assets/img/2024-05-27-DeployNextcloudwithDockerCompose_0.png","tag":["Tech"],"readingTime":8},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>DIY, 실험, 그리고 학습을 즐기며, Google Drive와 One Drive를 대체하기 위해 Nextcloud 서버를 설정했어요. 몇 년 동안 제 Nextcloud 인스턴스는 백업된 파일, 연락처, 캘린더, 노트 등이 모두 모여 있는 집이 되었고, Collabora 덕분에 서버에는 사무실 스위트도 갖췄네요.</p>\n<p>Nextcloud는 여러 서비스에 대한 멋진 오픈 소스 대안일 수 있어요.</p>\n<p>좋은 점이든 나쁜 점이든, 저는 도커 컨테이너를 사용해 홈 서버에 Nextcloud를 배포하기로 결정했어요. 도커 경험을 쌓고자 하거나 Nextcloud 배포를 위한 도커 컴포즈 파일을 설정하는 방법을 찾고 있다면, 여기가 바로 옳은 장소에요.</p>\n<p>다음은 docker-compose.yml입니다.</p>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">'3'</span>\n\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-attr\">nextcloud:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nextcloud</span>\n    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">nextcloud</span>\n    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span>\n    <span class=\"hljs-attr\">networks:</span> \n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">cloud</span>\n    <span class=\"hljs-attr\">depends_on:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">nextclouddb</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">redis</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">8081</span><span class=\"hljs-string\">:80</span>\n    <span class=\"hljs-attr\">volumes:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./html:/var/www/html</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./custom_apps:/var/www/html/custom_apps</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./config:/var/www/html/config</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/var/www/html/data</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">PUID=1000</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">PGID=1000</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">TZ=America/Los_Angeles</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">MYSQL_DATABASE=nextcloud</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">MYSQL_USER=nextcloud</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">MYSQL_PASSWORD=dbpassword</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">MYSQL_HOST=nextclouddb</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">REDIS_HOST=redis</span>\n\n  <span class=\"hljs-attr\">nextclouddb:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mariadb</span>\n    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">nextcloud-db</span>\n    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span>\n    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-string\">--transaction-isolation=READ-COMMITTED</span> <span class=\"hljs-string\">--binlog-format=ROW</span>\n    <span class=\"hljs-attr\">networks:</span> \n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">cloud</span>\n    <span class=\"hljs-attr\">volumes:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./nextclouddb:/var/lib/mysql</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">PUID=1000</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">PGID=1000</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">TZ=America/Los_Angeles</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">MYSQL_RANDOM_ROOT_PASSWORD=true</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">MYSQL_PASSWORD=dbpassword</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">MYSQL_DATABASE=nextcloud</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">MYSQL_USER=nextcloud</span>\n      \n  <span class=\"hljs-attr\">collabora:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">collabora/code</span>\n    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">collabora</span>\n    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span>\n    <span class=\"hljs-attr\">networks:</span> \n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">cloud</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">PUID=1000</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">PGID=1000</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">TZ=America/Los_Angeles</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">password=password</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">username=nextcloud</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">domain=example.com</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">extra_params=--o:ssl.enable=true</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">9980</span><span class=\"hljs-string\">:9980</span>\n\n  <span class=\"hljs-attr\">redis:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">redis:alpine</span>\n    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">redis</span>\n    <span class=\"hljs-attr\">volumes:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./redis:/data</span>  \n    <span class=\"hljs-attr\">networks:</span> \n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">cloud</span>\n  \n  <span class=\"hljs-attr\">nginx-proxy:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">'jc21/nginx-proxy-manager:latest'</span>\n    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">nginx-proxy</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">PUID=1000</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">PGID=1000</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">TZ=America/Los_Angeles</span>\n    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">'80:80'</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">'81:81'</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">'443:443'</span>\n    <span class=\"hljs-attr\">volumes:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/data</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./letsencrypt:/etc/letsencrypt</span>\n\n<span class=\"hljs-attr\">networks:</span>\n  <span class=\"hljs-attr\">cloud:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">cloud</span>\n    <span class=\"hljs-attr\">driver:</span> <span class=\"hljs-string\">bridge</span>\n</code></pre>\n<p>알겠어요. 이제 한 번 살펴볼게요.</p>\n<p>이 Docker Compose 파일은 5개의 컨테이너를 배포합니다. 그들은 다음과 같습니다:</p>\n<ul>\n<li>Nextcloud</li>\n<li>Nextcloud에 필요한 MySQL 데이터베이스</li>\n<li>Collabora - 구글 문서와 유사한 멋진 오픈 소스 오피스 스위트입니다. Collabora Office에는 모바일 앱도 있습니다.</li>\n<li>Redis - 메모리 캐싱입니다. 중요한 파일을 다음 클라우드에 의존할 계획이라면 Redis를 설정하는 것을 강력히 권장합니다.</li>\n<li>Nginx Proxy Manager - 서버로 들어오는 요청을 처리하는 리버스 프록시 매니저입니다.</li>\n</ul>\n<h2>도커 컴포즈</h2>\n<p>각 줄이 하는 일에 대한 간단한 설명.</p>\n<p>Nextcloud:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-attr\">nextcloud</span>:\n    <span class=\"hljs-attr\">image</span>: nextcloud # 사용할 이미지입니다. 공식 <span class=\"hljs-title class_\">Nextcloud</span> 도커 이미지\n    <span class=\"hljs-attr\">container_name</span>: nextcloud # 컨테이너의 이름입니다. 식별하는 데 도움이 됩니다\n    <span class=\"hljs-attr\">restart</span>: unless-stopped # 컨테이너가 충돌하는 등의 문제가 발생하면 다시 시작되도록 설정\n    <span class=\"hljs-attr\">networks</span>: # 모든 컨테이너를 <span class=\"hljs-string\">\"cloud\"</span> 네트워크를 통해 연결합니다\n      - cloud\n    <span class=\"hljs-attr\">depends_on</span>: # <span class=\"hljs-title class_\">Nextcloud</span>를 시작하기 전에 데이터베이스와 레디스 컨테이너가 준비될 때까지 기다립니다\n      - nextclouddb \n      - redis\n    <span class=\"hljs-attr\">ports</span>: # 서버에 여러 웹 서비스가 있다면 포트를 변경해야 합니다. 저는 <span class=\"hljs-title class_\">Nextcloud</span>를 포트 <span class=\"hljs-number\">80</span>에서 <span class=\"hljs-number\">8081</span>로 연결하고 있습니다\n      - <span class=\"hljs-number\">8081</span>:<span class=\"hljs-number\">80</span>\n    <span class=\"hljs-attr\">volumes</span>: # 이 부분은 중요합니다. 컨테이너 내의 파일 디렉토리를 실제 컴퓨터의 디렉토리에 매핑합니다\n      - ./<span class=\"hljs-attr\">html</span>:<span class=\"hljs-regexp\">/var/</span>www/html # 컨테이너 내의 /<span class=\"hljs-keyword\">var</span>/www/html 디렉토리를 docker-compose.<span class=\"hljs-property\">yml</span> 파일이 있는 폴더 내의 html 폴더에 매핑합니다\n      - ./<span class=\"hljs-attr\">custom_apps</span>:<span class=\"hljs-regexp\">/var/</span>www/html/custom_apps # 이러한 볼륨을 사용하면 컨테이너 내의 파일에 쉽게 액세스할 수 있습니다\n      - ./<span class=\"hljs-attr\">config</span>:<span class=\"hljs-regexp\">/var/</span>www/html/config\n      - ./<span class=\"hljs-attr\">data</span>:<span class=\"hljs-regexp\">/var/</span>www/html/data\n    <span class=\"hljs-attr\">environment</span>: # 환경 변수 설정\n      - <span class=\"hljs-variable constant_\">PUID</span>=<span class=\"hljs-number\">1000</span> # 사용자 <span class=\"hljs-variable constant_\">ID</span>입니다. 아마도 둘 다 <span class=\"hljs-number\">1000</span>이어야 합니다. 이를 잘못 설정하면 파일 권한 문제가 발생할 수 있습니다\n      - <span class=\"hljs-variable constant_\">PGID</span>=<span class=\"hljs-number\">1000</span> # 사용자 <span class=\"hljs-variable constant_\">ID</span>를 설정하세요.\n      - <span class=\"hljs-variable constant_\">TZ</span>=<span class=\"hljs-title class_\">America</span>/<span class=\"hljs-title class_\">Los</span>_Angeles # 사용하는 시간대를 설정하세요\n      - <span class=\"hljs-variable constant_\">MYSQL_DATABASE</span>=nextcloud # 다음 섹션에서 설정할 데이터베이스 정보입니다\n      - <span class=\"hljs-variable constant_\">MYSQL_USER</span>=nextcloud\n      - <span class=\"hljs-variable constant_\">MYSQL_PASSWORD</span>=dbpassword\n      - <span class=\"hljs-variable constant_\">MYSQL_HOST</span>=nextclouddb\n      - <span class=\"hljs-variable constant_\">REDIS_HOST</span>=redis # 사용할 <span class=\"hljs-title class_\">Redis</span> 컨테이너\n</code></pre>\n<p>Nextcloud 데이터베이스:</p>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">nextclouddb:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mariadb</span> <span class=\"hljs-comment\"># 공식 mariadb 이미지</span>\n    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">nextcloud-db</span> \n    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span> \n    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-string\">--transaction-isolation=READ-COMMITTED</span> <span class=\"hljs-string\">--binlog-format=ROW</span> <span class=\"hljs-comment\"># 정말 기억이 나지 않아요. 알고 계시면 알려주세요.</span>\n    <span class=\"hljs-attr\">networks:</span> \n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">cloud</span>\n    <span class=\"hljs-attr\">volumes:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./nextclouddb:/var/lib/mysql</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">PUID=1000</span> <span class=\"hljs-comment\"># 다른 컨테이너와 동일해야 함</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">PGID=1000</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">TZ=America/Los_Angeles</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">MYSQL_RANDOM_ROOT_PASSWORD=true</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">MYSQL_PASSWORD=dbpassword</span> <span class=\"hljs-comment\"># Nextcloud 부분에 입력한 정보와 같아야 함</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">MYSQL_DATABASE=nextcloud</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">MYSQL_USER=nextcloud</span>\n</code></pre>\n<p>Collabora (선택 사항, 하지만 정말 멋짐):</p>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">collabora:</span>\n    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">collabora/code:latest</span>\n    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">collabora</span>\n    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">unless-stopped</span>\n    <span class=\"hljs-attr\">networks:</span> \n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">cloud</span>\n    <span class=\"hljs-attr\">environment:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">PUID=1000</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">PGID=1000</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">TZ=America/Los_Angeles</span> <span class=\"hljs-comment\"># 다른 것과 동일해야 함</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">password=password</span> \n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">username=nextcloud</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">domain=example.com</span> <span class=\"hljs-comment\"># Nextcloud가 있는 도메인</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">extra_params=--o:ssl.enable=true</span> <span class=\"hljs-comment\"># SSL을 사용하는 경우에 사용합니다. 꼭 사용해야 합니다.</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">9980</span><span class=\"hljs-string\">:9980</span>\n</code></pre>\n<p>Redis (선택 사항이지만, 진지하게, 추가하세요. 파일 잠금 문제가 나타날 수 있으며 Redis가 이를 방지해줄 것입니다):</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-attr\">redis</span>:\n    <span class=\"hljs-attr\">image</span>: <span class=\"hljs-attr\">redis</span>:alpine\n    <span class=\"hljs-attr\">container_name</span>: redis\n    <span class=\"hljs-attr\">volumes</span>:\n      - ./<span class=\"hljs-attr\">redis</span>:/data  \n    <span class=\"hljs-attr\">networks</span>: \n      - cloud\n</code></pre>\n<p>Nginx Proxy Manager:</p>\n<pre><code class=\"hljs language-js\">nginx-<span class=\"hljs-attr\">proxy</span>:\n    <span class=\"hljs-attr\">image</span>: <span class=\"hljs-string\">'jc21/nginx-proxy-manager:latest'</span>\n    <span class=\"hljs-attr\">container_name</span>: nginx-proxy\n    <span class=\"hljs-attr\">environment</span>:\n      - <span class=\"hljs-variable constant_\">PUID</span>=<span class=\"hljs-number\">1000</span>\n      - <span class=\"hljs-variable constant_\">PGID</span>=<span class=\"hljs-number\">1000</span>\n      - <span class=\"hljs-variable constant_\">TZ</span>=<span class=\"hljs-title class_\">America</span>/<span class=\"hljs-title class_\">Los</span>_Angeles\n    <span class=\"hljs-attr\">restart</span>: unless-stopped\n    <span class=\"hljs-attr\">ports</span>:\n      - <span class=\"hljs-string\">'80:80'</span>\n      - <span class=\"hljs-string\">'81:81'</span>\n      - <span class=\"hljs-string\">'443:443'</span>\n    <span class=\"hljs-attr\">volumes</span>:\n      - ./<span class=\"hljs-attr\">data</span>:/data\n      - ./<span class=\"hljs-attr\">letsencrypt</span>:<span class=\"hljs-regexp\">/etc/</span>letsencrypt\n</code></pre>\n<p>Nginx Proxy Manager는 서버로 들어오는 트래픽을 Nextcloud로 전달하는 멋진 프로그램이에요. 새 호스트를 추가해보세요.</p>\n<p>세부 정보 패널에 도메인 이름을 입력해주세요.</p>\n<p>Scheme = http, Forward Hostname = 이용 중인 기기의 로컬 IP 주소(예: 192.168.1.35), 전달할 포트 = 80.</p>\n<p>자산 캐시, 일반적인 공격 차단, 웹소켓 지원은 모두 켜두시는 게 좋아요.</p>\n<p>\"맞춤 위치\" 탭에서 caldav와 carddav를 활성화하여 캘린더와 연락처에 대한 원격 액세스를 허용할 예정입니다.</p>\n<p>위치 1:</p>\n<ul>\n<li>위치 = /.well-known/caldav</li>\n<li>스킴 = html</li>\n<li>전방 호스트 이름 = <code>로컬 IP</code>/ remote.php/dav</li>\n<li>전방 포트 80</li>\n</ul>\n<p>위치 2:</p>\n<ul>\n<li>위치 = /.well-known/carddav</li>\n<li>scheme = html</li>\n<li>전달 호스트 이름 = <code>로컬 IP</code>/ remote.php/dav</li>\n<li>전달 포트 80</li>\n</ul>\n<h2>추가 구성</h2>\n<p>이제 Nextcloud를 사용자 정의 도메인과 함께 사용하도록 설정하는 경우 config.php 파일을 열어 신뢰할 수있는 도메인을 사용자의 도메인으로 변경해야합니다.</p>\n<p>Nextcloud를 네트워크에서 액세스하려는 경우 Nextcloud의 로컬 IP 주소를 추가하는 것이 유용할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-string\">'trusted_domains'</span> => \narray (\n <span class=\"hljs-number\">0</span> => <span class=\"hljs-string\">'example.com'</span>,\n <span class=\"hljs-number\">1</span> => <span class=\"hljs-string\">'192.168.1.12:8081'</span>,\n),\n<span class=\"hljs-string\">'overwritehost'</span> => <span class=\"hljs-string\">'example.com'</span>,\n<span class=\"hljs-string\">'overwriteprotocol'</span> => <span class=\"hljs-string\">'https'</span>,\n</code></pre>\n<p>Niginx Proxy Manager이 설정되어 있으므로 config.php 파일에 다음을 추가해야 합니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-string\">'default_phone_region'</span> => <span class=\"hljs-string\">'US'</span>,\n<span class=\"hljs-string\">'trustedproxies'</span> => \narray (\n <span class=\"hljs-number\">0</span> => <span class=\"hljs-string\">'NginxProxyManager'</span>,\n <span class=\"hljs-number\">1</span> => <span class=\"hljs-string\">'192.168.0.145'</span>,\n),\n</code></pre>\n<p>일부 경고를 해결하려면 다음을 수행해야 합니다:</p>\n<pre><code class=\"hljs language-js\"> <span class=\"hljs-string\">'default_phone_region'</span> => <span class=\"hljs-string\">'US'</span>, \n</code></pre>\n<p>메일 알림을 설정하려면 구성 파일에 다음을 추가해야 합니다. 필요한 값은 이메일 공급업체에서 얻어야 합니다.</p>\n<pre><code class=\"hljs language-js\"> <span class=\"hljs-string\">'mail_from_address'</span> => <span class=\"hljs-string\">'user'</span>, # 이메일 사용자를 입력하세요\n <span class=\"hljs-string\">'mail_smtpmode'</span> => <span class=\"hljs-string\">'smtp'</span>,\n <span class=\"hljs-string\">'mail_sendmailmode'</span> => <span class=\"hljs-string\">'smtp'</span>,\n <span class=\"hljs-string\">'mail_domain'</span> => <span class=\"hljs-string\">'example.com'</span>, # 귀하의 이메일 도메인\n <span class=\"hljs-string\">'mail_smtphost'</span> => <span class=\"hljs-string\">'smtp.example.com'</span>,\n <span class=\"hljs-string\">'mail_smtpport'</span> => <span class=\"hljs-string\">'465'</span>,\n <span class=\"hljs-string\">'mail_smtpauth'</span> => <span class=\"hljs-number\">1</span>,\n <span class=\"hljs-string\">'mail_smtpsecure'</span> => <span class=\"hljs-string\">'ssl'</span>,\n <span class=\"hljs-string\">'mail_smtpname'</span> => <span class=\"hljs-string\">'user@example.com'</span>,\n <span class=\"hljs-string\">'mail_smtppassword'</span> => <span class=\"hljs-string\">'비밀번호'</span>,\n</code></pre>\n<h2>컨테이너 실행하기</h2>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-string\">docker-compose</span> <span class=\"hljs-string\">up</span> <span class=\"hljs-string\">-d</span>\n</code></pre>\n<p>축하합니다! Docker 컨테이너와 docker compose를 사용하여 Nextcloud를 설정했습니다! 궁금한 점이 있으면 언제든지 물어보세요.</p>\n<h2>잠재적인 문제점</h2>\n<ul>\n<li>502 Gateway 오류가 발생하면 호스트 서버의 도메인에 대한 브라우저 쿠키를 지워보세요. 대부분의 경우에 도움이 됩니다.</li>\n<li>정기적으로 Docker 이미지를 업데이트해야 합니다. Docker에서는 Nextcloud의 버전을 한 번에 건너뛸 수 없습니다. 예를 들어, 현재 버전이 24이고 가장 최신 버전이 26인 경우, 바로 26으로 업데이트하지 마세요. 저는 이를 까다로운 방법으로 배웠습니다. 먼저 25로 업데이트하세요. 그래서 정기적으로 <code>docker-compose pull</code> 명령을 실행해 주세요.```</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}