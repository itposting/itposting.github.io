{"pageProps":{"post":{"title":"90의 작업을 처리할 수 있는 10가지 SQL 문장","description":"","date":"2024-05-27 13:00","slug":"2024-05-27-10SQLStatementsThatCanHandle90ofTasks","content":"\n구조화된 쿼리 언어(SQL)는 관계형 데이터베이스를 관리하고 질의하는 강력한 도구입니다. 초보자든 경험 많은 데이터 전문가든 상관없이, 여러분은 자주 사용하게 될 특정 SQL 문을 발견할 것입니다. 본 문서에서는 데이터베이스 작업의 90%를 처리할 수 있는 10가지 필수 SQL 문을 다룹니다. 코드 예시를 함께 제공할 것입니다.\n\n![이미지](/assets/img/2024-05-27-10SQLStatementsThatCanHandle90ofTasks_0.png)\n\n# 1. 소개\n\n# SQL의 중요성\n\n<div class=\"content-ad\"></div>\n\nSQL은 관계형 데이터베이스와 상호 작용하기 위한 표준 언어입니다. 데이터를 검색하거나 데이터베이스 구조를 수정하는 등 다양한 작업을 수행할 수 있습니다. SQL을 이해하는 것은 데이터 작업을 하는 사람에게 필수적이며, 데이터 분석, 보고 및 애플리케이션 개발을 위한 기초를 제공합니다.\n\n# 2. SELECT 문\n\n# 데이터 검색\n\nSELECT 문은 하나 이상의 테이블에서 데이터를 검색하는 데 사용됩니다. 검색할 열을 지정하고 결과를 필터링할 조건을 추가할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n-- 테이블에서 모든 열을 검색합니다\nSELECT * FROM employees;\n\n-- 특정 열을 검색합니다\nSELECT first_name, last_name FROM employees;\n\n-- 결과를 필터링하기 위해 조건을 추가합니다\nSELECT product_name, price FROM products WHERE price > 50;\n```\n\n# 3. INSERT INTO 문\n\n# 새 데이터 추가\n\nINSERT INTO 문을 사용하면 테이블에 새로운 데이터 행을 추가할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n-- 단일 행 삽입\nINSERT INTO customers (first_name, last_name, email) VALUES ('John', 'Doe', 'john@example.com');\n\n-- 여러 행 삽입\nINSERT INTO orders (order_date, total_amount) VALUES\n    ('2023-01-15', 150.00),\n    ('2023-01-16', 220.50),\n    ('2023-01-17', 75.25);\n```\n\n# 4. UPDATE 문\n\n# 기존 데이터 수정하기\n\nUPDATE 문은 테이블의 기존 데이터를 수정하는 데 사용됩니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n-- 하나의 행 업데이트하기\nUPDATE products SET price = 25.99 WHERE product_id = 101;\n\n-- 여러 행 업데이트하기\nUPDATE employees SET manager_id = 105 WHERE department = 'Sales';\n```\n\n# 5. DELETE 문\n\n# 데이터 삭제\n\nDELETE 문은 테이블에서 행을 제거하는 데 사용됩니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n-- 한 행 삭제\nDELETE FROM customers WHERE customer_id = 201;\n\n-- 조건을 충족하는 모든 행 삭제\nDELETE FROM orders WHERE order_date < '2023-01-15';\n```\n\n## 6. CREATE TABLE 문\n\n### 새 테이블 생성\n\nCREATE TABLE 문은 지정된 열과 데이터 유형을 가진 새 테이블을 생성하는 데 사용됩니다.\n\n<div class=\"content-ad\"></div>\n\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\n\n## 7. ALTER TABLE 문\n\n## 테이블 수정\n\nALTER TABLE 문을 사용하면 기존 테이블을 추가, 수정 또는 삭제하여 테이블을 수정할 수 있습니다.\n\n\n\n<div class=\"content-ad\"></div>\n\n```sql\n-- 새 열 추가\nALTER TABLE employees ADD COLUMN hire_date DATE;\n\n-- 열 데이터 유형 수정\nALTER TABLE customers ALTER COLUMN phone_number VARCHAR(15);\n```\n\n# 8. DROP TABLE 문\n\n# 테이블 삭제하기\n\nDROP TABLE 문은 기존 테이블과 해당 데이터를 모두 삭제하는 데 사용됩니다.\n\n<div class=\"content-ad\"></div>\n\n```sql\n-- 테이블 삭제\nDROP TABLE products;\n```\n\n## 9. WHERE 절\n\n## 데이터 필터링\n\nWHERE 절은 지정된 조건에 따라 행을 필터링하는 데 사용됩니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n-- 가격이 50보다 큰 제품 조회\nSELECT product_name, price FROM products WHERE price > 50;\n\n-- 영업 부서의 직원 조회\nSELECT first_name, last_name FROM employees WHERE department = 'Sales';\n```\n\n# 10. JOIN 절\n\n# 여러 테이블에서 데이터 결합\n\nJOIN 절을 사용하여 서로 관련된 열을 기반으로 두 개 이상의 테이블에서 행을 결합합니다.\n\n<div class=\"content-ad\"></div>\n\n```sql\n-- 고객 이름과 주문 조회하기\nSELECT c.first_name, c.last_name, o.order_date\nFROM customers AS c\nJOIN orders AS o ON c.customer_id = o.customer_id;\n```\n\n# 11. GROUP BY 절\n\n# 데이터 집계\n\nGROUP BY 절은 특정 열의 값을 가진 행을 그룹화하는 데 사용되며, 종종 SUM 및 COUNT와 같은 집계 함수와 함께 사용됩니다.\n\n<div class=\"content-ad\"></div>\n\n```sql\n-- 각 제품별 총 매출 계산\nSELECT product_id, SUM(quantity * price) AS total_sales\nFROM order_details\nGROUP BY product_id;\n```\n\n# 12. 결론\n\n# 기초 마스터\n\n이 10가지 SQL 문은 관계형 데이터베이스 작업 시 대부분의 작업을 다룹니다. 이 문장들을 이해하고 숙달함으로써 데이터베이스 관리 및 데이터 조작에 대한 견고한 기초를 갖게 될 것입니다. SQL은 다양한 기능을 제공하는 언어이며, 데이터 작업에 더욱 강력한 방법을 발견하면서 더욱 쉽게 작업할 수 있을 것입니다.\n\n<div class=\"content-ad\"></div>\n\n# SQL 기초 지식\n\n시간을 내어 주셔서 감사합니다! 🚀\nSQL 기초 지식에서 더 많은 콘텐츠를 찾아보실 수 있어요! 💫\n","ogImage":{"url":"/assets/img/2024-05-27-10SQLStatementsThatCanHandle90ofTasks_0.png"},"coverImage":"/assets/img/2024-05-27-10SQLStatementsThatCanHandle90ofTasks_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>구조화된 쿼리 언어(SQL)는 관계형 데이터베이스를 관리하고 질의하는 강력한 도구입니다. 초보자든 경험 많은 데이터 전문가든 상관없이, 여러분은 자주 사용하게 될 특정 SQL 문을 발견할 것입니다. 본 문서에서는 데이터베이스 작업의 90%를 처리할 수 있는 10가지 필수 SQL 문을 다룹니다. 코드 예시를 함께 제공할 것입니다.</p>\n<p><img src=\"/assets/img/2024-05-27-10SQLStatementsThatCanHandle90ofTasks_0.png\" alt=\"이미지\"></p>\n<h1>1. 소개</h1>\n<h1>SQL의 중요성</h1>\n<p>SQL은 관계형 데이터베이스와 상호 작용하기 위한 표준 언어입니다. 데이터를 검색하거나 데이터베이스 구조를 수정하는 등 다양한 작업을 수행할 수 있습니다. SQL을 이해하는 것은 데이터 작업을 하는 사람에게 필수적이며, 데이터 분석, 보고 및 애플리케이션 개발을 위한 기초를 제공합니다.</p>\n<h1>2. SELECT 문</h1>\n<h1>데이터 검색</h1>\n<p>SELECT 문은 하나 이상의 테이블에서 데이터를 검색하는 데 사용됩니다. 검색할 열을 지정하고 결과를 필터링할 조건을 추가할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">-- 테이블에서 모든 열을 검색합니다\n<span class=\"hljs-variable constant_\">SELECT</span> * <span class=\"hljs-variable constant_\">FROM</span> employees;\n\n-- 특정 열을 검색합니다\n<span class=\"hljs-variable constant_\">SELECT</span> first_name, last_name <span class=\"hljs-variable constant_\">FROM</span> employees;\n\n-- 결과를 필터링하기 위해 조건을 추가합니다\n<span class=\"hljs-variable constant_\">SELECT</span> product_name, price <span class=\"hljs-variable constant_\">FROM</span> products <span class=\"hljs-variable constant_\">WHERE</span> price > <span class=\"hljs-number\">50</span>;\n</code></pre>\n<h1>3. INSERT INTO 문</h1>\n<h1>새 데이터 추가</h1>\n<p>INSERT INTO 문을 사용하면 테이블에 새로운 데이터 행을 추가할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">-- 단일 행 삽입\n<span class=\"hljs-variable constant_\">INSERT</span> <span class=\"hljs-variable constant_\">INTO</span> customers (first_name, last_name, email) <span class=\"hljs-variable constant_\">VALUES</span> (<span class=\"hljs-string\">'John'</span>, <span class=\"hljs-string\">'Doe'</span>, <span class=\"hljs-string\">'john@example.com'</span>);\n\n-- 여러 행 삽입\n<span class=\"hljs-variable constant_\">INSERT</span> <span class=\"hljs-variable constant_\">INTO</span> orders (order_date, total_amount) <span class=\"hljs-variable constant_\">VALUES</span>\n    (<span class=\"hljs-string\">'2023-01-15'</span>, <span class=\"hljs-number\">150.00</span>),\n    (<span class=\"hljs-string\">'2023-01-16'</span>, <span class=\"hljs-number\">220.50</span>),\n    (<span class=\"hljs-string\">'2023-01-17'</span>, <span class=\"hljs-number\">75.25</span>);\n</code></pre>\n<h1>4. UPDATE 문</h1>\n<h1>기존 데이터 수정하기</h1>\n<p>UPDATE 문은 테이블의 기존 데이터를 수정하는 데 사용됩니다.</p>\n<pre><code class=\"hljs language-js\">-- 하나의 행 업데이트하기\n<span class=\"hljs-variable constant_\">UPDATE</span> products <span class=\"hljs-variable constant_\">SET</span> price = <span class=\"hljs-number\">25.99</span> <span class=\"hljs-variable constant_\">WHERE</span> product_id = <span class=\"hljs-number\">101</span>;\n\n-- 여러 행 업데이트하기\n<span class=\"hljs-variable constant_\">UPDATE</span> employees <span class=\"hljs-variable constant_\">SET</span> manager_id = <span class=\"hljs-number\">105</span> <span class=\"hljs-variable constant_\">WHERE</span> department = <span class=\"hljs-string\">'Sales'</span>;\n</code></pre>\n<h1>5. DELETE 문</h1>\n<h1>데이터 삭제</h1>\n<p>DELETE 문은 테이블에서 행을 제거하는 데 사용됩니다.</p>\n<pre><code class=\"hljs language-js\">-- 한 행 삭제\n<span class=\"hljs-variable constant_\">DELETE</span> <span class=\"hljs-variable constant_\">FROM</span> customers <span class=\"hljs-variable constant_\">WHERE</span> customer_id = <span class=\"hljs-number\">201</span>;\n\n-- 조건을 충족하는 모든 행 삭제\n<span class=\"hljs-variable constant_\">DELETE</span> <span class=\"hljs-variable constant_\">FROM</span> orders <span class=\"hljs-variable constant_\">WHERE</span> order_date &#x3C; <span class=\"hljs-string\">'2023-01-15'</span>;\n</code></pre>\n<h2>6. CREATE TABLE 문</h2>\n<h3>새 테이블 생성</h3>\n<p>CREATE TABLE 문은 지정된 열과 데이터 유형을 가진 새 테이블을 생성하는 데 사용됩니다.</p>\n<p>CREATE TABLE products (\nproduct_id INT PRIMARY KEY,\nproduct_name VARCHAR(255),\nprice DECIMAL(10, 2)\n);</p>\n<h2>7. ALTER TABLE 문</h2>\n<h2>테이블 수정</h2>\n<p>ALTER TABLE 문을 사용하면 기존 테이블을 추가, 수정 또는 삭제하여 테이블을 수정할 수 있습니다.</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- 새 열 추가</span>\n<span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> employees <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">COLUMN</span> hire_date <span class=\"hljs-type\">DATE</span>;\n\n<span class=\"hljs-comment\">-- 열 데이터 유형 수정</span>\n<span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> customers <span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">COLUMN</span> phone_number <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">15</span>);\n</code></pre>\n<h1>8. DROP TABLE 문</h1>\n<h1>테이블 삭제하기</h1>\n<p>DROP TABLE 문은 기존 테이블과 해당 데이터를 모두 삭제하는 데 사용됩니다.</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- 테이블 삭제</span>\n<span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TABLE</span> products;\n</code></pre>\n<h2>9. WHERE 절</h2>\n<h2>데이터 필터링</h2>\n<p>WHERE 절은 지정된 조건에 따라 행을 필터링하는 데 사용됩니다.</p>\n<pre><code class=\"hljs language-js\">-- 가격이 <span class=\"hljs-number\">50</span>보다 큰 제품 조회\n<span class=\"hljs-variable constant_\">SELECT</span> product_name, price <span class=\"hljs-variable constant_\">FROM</span> products <span class=\"hljs-variable constant_\">WHERE</span> price > <span class=\"hljs-number\">50</span>;\n\n-- 영업 부서의 직원 조회\n<span class=\"hljs-variable constant_\">SELECT</span> first_name, last_name <span class=\"hljs-variable constant_\">FROM</span> employees <span class=\"hljs-variable constant_\">WHERE</span> department = <span class=\"hljs-string\">'Sales'</span>;\n</code></pre>\n<h1>10. JOIN 절</h1>\n<h1>여러 테이블에서 데이터 결합</h1>\n<p>JOIN 절을 사용하여 서로 관련된 열을 기반으로 두 개 이상의 테이블에서 행을 결합합니다.</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- 고객 이름과 주문 조회하기</span>\n<span class=\"hljs-keyword\">SELECT</span> c.first_name, c.last_name, o.order_date\n<span class=\"hljs-keyword\">FROM</span> customers <span class=\"hljs-keyword\">AS</span> c\n<span class=\"hljs-keyword\">JOIN</span> orders <span class=\"hljs-keyword\">AS</span> o <span class=\"hljs-keyword\">ON</span> c.customer_id <span class=\"hljs-operator\">=</span> o.customer_id;\n</code></pre>\n<h1>11. GROUP BY 절</h1>\n<h1>데이터 집계</h1>\n<p>GROUP BY 절은 특정 열의 값을 가진 행을 그룹화하는 데 사용되며, 종종 SUM 및 COUNT와 같은 집계 함수와 함께 사용됩니다.</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- 각 제품별 총 매출 계산</span>\n<span class=\"hljs-keyword\">SELECT</span> product_id, <span class=\"hljs-built_in\">SUM</span>(quantity <span class=\"hljs-operator\">*</span> price) <span class=\"hljs-keyword\">AS</span> total_sales\n<span class=\"hljs-keyword\">FROM</span> order_details\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> product_id;\n</code></pre>\n<h1>12. 결론</h1>\n<h1>기초 마스터</h1>\n<p>이 10가지 SQL 문은 관계형 데이터베이스 작업 시 대부분의 작업을 다룹니다. 이 문장들을 이해하고 숙달함으로써 데이터베이스 관리 및 데이터 조작에 대한 견고한 기초를 갖게 될 것입니다. SQL은 다양한 기능을 제공하는 언어이며, 데이터 작업에 더욱 강력한 방법을 발견하면서 더욱 쉽게 작업할 수 있을 것입니다.</p>\n<h1>SQL 기초 지식</h1>\n<p>시간을 내어 주셔서 감사합니다! 🚀\nSQL 기초 지식에서 더 많은 콘텐츠를 찾아보실 수 있어요! 💫</p>\n</body>\n</html>\n"},"__N_SSG":true}