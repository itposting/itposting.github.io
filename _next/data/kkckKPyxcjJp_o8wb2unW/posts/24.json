{"pageProps":{"posts":[{"title":"리눅스 커널 리눅스 시스템의 심장과 두뇌","description":"","date":"2024-06-23 15:24","slug":"2024-06-23-TheLinuxKernelTheHeartandBrainofLinuxSystems","content":"\n\n\n![Linux Kernel](/assets/img/2024-06-23-TheLinuxKernelTheHeartandBrainofLinuxSystems_0.png)\n\n만약 리눅스를 사용해 본 적이 있다면, 리눅스 커널을 만난 적이 있을 것입니다. 물론 이를 인식하지 못했을지도 모릅니다. 커널은 컴퓨터의 심장이자 두뇌라고 생각해 보세요. 컴퓨터 안에서 일어나는 모든 일, 애플리케이션 시작부터 인터넷 연결까지 모두 커널이 책임지고 있습니다. 그렇다면 리눅스 커널은 정확히 무엇이고, 어째서 중요한 것일까요? 함께 알아봅시다!\n\n# 리눅스 커널이란?\n\n리눅스 커널은 리눅스 운영 체제의 핵심 부분입니다. 커널은 컴퓨터의 하드웨어(예: CPU, 메모리, 디바이스)와 사용하는 소프트웨어 애플리케이션 사이의 다리 역할을 합니다. 커널이 없다면 소프트웨어가 하드웨어와 통신할 수 없어 아무 것도 작동하지 않을 것입니다.\n\n\n<div class=\"content-ad\"></div>\n\n# 역사 소개\n\n## 기원과 창조\n\n리눅스 커널의 이야기는 1991년 핀란드 출신 컴퓨터과학 학생인 Linus Torvalds와 함께 시작되었습니다. 그때 Torvalds는 교육 목적으로 사용되는 작은 Unix와 유사한 시스템인 MINIX의 한계에 좌절했습니다. 개인 컴퓨터에서 운영될 수 있는 무료 오픈 소스 운영 체제를 만들고 싶어한 Torvalds는 리눅스 커널을 개발하기 시작했습니다.\n\n1991년 8월 26일, Torvalds는 comp.os.minix 뉴스 그룹에서 자신의 프로젝트를 발표했습니다.\n\n<div class=\"content-ad\"></div>\n\n이 겸손한 발표는 컴퓨팅 역사상 가장 중요한 프로젝트 중 하나로 자리매김하게 될 시작을 알렸습니다.\n\n## 초기 개발과 성장\n\n토르발즈는 1991년 9월 17일에 리눅스 커널의 첫 번째 버전인 0.01 버전을 공개했습니다. 이 초기 버전은 완전하지 않았지만, 향후 개발을 위한 기반을 마련했습니다. 그 이후 토르발즈는 커널 개발을 계속하고, 1991년 말까지 0.12 버전을 공개했습니다. 이 버전은 GNU 일반 공중 사용 허가서(GPL) 하에 라이선스를 받은 첫 번째 버전이었습니다. 이 결정으로 리눅스 커널은 계속해서 무료 및 오픈 소스로 유지되어 누구나 사용, 수정, 배포할 수 있게 되었습니다.\n\nGPL의 채택으로 프로젝트에 기여하는 개발자 커뮤니티가 점점 더 커졌고, 새로운 기능을 추가하고 버그를 수정하며 성능을 개선했습니다. 1990년대 중반이 되자, 리눅스 커널은 상당히 성숙해지며 전 세계의 취미로, 연구자, 기업들에 의해 사용되었습니다.\n\n<div class=\"content-ad\"></div>\n\n## 주요 이정표\n\n- 1994 — 버전 1.0: 리눅스 커널의 첫 번째 공식 안정 버전인 버전 1.0이 1994년 3월 14일에 출시되었습니다. 이 버전은 다양한 하드웨어 및 네트워크 프로토콜을 지원하여 더 심층적인 사용에 적합했습니다.\n- 1996 — 버전 2.0: 1996년 6월 9일에 출시된 리눅스 커널 2.0 버전은 대칭 다중 처리(SMP)를 지원하여 다중 프로세서 시스템에서 실행할 수 있게되었습니다. 이것은 성능과 확장성 면에서 중요한 발전을 이룬 것입니다.\n- 2003 — 버전 2.6: 2003년 12월 17일에 출시된 2.6 시리즈는 확장성, 성능 및 하드웨어 지원에서 많은 개선을 가져왔습니다. 이 버전은 데스크톱 및 서버 환경에서 널리 채택되었습니다.\n- 2011 — 버전 3.0: 리눅스 커널 3.0이 2011년 7월 21일에 처음으로 버전 번호가 변경되었습니다. 새 번호에도 불구하고 이 릴리스는 주요 변경이 아닌 점진적인 업데이트였습니다.\n- 2015 — 버전 4.0: 2015년 4월 12일에 출시된 4.0 버전은 라이브 패칭을 도입하여 관리자가 시스템을 다시 부팅하지 않고 커널 패치를 적용할 수 있는 기능을 제공했습니다. 기업 환경에서 가동 시간을 유지하는 데 중요한 기능입니다.\n\n## 현대 시대\n\n리눅스 커널은 지속적으로 발전하고 있으며 새로운 버전이 정기적으로 출시됩니다. 각 릴리스에는 성능, 보안 및 하드웨어 지원이 개선됩니다. 리눅스 커널은 이제 전 세계의 수천 명의 기여자들, 자원봉사자, 학술 연구원 및 주요 기술 기업 엔지니어들에 의해 개발되고 있습니다.\n\n<div class=\"content-ad\"></div>\n\n리눅스는 많은 현대 기술의 기반이 되었습니다. 웹 서버, 초고속 컴퓨터, 그리고 클라우드 인프라 대부분을 구동합니다. 또한, 세계에서 가장 인기 있는 모바일 운영 체제 안드로이드의 기초이기도 합니다.\n\n# 리눅스 커널의 기본 구성 요소\n\n- 프로세스 관리: 이는 마치 커널의 트래픽 컨트롤러와 같습니다. 컴퓨터에서 프로세스(프로그램)가 어떻게, 그리고 언제 실행되는지를 관리합니다. 각 프로세스가 CPU의 시간을 공평하게 할당받을 수 있도록 합니다.\n- 메모리 관리: 이는 커널의 사서와 같습니다. 컴퓨터 메모리에 모든 것이 어디에 저장되어 있는지 추적하고, 각 프로그램이 필요한 메모리를 확보합니다.\n- 파일 시스템: 커널의 파일 정리자는 데이터가 디스크에 어떻게 저장되며, 어떻게 검색할 수 있는지를 관리합니다.\n- 장치 드라이버: 이것들은 키보드, 마우스, 프린터, 그래픽 카드와 같은 하드웨어 장치들과 커널이 통신할 수 있도록 해주는 특별한 프로그램입니다.\n- 네트워킹: 커널의 이 부분은 네트워크 연결과 관련된 모든 것을 처리하여 데이터가 컴퓨터 간에 이동할 수 있도록 합니다.\n- 보안: 커널의 보안 가드는 누가 컴퓨터에서 무엇에 접근할 수 있는지를 제어하여 권한 없는 접근으로부터 데이터를 보호합니다.\n\n# 리눅스 커널의 핵심 개념\n\n<div class=\"content-ad\"></div>\n\n- 커널 공간 대 커널 영역: 커널은 사용자 응용 프로그램이 실행되는 영역(user space)과 별도의 커널 공간(kernel space)이라는 특수한 메모리 영역에서 작동합니다. 이 분리로 시스템을 안정하고 안전하게 유지합니다.\n- 시스템 호출: 응용 프로그램이 커널에 파일 읽기 또는 새 프로세스 시작과 같은 작업을 수행하도록 요청하는 것입니다.\n- 컨텍스트 전환: 커널이 CPU를 한 작업에서 다른 작업으로 전환하는 과정으로, 여러 작업이 효율적으로 CPU를 공유할 수 있습니다.\n- 프로세스간 통신 (IPC): 프로세스가 서로 통신하고 조정할 수 있도록 하는 방법입니다.\n- 인터럽트 처리: 커널은 하드웨어에서의 신호(인터럽트)를 처리하여 I/O 작업을 효율적으로 관리합니다.\n- 가상 파일 시스템 (VFS): 다양한 파일 시스템에 대해 공통 인터페이스를 제공하는 추상화 계층으로, 다양한 종류의 저장 장치를 지원하기 쉽습니다.\n\n# 커널 작동 방식\n\n컴퓨터를 켜면 부트로더(작은 프로그램)가 커널을 메모리에 로드합니다. 그런 다음 커널은 시스템을 초기화하고 필요한 프로세스를 시작하며 CPU 시간, 메모리 및 장치와 같은 자원을 관리합니다. 모든 것이 원활하고 효율적으로 함께 작동하도록 보장합니다.\n\n## 모든 것이 원활하게 작동함을 보장\n\n<div class=\"content-ad\"></div>\n\n커널은 CPU 시간을 효율적으로 스케줄링하여 프로세스 간의 메모리 할당을 관리하고 시스템 리소스를 무단 접근으로부터 보호하며 기기 간 통신을 원활하게 하는 등 컴퓨터가 원할하게 작동하도록합니다.\n\n# 왜 다양한 버전이 존재할까요?\n\nLinux 커널은 새로운 기술을 통합하고 성능을 향상시키며 보안 취약점을 수정하기 위해 신속하게 발전합니다. 자주 업데이트되고 다양한 버전이 존재하는 주요 이유는 다음과 같습니다:\n\n- 신속한 개발: 새로운 기능과 개선 사항의 지속적인 추가.\n- 보안 업데이트: 보안 취약점을 신속하게 수정하기 위한 정기적인 업데이트.\n- 하드웨어 지원: 최신 하드웨어 장치 지원을 포함.\n- 버그 수정: 버그를 빈번히 수정하고 안정성을 향상시키기 위한 업데이트.\n\n<div class=\"content-ad\"></div>\n\n# 커널 대 운영 체제 대 하드웨어\n\n- **하드웨어**: CPU, 메모리 및 하드 드라이브와 같이 컴퓨터의 물리적 부분입니다.\n- **커널**: 하드웨어와 직접 상호 작용하는 소프트웨어 계층으로, 응용 프로그램과 하드웨어 간의 다리 역할을 제공합니다.\n- **운영 체제**: 사용자 인터페이스 및 핵심 기능을 제공하고 응용 프로그램을 실행하며 하드웨어를 관리하는 커널을 포함한 소프트웨어 집합입니다.\n\n# 리눅스 커널 업데이트\n\n커널을 업데이트하는 것은 시스템을 안전하고 안정적으로 유지하며 새 하드웨어와 소프트웨어와 호환되도록 하는 데 중요합니다. 아래는 그 방법입니다:\n\n<div class=\"content-ad\"></div>\n\n- 개발 및 유지 관리: 리눅스 커널은 리눅스 재단이 조정하는 글로벌 개발자 커뮤니티에 의해 개발됩니다. 리누스 토르발스(Linus Torvalds)는 리눅스를 만든 개발자로 프로젝트를 감독하지만, 수천 명의 기여자들이 이를 개선하는 데 도움을 줍니다.\n\n- 릴리스 주기: 커널의 새로운 주요 버전은 몇 달마다 릴리스됩니다. 각 버전은 번호(예: 5.10.1)로 식별됩니다. 주요 버전은 새로운 기능을 도입하며, 마이너 버전은 버그를 수정하고 성능을 개선합니다.\n\n- 장기 지원 (LTS): 일부 커널 버전은 LTS로 지정되며, 이는 여러 년 동안 유지 및 지원되어 중요한 애플리케이션을 위한 안정적인 플랫폼을 제공합니다.\n\n- 업데이트 프로세스: 대부분의 사용자는 리눅스 배포본의 패키지 매니저를 통해 커널을 업데이트합니다. 이는 프로세스를 간소화합니다. 수동으로 업데이트하고 싶은 사람들을 위해서는 새로운 커널을 다운로드하고 컴파일한 후 설치하는 과정이 필요합니다.\n\n# 커널 이야기: 컴퓨토폴리스의 슈퍼히어로\n\n데이터가 강 같이 흐르고 코드의 고층 빌딩이 하늘을 대적하는 활기찬 디지털 도시 컴퓨토폴리스를 상상해보세요. 이 도시에서는 혼돈이 일상이었지만, 커널이라는 슈퍼히어로가 나타나 순서와 조화를 가져다주었습니다.\n\n<div class=\"content-ad\"></div>\n\n## CPU 구역: 커널의 지시 센터\n\n컴퓨토폴리스의 중심에 위치한 CPU 구역은 도시의 주요 활동 허브입니다. 이곳에서 끊임없이 일을 해야 하는 무수히 많은 시민들(작업 및 프로세스)이 주목을 끌기 위해 노력하고 있습니다. 프로세스 관리의 힘을 가진 커널은 궁극적인 지휘자 역할을 합니다. 초인적인 정확성으로 커널은 각 시민의 활동을 일정에 맞추어 시간을 할당하며 모든 사람이 도시의 중심인 CPU에서 공평한 시간을 얻도록 합니다. 어떤 작업도 방치되지 않고 모든 것이 시계처럼 원활하게 운영됩니다.\n\n![이미지](/assets/img/2024-06-23-TheLinuxKernelTheHeartandBrainofLinuxSystems_1.png)\n\n## 메모리 공원: 커널의 질서 영역\n\n<div class=\"content-ad\"></div>\n\nCPU 지구에서 멀지 않은 곳에는 메모리 공원이 있습니다. 시민들이 앉아서 작업할 수 있는 공간(메모리)이 필요한 넓은 지역입니다. 커널의 메모리 관리 능력이 여기서 빛을 발합니다. 각 벤치(메모리 공간)는 커널에 의해 꼼꼼하게 할당됩니다. 시민이 떠나면 커널은 신속하게 벤치를 필요로 하는 다른 사람에게 재할당합니다. 이 원활한 관리는 메모리 공원이 언제나 완벽한 순서로 유지되도록 하며 공간의 낭비가 없도록 합니다.\n\n![이미지](/assets/img/2024-06-23-TheLinuxKernelTheHeartandBrainofLinuxSystems_2.png)\n\n### 장치 마을: 커널의 통신 네트워크\n\n컴퓨토폴리스의 교외에는 프린터, 키보드, 모니터 등 다양한 장치가 있는 장치 마을이 있습니다. 커널의 장치 통신 능력은 모든 시민이 이러한 장치와 손쉽게 상호 작용할 수 있도록 보장합니다. 누군가 문서를 인쇄하려고 하면 커널은 프린터와 통신하기 위한 적합한 드라이버가 있는지 확인합니다. 이 슈퍼파워는 장치 마을이 원활하게 연결되고 문제없이 작동하도록 유지합니다.\n\n<div class=\"content-ad\"></div>\n\n\n![Image 1](/assets/img/2024-06-23-TheLinuxKernelTheHeartandBrainofLinuxSystems_3.png)\n\n## 보안 요새: 커널의 안전한 요새\n\n보안은 컴퓨토폴리스에서 가장 중요합니다. 커널은 그것의 경비원입니다. 보안 관리의 힘으로 커널은 불법 접근과 잠재적 위협으로부터 도시를 보호합니다. 승인된 시민만 안전 지역에 접근할 수 있고, 커널은 언제나 문제의 징후를 주시하며, 혼돈의 시도에 대비할 준비가 되어 있습니다.\n\n![Image 2](/assets/img/2024-06-23-TheLinuxKernelTheHeartandBrainofLinuxSystems_4.png)\n\n\n<div class=\"content-ad\"></div>\n\n## 시스템 호출: 커널의 도움데스크\n\n컴퓨토폴리스 전역에는 시스템 호출이라고 불리는 다양한 도움데스크가 있습니다. 시민이 도움이 필요할 때마다 데스크에 다가가면 그곳이 커널과 통신합니다. 파일에 접근하거나 새로운 프로세스를 시작하는 등의 요청에 대해 커널은 빠르게 응답하여 필요한 모든 것이 효율적으로 충족되도록 합니다.\n\n![이미지](/assets/img/2024-06-23-TheLinuxKernelTheHeartandBrainofLinuxSystems_5.png)\n\n## 컴퓨토폴리스의 조화\n\n<div class=\"content-ad\"></div>\n\nKernel의 슈퍼파워 덕분에 Computopolis는 조화롭고 생산적인 도시로 번영하고 있어요. 자원을 효율적으로 관리하고 안전을 보장하며 원활한 통신 채널을 유지하는 Kernel의 능력 덕분에 도시가 원활히 운영됩니다. Kernel에게는 너무 작은 일도, 너무 큰 위협도 없죠. Kernel은 Computopolis의 슈퍼히어로랍니다!\n\n이 디지털 유토피아 속에서 Kernel은 보이지 않는 영웅으로 서있어요. 모든 것이 완벽하게 함께 작동하도록 보장하며, Computopolis를 효율적이고 질서 정연한 모범 도시로 만들어주고 있어요. Kernel은 끊임없는 경계심과 무한한 능력을 통해 디지털 세계를 모든 시민들을 위해 안전하고 번영하게 유지하고 있어요.\n\n![이미지](/assets/img/2024-06-23-TheLinuxKernelTheHeartandBrainofLinuxSystems_6.png)\n\n# 결론\n\n<div class=\"content-ad\"></div>\n\nLinux 커널은 컴퓨터를 작동시키는 중요한 구성 요소입니다. 하드웨어, 자원 및 보안을 관리하여 모든 것이 원활하게 작동하도록 합니다. 커널의 역할과 작동 방식을 이해하면 현대 컴퓨팅의 복잡성에 대해 더 심층적으로 이해할 수 있습니다. 업데이트하거나 기능을 탐색하거나 컴퓨터를 사용하더라도 커널은 항상 작동하여 디지털 세계를 유지합니다.\n\n# 여러분의 지원은 매우 중요합니다! 🙌\n\n이 글을 즐겁게 읽으시고 가치 있게 여기셨다면 지원을 보이기 위해 박수를 보내주세요. 다른 주제인 파이썬 프로그래밍 및 기타 주제에 관련된 다른 글도 살펴보세요. 저를 따라오면 제 최신 콘텐츠와 통찰력을 업데이트하게 됩니다. 미래 글을 통해 더 많은 지식을 공유하고 여러분과 연결하기를 기대합니다. 그동안 계속 코딩하고 계속 배우며, 무엇보다 중요한 것은 여정을 즐기십시오!\n\n즐거운 학습 되세요!","ogImage":{"url":"/assets/img/2024-06-23-TheLinuxKernelTheHeartandBrainofLinuxSystems_0.png"},"coverImage":"/assets/img/2024-06-23-TheLinuxKernelTheHeartandBrainofLinuxSystems_0.png","tag":["Tech"],"readingTime":8},{"title":"Ubuntu에서 기본 커널 변경 및 설정하는 방법","description":"","date":"2024-06-23 15:23","slug":"2024-06-23-HowdoyouchangeandsetthedefaultKernelinUbuntuMachine","content":"\n\n우분투 머신의 기본 커널을 변경하고 다른 커널로 전환해야하는 상황에 처해본 적이 있나요?\n\n![이미지](/assets/img/2024-06-23-HowdoyouchangeandsetthedefaultKernelinUbuntuMachine_0.png)\n\n저 또한 이 상황을 마주했는데, 시간을 보내며 원하는 우분투 커널로 변경하는 간단한 방법을 찾게 되었습니다.\n\n본 글에서는 AWS에서 운영 중인 우분투 18.04 머신을 사용하고 있습니다.\n\n<div class=\"content-ad\"></div>\n\n\n<img src=\"/assets/img/2024-06-23-HowdoyouchangeandsetthedefaultKernelinUbuntuMachine_1.png\" />\n\n우분투 머신의 커널을 확인하려면 터미널을 사용하여 머신에 SSH로 연결하세요. 현재 커널 버전을 확인하려면 다음 명령을 사용하세요.\n\n```js\nubuntu@ip-172–32–11–86:~$ uname -r\n5.4.0-1103-aws\n```\n\n이 우분투 머신에 설치된 커널 목록을 보려면 터미널에서 다음 명령을 사용하세요\n\n\n<div class=\"content-ad\"></div>\n\n\n위 명령을 사용하면 Ubuntu 머신에 설치된 커널 목록을 얻을 수 있어요. 원하는 커널을 선택하고 아래 명령을 사용하여 설치하세요.\n\n```js\nubuntu@ip-172–32–11–86:~$ sudo apt install linux-image-unsigned-4.15.0-136-lowlatency\n```\n\n<img src=\"/assets/img/2024-06-23-HowdoyouchangeandsetthedefaultKernelinUbuntuMachine_2.png\" /> \n\n\n<div class=\"content-ad\"></div>\n\n다음 단계는 Grub 기본 커널을 설정하는 것입니다. 두 부분으로 나뉩니다. 먼저 다음 명령어를 사용하여 $menuentry_id_option을 가져와야 합니다.\n\n```js\nubuntu@ip-172-31-11-86:~$ grep submenu /boot/grub/grub.cfg\nsubmenu 'Advanced options for Ubuntu' $menuentry_id_option 'gnulinux-advanced-9cf7073a-6786-43dc-895e-8bbebe712a1e' {\n```\n\n`gnulinux-advanced-9cf7073a-6786–43dc-895e-8bbebe712a1e`을 복사해 주세요.\n\n둘째로, 지정된 커널 버전을 얻어야 합니다.\n\n<div class=\"content-ad\"></div>\n\n```plaintext\nubuntu@ip-172-31-11-86:~$ grep 4.15.0-136 /boot/grub/grub.cfg\n```\n\n여기서 제가 설치된 커널 목록에서 커널 버전만 복사했습니다.\n\n아래 이미지를 참고해주세요:\n\n![그림](/assets/img/2024-06-23-HowdoyouchangeandsetthedefaultKernelinUbuntuMachine_3.png)\n\n녹색으로 강조된 gnulinux-4.15.0–136-lowlatency-advanced-9cf7073a-6786–43dc-895e-8bbebe712a1e를 복사해주세요.\n\n\n<div class=\"content-ad\"></div>\n\n기본 GRUB을 설정하려면 선택한 편집기(vim, nano 등)를 사용하여 grub 파일인 /etc/default/grub을 엽니다. 두 개의 복사된 문자열을 역따옴표(`)로 연결하고 grub 파일의 GRUB_DEFAULT로 설정합니다.\n\ngnulinux-advanced-9cf7073a-6786-43dc-895e-8bbebe712a1e`gnulinux-4.15.0-136-lowlatency-advanced-9cf7073a-6786-43dc-895e-8bbebe712a1e\n\n![이미지](/assets/img/2024-06-23-HowdoyouchangeandsetthedefaultKernelinUbuntuMachine_4.png)\n\n파일을 저장하고 grub을 업데이트하는 다음 명령을 사용하세요.\n\n<div class=\"content-ad\"></div>\n\n```bash\nubuntu@ip-172-31-11-86:~$ sudo update-grub\nubuntu@ip-172-31-11-86:~$ sudo reboot\n```\n\n머신이 다시 부팅되면, 기본 커널로 설정된 커널을 선택할 수 있게 됩니다 ✅\n\n==============================================================\n\n이 이야기가 도움이 되었다면 비슷한 이야기를 보고 싶다면, 가상 커피로 저를 지원해주시면 감사하겠습니다 😉👇🏻\n\n\n<div class=\"content-ad\"></div>\n\n☕ https://ko-fi.com/mnzel1 ☕","ogImage":{"url":"/assets/img/2024-06-23-HowdoyouchangeandsetthedefaultKernelinUbuntuMachine_0.png"},"coverImage":"/assets/img/2024-06-23-HowdoyouchangeandsetthedefaultKernelinUbuntuMachine_0.png","tag":["Tech"],"readingTime":3},{"title":"EC2 마스터 리눅스 인스턴스에 다른 EBS 볼륨 추가하는 방법 - 완벽 가이드","description":"","date":"2024-06-23 15:22","slug":"2024-06-23-HowtoaddanotherEBSVolumetoaLinuxinstance-EC2Mastery","content":"\n\nAWS의 핵심은 EC2에 있습니다. 클라우드 서비스 제공업체를 사용하기 시작할 때 대부분 처음 배우는 서비스 중 하나입니다. 이를 염두에 둔다면, 배울 것이 많고 현재 사용 중인 use case에 다른 서비스를 통합하는 다양한 방법이 있습니다.\n\n이 새로운 시리즈인 'EC2 마스터리'에서는 EC2의 여러 실제 사용 예제를 배울 것입니다.\n\n![이미지](/assets/img/2024-06-23-HowtoaddanotherEBSVolumetoaLinuxinstance-EC2Mastery_0.png)\n\n'EC2 마스터리'의 이번 에피소드에서는 EC2 Linux 인스턴스에 추가 EBS 볼륨을 추가하는 방법을 살펴볼 것입니다.\n\n<div class=\"content-ad\"></div>\n\n# 1. 명령 줄 및 fstab 파일(Linux)을 통해 추가적인 EBS 볼륨 추가하기\n\n## 단계 1: EBS 볼륨 연결하기\n\nCloudShell 탭을 열거나 AWS 계정에 명령 줄을 통해 상호 작용합니다. 아래는 제가 입력한 명령어의 스크린샷입니다.\n\nEBS 볼륨 생성:\n\n<div class=\"content-ad\"></div>\n\n```js\n aws ec2 create-volume --availability-zone <your-az> --size <size-in-gb>\n```\n\n다음은 사용할 수 있는 다른 옵션들입니다:\n\n--volume-type: EBS 볼륨의 유형을 지정합니다 (예: gp3, io2).\n--iops: io1 또는 io2 볼륨의 IOPS 수를 설정합니다.\n--encrypted: 볼륨을 위해 암호화를 활성화합니다.\n--kms-key-id: 암호화를 위한 KMS 키를 지정합니다.\n--snapshot-id: 기존 스냅샷에서 볼륨을 생성합니다.\n--tag-specifications: 볼륨에 태그를 추가합니다.\n--multi-attach-enabled: 볼륨을 여러 인스턴스에 동시에 연결할 수 있도록 허용합니다 (io1 또는 io2용).\n\nEC2 인스턴스에 EBS 볼륨을 연결하기:\n\n<div class=\"content-ad\"></div>\n\n```js\naws ec2 attach-volume --volume-id <볼륨-id> --instance-id <인스턴스-id> --device /dev/xvdf\n```\n\n`볼륨-id`에 방금 생성한 볼륨의 ID를, `인스턴스-id`에는 EC2 인스턴스 ID를 입력해주세요.\n\n<img src=\"/assets/img/2024-06-23-HowtoaddanotherEBSVolumetoaLinuxinstance-EC2Mastery_1.png\" />\n\n이제 AWS 측에서의 작업이 완료되었으니, 우리의 인스턴스 내부에서 작업을 완료해야 합니다.\n\n<div class=\"content-ad\"></div>\n\n## 단계 2: EBS 볼륨을 마운트합니다\n\n인스턴스에 SSH로 로그인하거나 콘솔을 사용하세요.\n\n볼륨 포맷:\n\n```js\nsudo mkfs -t ext4 /dev/xvdf\n```\n\n<div class=\"content-ad\"></div>\n\n마운트 지점 생성하기:\n\n```js\nsudo mkdir /mnt/data\n```\n\n볼륨 마운트하기:\n\n```js\nsudo mount /dev/xvdf /mnt/data\n```\n\n<div class=\"content-ad\"></div>\n\n아래에서 우리는 인스턴스에 10gb EBS 볼륨을 성공적으로 추가했음을 확인할 수 있습니다.\n\n<img src=\"/assets/img/2024-06-23-HowtoaddanotherEBSVolumetoaLinuxinstance-EC2Mastery_2.png\" />\n\n<div class=\"content-ad\"></div>\n\n# 3. fstab 파일에 추가하여 마운트 영구화하기:\n\n어떤 시점에서든 인스턴스를 끄거나 다시 부팅하게 되면 최근에 생성하고 추가한 EBS 볼륨이 유지되지 않습니다. 그러므로 /etc/fstab 파일에 추가해주어야 합니다.\n\n```bash\nsudo bash -c 'echo \"/dev/xvdf /mnt/data ext4 defaults,nofail 0 2\" >> /etc/fstab'\n```\n\n<div class=\"content-ad\"></div>\n\n# 결론\n\n이것은 Linux EC2 인스턴스에 다른 EBS 볼륨을 추가하는 과정입니다.\n\n박수를 치고 팔로우해 주세요. EC2 마스터리 시리즈의 시작에 불과해요!","ogImage":{"url":"/assets/img/2024-06-23-HowtoaddanotherEBSVolumetoaLinuxinstance-EC2Mastery_0.png"},"coverImage":"/assets/img/2024-06-23-HowtoaddanotherEBSVolumetoaLinuxinstance-EC2Mastery_0.png","tag":["Tech"],"readingTime":3},{"title":"리눅스에서 CPU, 메모리, 스토리지 정보를 얻기 위한 기본 시스템 명령어들","description":"","date":"2024-06-23 15:21","slug":"2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux","content":"\n\n![이미지](/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_0.png)\n\n이 문서는 리눅스 쉘 명령어를 사용하여 CPU, 메모리, 저장소 세부 정보를 얻는 방법을 가르쳐 드립니다.\n\n👨🏽‍💻🧑🏻‍💻더 많은 기사를 보려면, 클라우드상의 DevOps 엔지니어링을 팔로우해주세요.\n\n시작해봅시다.\n\n<div class=\"content-ad\"></div>\n\n# 컴퓨터의 핵심 구성 요소 개요\n\n컴퓨터는 일련의 알고리즘과 산술 명령을 실행할 수 있도록 프로그래밍할 수 있는 모든 기계를 말합니다.\n\n게임 시스템이든 가정용 PC이든, 현재 대부분의 컴퓨터를 구성하는 다섯 가지 주요 구성 요소는 다음과 같습니다:\n\n![이미지](/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_1.png)\n\n<div class=\"content-ad\"></div>\n\n# Linux에서 lscpu 명령어를 사용하여 CPU 세부 정보 가져오기\n\nlscpu는 Linux에서 CPU 구성에 대해 알아보는 데 필수적인 명령어입니다. lscpu에 대한 자세한 정보는 lscpu --help를 실행하여 얻을 수 있습니다.\n\n![이미지](/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_2.png)\n\nLinux의 명령줄 유틸리티 \"lscpu\"는 시스템의 CPU 정보를 가져오는 데 사용됩니다. \"lscpu\" 명령어는 CPU 아키텍처 정보를 \"sysfs\" 및 /proc/cpuinfo 파일에서 가져와 터미널에 표시합니다.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_3.png\" />\n\n# Linux에서 free를 사용하여 메모리 세부 정보 가져오기\n\nLinux의 free 명령은 컴퓨터의 RAM 사용량을 전체적으로 확인하는 데 사용됩니다. free 명령의 전체 세부 정보를 확인하려면 free --help 명령을 실행할 수 있습니다.\n\n아래 그림에서 제어 인수를 사용하여 free 명령을 사용할 수 있습니다.👇🏻\n\n<div class=\"content-ad\"></div>\n\n\n![Free Command Output 1](/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_4.png)\n\nThis is what the output to the free command looks like in the Linux terminal.\n\n![Free Command Output 2](/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_5.png)\n\nIf you want the human-readable output of the free command you can use the `-h` argument along with the `free` command.\n\n\n<div class=\"content-ad\"></div>\n\n```js\nfree -h\n```\n\n![Storage Details](/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_6.png)\n\n# Linux에서 df를 사용하여 저장소 세부 정보 가져오기\n\nLinux의 df 명령어는 각 파일이 존재하는 파일 시스템에 대한 정보나 기본적으로 모든 파일 시스템에 대한 정보를 표시하는 데 사용됩니다. 일반적인 용어로 표현하면, df 프로그램은 하드 디스크나 CD, DVD 및 플래시 드라이브를 포함한 모든 하드디스크 또는 마운트된 장치에서 데이터를 검색하는 데 도움이 됩니다.  \n\n<div class=\"content-ad\"></div>\n\n리눅스 터미널에서 다음 명령을 실행하여 df 명령의 전체 사용법을 확인할 수 있어요.\n\n```js\ndf --help\n```\n\n![image](/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_7.png)\n\n만약 인간이 읽기 쉬운 형식으로 출력을 원하면 Linux에서 `df -h` 명령을 사용할 수 있어요.\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_8.png)\n\n현재 작업 디렉토리의 저장소 세부정보를 사람이 읽을 수 있는 형식으로 확인하려면 Linux에서 다음 명령을 실행할 수 있습니다. 여기서 '.'은(는) 현재 작업 디렉토리를 나타냅니다.\n\n```js\ndf -h .\n```\n\n![image](/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_9.png)\n\n\n<div class=\"content-ad\"></div>\n\n# Linux에서 du를 사용하여 디스크 사용량 세부 정보 가져오기\n\nLinux에서 du 명령어는 디스크 사용량을 가져오는 데 사용됩니다. 이 du 명령어는 각 폴더를 재귀적으로 통과하면서 각 파일의 저장소 세부 정보를 가져옵니다.\n\n간단히 말해, du 명령어는 파일 집합의 디스크 사용량을 요약하여 디렉토리에 대해 재귀적으로 작동합니다. du 명령어의 전체 세부 정보를 얻으려면 du --help을 실행하면 됩니다.\n\n![이미지](/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_10.png)\n\n<div class=\"content-ad\"></div>\n\ndu 명령어의 출력 결과는 아래 이미지와 같을 것입니다.\n\n![이미지](/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_11.png)\n\n만약 파일의 세부 정보를 찾는 대신 폴더 수준에서 저장소의 세부 정보만을 원한다면 모든 폴더를 재귀적으로 검색하지 않고 다음과 같은 Linux 명령어를 사용할 수 있습니다.\n\n```bash\ndu -sh *\n-s, --summarize        각 인수에 대한 총합만 출력\n-h, --human-readable   사람이 읽을 수 있는 형식으로 크기 출력 (예: 1K 234M 2G)\n```\n\n<div class=\"content-ad\"></div>\n\n아래와 같은 결과가 출력됩니다👇🏻\n\n![이미지](/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_12.png)\n\n# du 및 sort 명령어를 사용하여 Linux에서 가장 큰 폴더 및 파일 가져오기\n\ndu 명령어와 sort 명령어를 사용하여 Linux 파일 시스템에서 저장 용량을 가장 많이 사용하는 파일을 해결할 수 있습니다. du 명령어의 출력을 sort 명령어로 연결하는 방식으로 이 작업을 수행할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```js\ndu -s * | sort -n\n```\n\n위의 명령어를 실행하면 결과는 아래와 같이 나타날 것입니다👇🏻\n\n<img src=\"/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_13.png\" />\n\n# Windows에서 du를 사용하여 디렉터리의 저장 세부 정보 이해하기\n\n<div class=\"content-ad\"></div>\n\n다음 비디오 타임 스탬프에서 윈도우의 디렉토리 저장소 세부 정보에 대한 설명을 확인하실 수 있어요.\n\n# 폴더 및 파일의 저장소 사용량 얻기\n\n다음 명령어를 실행하여 리눅스 터미널에서 파일 및 폴더의 저장소 사용량을 얻을 수 있어요\n\n```js\ndu -sh .\n```\n\n<div class=\"content-ad\"></div>\n\n리눅스 터미널에서 위 명령을 실행할 때 권한 관련 문제가 발생하면 다음 명령을 사용하여 'Operation not permitted' 메시지를 무시할 수 있습니다.\n\n```js\ndu -sm * 2>/dev/null\n```\n\n출력은 권한 관련 오류 없이 표시됩니다.\n\n위 출력을 sort 명령에 파이핑하여 결과를 오름차순으로 정렬할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```sh\ndu -sm * 2>/dev/null | sort -n\n```\n\n# find와 du를 사용하여 더 큰 파일의 저장소 세부 정보 가져 오기\n\n더 큰 파일 세부 정보를 얻으려면 find 명령어와 du 명령어를 함께 사용할 수 있습니다.\n\n```sh\nfind [STRING] -type f -exec du -m {} +;\n```\n\n<div class=\"content-ad\"></div>\n\n위 명령어에 | sort -n을 추가하여 출력을 정렬할 수도 있습니다.\n\n```js\nfind [STRING] -type f -exec du -m {} + | sort -n\n```\n\n이렇게 하면 Linux 시스템에서 저장 공간을 많이 차지하는 파일 및 폴더를 해결할 수 있습니다.\n\n🙏🏼글을 읽어주셔서 감사합니다. 유용하다고 느껴지면 DevOps Engineering on Cloud 게시물을 팔로우해주세요.","ogImage":{"url":"/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_0.png"},"coverImage":"/assets/img/2024-06-23-BasicSystemCommandstogetCPUMemoryandStoragedetailsinLinux_0.png","tag":["Tech"],"readingTime":5},{"title":"면접 질문, 답변  Linux-1","description":"","date":"2024-06-23 15:19","slug":"2024-06-23-InterviewQuestionAnswerLinux-1","content":"\n\n❓리눅스 부팅 프로세스는 무엇인가요?\n\n리눅스 부팅 프로세스는 여섯 가지의 고수준 단계로 나뉩니다:\n\n- BIOS — Basic Input/Output System이 MBR을 실행합니다.\n- MBR — Master Boot Record가 GRUB를 실행합니다.\n- GRUB — Grand Unified Bootloader가 커널을 실행합니다.\n- Kernel — 커널이 /sbin/init을 실행합니다.\n- Init — Init이 런레벨 프로그램을 실행합니다.\n- Runlevel — 런레벨 프로그램은 /etc/rc.d/rc*.d/에서 실행됩니다.\n\n<div class=\"content-ad\"></div>\n\nbuymeacoffee ☕ 👈 클릭해보세요\n\n❓리눅스에서 어떻게 제로 사이즈 파일을 만들 수 있을까요?\n\n쉘 명령어 $ touch 파일이름 을 입력하면 파일 이름의 사이즈가 0바이트인 파일이 생성됩니다.\n\n❓리눅스에서 소프트 링크와 하드 링크는 무엇이며, 이들을 어떻게 생성할 수 있을까요? 이 두 링크 유형의 차이는 무엇일까요?\n\n<div class=\"content-ad\"></div>\n\n\n![Link](/assets/img/2024-06-23-InterviewQuestionAnswerLinux-1_1.png)\n\nA “soft link” takes more, as it has an inode, and file contents (the path to the target file) it also has the name in the directory.\n\nSoftlink 👈\n\nA “hardlink” only exists in the name in a directory- and specifies the inode number of the file.\n\n\n<div class=\"content-ad\"></div>\n\n하드 링크 👈\n\n```js\nln [원본 파일명] [링크 이름] --> 하드 링크 생성\nln -s [원본 파일명] [링크 이름] --> 심볼릭 링크 생성\n```\n\n하드 링크: 파일 이름 = `Inode` = 내 하드 링크\n\n심볼릭 링크: inode `=== 파일 이름 `== 소프트 링크\n\n<div class=\"content-ad\"></div>\n\n❓ 쉘 스크립트에서 일반적으로 첫 줄은 무엇인가요? 그 의미는 무엇인가요? 만약 이 줄이 생략된다면 어떤 일이 발생하고, 이 경우 스크립트를 어떻게 실행하나요?\n\n스크립트의 첫 줄은 어떤 프로그램을 사용할지를 지시합니다. 첫 줄은 #! 두 문자의 시퀀스로 시작하는데, 이를 \"shebang\"이라고 합니다. 그 다음에는 운영 체제에게 파일의 나머지 부분을 파싱하는 데 사용할 해석기를 알려주는 프로그램이 옵니다.\n\n#!는 사람이 읽기 편하지만, 반드시 그렇게 되어야 하는 것은 아닙니다.\n\n❓ 리눅스에서 쉘 스크립트를 백그라운드에서 실행하는 방법은 무엇인가요?\n\n<div class=\"content-ad\"></div>\n\n\n```js\n& Symbol\n```\n\n프로세스를 백그라운드에서 실행하는 또 다른 방법은 실행하는 명령어 뒤에 앰퍼샌드(&) 기호를 추가하는 것입니다.\n\n```js\nscript.sh &\ncommand &\n```\n\n❓리눅스에서 크론탭(crontab)은 무엇인가요? 크론탭을 이용하여 작업을 설정하고 예약하는 방법에 대해 설명해주세요.\n\n\n<div class=\"content-ad\"></div>\n\nCrontab은 cron 테이블의 약어로, 특정 시간에 실행되어야 하는 다양한 cron 항목의 일정을 포함하는 파일입니다.\n\nCrontab은 백그라운드에서 cron 데몬에 의해 정기적으로 자동으로 실행되도록 하는 유틸리티로 설명할 수도 있습니다.\n\n![이미지](/assets/img/2024-06-23-InterviewQuestionAnswerLinux-1_2.png)\n\nCrontab → 미래의 어느 시점에 실행되어야 할 작업을 예약하는 것.\n\n<div class=\"content-ad\"></div>\n\n크론탭 링크를 참조하세요\n\n- 스크립트 작성 (옵션): 이 섹션에서는 예제 스크립트를 만드는 방법을 설명합니다.\n- 크론텝 파일 생성 또는 편집: 다음 명령을 입력하여 현재 사용자의 크론텝 구성 파일을 엽니다: crontab -e.\n- 크론 작업 생성\n- 출력 (옵션)\n- 저장\n- 활성 크론 작업 확인\n\n❓리눅스에서 포트를 허용하려면 어떻게 해야 하나요?\n\n```js\nsudo ufw allow 53/tcp\n```\n\n<div class=\"content-ad\"></div>\n\n❓원격 서버에서 문제가 발생하는 경우 어떻게 문제를 해결할 수 있을까요?\n\n- 서버에서 원격 데스크톱 서비스가 실행 중인지 확인합니다.\n- 서버 방화벽이 원격 데스크톱 연결을 차단하고 있는지 확인합니다.\n- 서버가 원격 데스크톱 연결을 허용하도록 구성되어 있는지 확인합니다.\n- 서버의 네트워크 설정이 올바른지 확인합니다.","ogImage":{"url":"/assets/img/2024-06-23-InterviewQuestionAnswerLinux-1_0.png"},"coverImage":"/assets/img/2024-06-23-InterviewQuestionAnswerLinux-1_0.png","tag":["Tech"],"readingTime":3},{"title":"1년 전 VS Code를 삭제하고 Neovim으로 전환한 이유","description":"","date":"2024-06-23 15:18","slug":"2024-06-23-OneYearAgoIUninstalledVSCodeandSwitchedtoNeovim","content":"\n\n\n![image](/assets/img/2024-06-23-OneYearAgoIUninstalledVSCodeandSwitchedtoNeovim_0.png)\n\n## 왜 바꾸고 싶은지 알아보세요\n\n내가 기억할 수 있는 한 오랜 시간 동안 VS Code를 사용해왔습니다. 초보자들이 시작하기에 아주 좋은 편집기입니다. 그러나 다른 일렉트론 기반 앱들처럼, VS Code는 느리고 컴퓨터 배터리를 많이 소모합니다. 제 노트북에서 긴 시간 동안 작업하려고 할 때마다 콘센트를 찾아야하는 번거로움에 지쳐갔습니다.\n\n거기에다가, 동시에 내 Logitech M510 시리즈 마우스가 작동하지 않는 문제가 발생했습니다 — 화면에서 지연되고 깜박이는 현상이 나타났습니다. 이 문제는 때때로 발생하지만 빈번하여 짜증이 났습니다.\n\n\n<div class=\"content-ad\"></div>\n\n저는 이전에 ThePrimeagen의 YouTube 채널을 구독하고 있었습니다. 그의 독특한 성격과 컴퓨터를 빠른 속도로 조작하는 능력이 저를 매료시켜, 깊이 있는 도구 사용을 배우게 되었습니다. 그래서 나는 내 자신을 설득하여 마우스를 움직이지 않고 vim 명령어를 배워야겠다고 결심했습니다.\n\n## 적절한 도구 선택하기\n\n몇 년 전 vim 명령어를 배우기 전에 Neovim으로 전환을 시도했지만 분명히 실패했습니다. 그래서 이번에는 명령어를 먼저 마스터해야 한다는 것을 알고 있었습니다.\n\nvim 명령어의 숙달을 약속하는 여러 온라인 게임 및 터미널 기반 도구를 시도해 봤지만, 모두 잘 맞지 않았습니다. VS Code용 Vim 확장 프로그램을 사용해 보기도 했지만, 실망스러웠습니다. 확장 프로그램은 느린 에디터를 더 느리게 만들었고, 여러 문제가 있었습니다.\n\n<div class=\"content-ad\"></div>\n\n마침내 저는 Zed 텍스트 편집기로 전환했습니다, 비록 여러 가지 단점이 있지만 vim-motion 지원이 훨씬 더 원활했기 때문입니다. 저는 지속적으로 연습하여 모든 앱에서 vim 지원을 찾기 시작했습니다. 정확히 이 이유로 Obsidian을 제 메모 앱으로 선택했습니다. 결과적으로, 그렇게 어렵지 않았습니다. 필요한 대부분을 몇 주 만에 배웠죠.\n\n## Neovim 설정하기\n\nNeovim의 전체 의도는 사용자의 취향에 맞게 설정하는 것입니다. 그렇기 때문에 다른 사람의 환경을 사용하는 것은 의미가 없죠. 그래도, 전체 편집기를 직접 설정하는 것은 압도적으로 어려울 수 있습니다. 그래서 여기에 저가 제 환경을 구성하는 데 사용한 유용한 자료 몇 가지를 제공하겠습니다. 기억하세요, 핵심은 해야 할 작업을 이해하고 스스로 처리하는 것입니다.\n\nGithub 저장소:\n\n<div class=\"content-ad\"></div>\n\n- Kickstart.nvim. 모든 것이 한 파일에 있어 시작하기에 최적인 곳입니다.\n- ThePrimeagen. 전설 그 자체.\n- 내 Nvim 설정: 내 환경을 어떻게 설정했는지 확인하고 싶다면.\n\n배포:\n\n- LazyVim\n- NvChad.\n- AstroVim\n- LunarVim\n\nYouTube\n\n<div class=\"content-ad\"></div>\n\n- Chris@machine의 Neovim 시리즈.\n- TypeCraft.\n- Vhyrro에 의한 Neovim 이해\n\n## 멋진 경험\n\nNeovim이 노트북 배터리를 태우지 않는다는 것을 좋아합니다. 일본으로 향하는 길에 비행기에서 Go 프로젝트의 유닛 테스트를 쓰는 데 5시간 이상을 보냈는데, 배터리 소모가 약 15% 정도 밖에 되지 않았습니다. 요즘에는 노트북이 시원하게 유지되면서 그것을 정말 좋아합니다. 이것만으로도 Neovim으로 변경하는 것이 정당화되었습니다.\n\n게다가, VS Code에서는 너무 많은 확장 기능이 필요하지 않았습니다. 그래서 제가 떠나고 나서 그리워하는 확장 기능이 있지는 않습니다. Quokkajs를 제외하고요, 그것은 자바스크립트와 타입스크립트 스크래치패드입니다. 일단 quokka 대안으로, 제가 어떤 자바스크립트 코드를 시험해보고 싶을 때 빠르게 노드 프로젝트로 전환합니다.\n\n<div class=\"content-ad\"></div>\n\n터미널 기반 앱의 사용 경험은 키보드 조작 능력에 달려 있어요. 그래서 만약 키를 누르기 전에 각 키를 살펴봐야 하는 타자 타입이라면 Neovim은 당신을 위한 것이 아닙니다. 스위치하기 전에 키보드를 튼튼하게 다루는 능력이 필요해요. 제가 분당 80자 정도의 타자 능력을 갖고 있었기 때문에 이 문제는 전혀 발생하지 않았어요.\n\n마침내, 다른 사람들이 제가 VS Code를 사용하지 않는 것을 깨달을 때의 반응을 보는 것이 정말 기쁘죠.\n\nNeovim으로 바꾼 것이 내가 한 가장 좋은 결정 중 하나가 되었습니다. 이 스위치로 인해 터미널에 대해 편안해지고 이제 다양한 CLI 응용 프로그램을 사용하고 있어요. 이에 대해 전체 기사를 썼답니다. 모두가 각자의 독특한 학습 경로를 갖고 있어요. 그래서 여러 도구와 기술을 시도하고, 가장 잘 맞는 것을 받아들이는 것이 중요해요. Zed, Obsidian 또는 고장 났거나 망가진 마우스가 당신에게 적합하지 않을지도 몰라요.\n\n아래는 제가 이전 게시물에서 언급한 기사들이에요.","ogImage":{"url":"/assets/img/2024-06-23-OneYearAgoIUninstalledVSCodeandSwitchedtoNeovim_0.png"},"coverImage":"/assets/img/2024-06-23-OneYearAgoIUninstalledVSCodeandSwitchedtoNeovim_0.png","tag":["Tech"],"readingTime":3},{"title":"리눅스 보안 여정  SGID 저장된 그룹 ID 이해하기","description":"","date":"2024-06-23 15:17","slug":"2024-06-23-TheLinuxSecurityJourneySGIDSavedGroupID","content":"\n\n이 문맥에서 SGID는 \"Saved Group ID\"의 약자이며 SGID 비트와는 다릅니다. 이는 루트와 같은 고권한(하지만 그에 국한되지는 않는) 상태에서 일을 하다가 무권한으로 무언가를 수행해야 하는 경우 사용됩니다. 우리는 \"최소한의 권한\" 원칙을 따르고자 하기 때문에 높은 권한은 반드시 필요한 경우에만 사용해야 합니다.\n\n따라서, 우리는 SGID를 사용하여 EGID를 저장한 후 변경을 수행하여 작업이 무권한 사용자로 실행되도록 합니다. 작업이 완료되면 SGID에서 EGID를 다시 가져옵니다.\n\n마지막으로, EGID와 SGID 간에 다른 값을 설정하기 위해 \"setresgid\" 시스템 호출을 사용할 수 있습니다. 우리는 sgid=0이면 egid=0을 사용할 수 있지만 sgid!=0이면 그렇게 할 수 없습니다. 따라서 SGID는 SGID와 같은 개념을 사용합니다. SGID는 \"struct cred\"의 일부로 저장되는 속성이기도 합니다.\n\n다음 글에서 다시 만나요 ;-) 트위터(@boutnaru)를 통해 제 소식을 확인할 수 있습니다. 또한 매체(medium)에서 다른 글도 읽을 수 있습니다. 무료 eBook은 https://TheLearningJourneyEbooks.com에서 찾을 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n\n![2024-06-23-TheLinuxSecurityJourneySGIDSavedGroupID_0.png](/assets/img/2024-06-23-TheLinuxSecurityJourneySGIDSavedGroupID_0.png)\n","ogImage":{"url":"/assets/img/2024-06-23-TheLinuxSecurityJourneySGIDSavedGroupID_0.png"},"coverImage":"/assets/img/2024-06-23-TheLinuxSecurityJourneySGIDSavedGroupID_0.png","tag":["Tech"],"readingTime":1},{"title":"AWS EC2 Linux 인스턴스의 디스크 크기 늘리는 방법","description":"","date":"2024-06-23 15:16","slug":"2024-06-23-HowtoIncreaseDiskSizeonYourAWSEC2LinuxInstance","content":"\n\n<img src=\"/assets/img/2024-06-23-HowtoIncreaseDiskSizeonYourAWSEC2LinuxInstance_0.png\" />\n\n클라우드 컴퓨팅 세계에서는 유연성이 모든 것입니다. 프로젝트가 성장함에 따라 저장 공간 요구도 증가합니다. AWS EC2에서 Linux 인스턴스를 실행 중이고 디스크 공간이 더 필요하다면 걱정하지 마십시오! AWS는 저장 용량을 확장하는 과정을 간단하게 만들어 두었습니다. 이 안내서에서는 XFS 파일 시스템에 대해 xfs_growfs 명령을 사용하는 방법에 중점을 두고 디스크 크기를 증가시키는 단계별 작업을 안내해 드리겠습니다.\n\n# 시작하기 전에\n\n시작하기 전에 다음을 확인하십시오:\n\n<div class=\"content-ad\"></div>\n\n- AWS 콘솔 접속: AWS 콘솔에 로그인해야 합니다.\n- EC2 인스턴스: 우분투 또는 아마존 리눅스와 같은 Linux 기반 EC2 인스턴스가 실행 중인지 확인하세요.\n\n# 단계 1: 현재 설정 확인하기\n\n- 인스턴스 연결: 즐겨 사용하는 SSH 클라이언트를 사용하여 인스턴스에 연결합니다. 연결하는 방법을 모르는 경우, AWS 문서를 참조하실 수 있습니다.\n- 디스크 사용량 확인: 연결된 후, 현재 디스크 공간 사용량을 확인하려면 다음 명령을 실행하세요:\n\n```bash\ndf -h\n```\n\n<div class=\"content-ad\"></div>\n\n![이미지](/assets/img/2024-06-23-HowtoIncreaseDiskSizeonYourAWSEC2LinuxInstance_1.png)\n\n모든 마운트된 파일 시스템의 현재 디스크 사용량을 보여줍니다.\n\n# 단계 2: AWS 콘솔에서 볼륨 수정하기\n\n- AWS 콘솔로 이동: AWS 관리 콘솔로 이동하여 EC2 대시보드로 이동합니다.\n- 인스턴스 찾기: \"인스턴스\" 아래에서 인스턴스를 찾아 루트 EBS 볼륨의 볼륨 ID를 메모합니다.\n\n<div class=\"content-ad\"></div>\n\n볼륨 크기를 조정하세요:\n\n- 볼륨을 선택한 후 \"작업\"을 클릭한 다음 \"볼륨 수정\"을 클릭합니다.\n\n![image](/assets/img/2024-06-23-HowtoIncreaseDiskSizeonYourAWSEC2LinuxInstance_2.png)\n\n- 원하는 새 크기를 입력하십시오 (크기를 늘릴 수는 있지만 줄일 수는 없습니다).\n- 변경 사항을 적용하려면 \"수정\"을 클릭하세요.\n\n<div class=\"content-ad\"></div>\n\n# 단계 3: Linux에서 파일 시스템 확장하기\n\n- 볼륨 크기 변경 확인: SSH 세션으로 돌아가서 새로운 크기를 인스턴스가 인식하는지 확인하세요.\n\n```js\n# lsblk\n```\n\n<img src=\"/assets/img/2024-06-23-HowtoIncreaseDiskSizeonYourAWSEC2LinuxInstance_3.png\" />\n\n<div class=\"content-ad\"></div>\n\n이 명령어를 사용하면 업데이트된 디스크 크기가 표시됩니다.\n\n2. 파티션 크기 조정: 디스크가 파티션을 사용하는 경우 (/dev/xvda4와 같이), growpart를 사용하여 파티션 크기를 조정해야 합니다:\n\n```js\n# growpart /dev/xvda 4\n```\n\n<img src=\"/assets/img/2024-06-23-HowtoIncreaseDiskSizeonYourAWSEC2LinuxInstance_4.png\" />\n\n<div class=\"content-ad\"></div>\n\n디스크 식별자와 필요에 따라 파티션 번호를 조정해 /dev/xvda를 변경하세요.\n\n3. 파일 시스템 크기 조정: XFS 파일 시스템의 경우 xfs_growfs를 사용하여 파일 시스템을 새 파티션 크기로 확장할 수 있습니다. 또한 ext 기반 파일 시스템을 resize2fs 명령을 사용하여 크기를 조정할 수도 있습니다.\n\n```js\n# xfs_growfs -d /dev/xvda1\n```\n\n![이미지](/assets/img/2024-06-23-HowtoIncreaseDiskSizeonYourAWSEC2LinuxInstance_5.png)\n\n<div class=\"content-ad\"></div>\n\n특정 파티션 (/dev/xvda4)으로 테이블 태그를 변경하십시오.\n\n# 단계 4: 확인 및 정리\n\n- 디스크 공간 확인: 파일 시스템이 성공적으로 확장되었고 추가된 공간을 사용 중인지 확인하기 위해 df -h를 한 번 더 실행해주세요.\n\n![이미지](/assets/img/2024-06-23-HowtoIncreaseDiskSizeonYourAWSEC2LinuxInstance_6.png)\n\n<div class=\"content-ad\"></div>\n\n2. 정리하기: 모든 것이 올바르게 작동하는 것에 만족하셨다면, 볼륨을 조정할 때 AWS가 자동으로 생성한 스냅샷을 삭제할 수 있습니다.\n\n# 결론\n\n여기까지 왔습니다! xfs_growfs 명령어를 사용하여 AWS EC2 Linux 인스턴스에서 XFS 파일 시스템의 디스크 크기를 성공적으로 증가시켰습니다. AWS는 이 과정을 꽤 간편하게 만들었지만, 중요한 데이터를 백업하는 것은 인프라를 변경하기 전 좋은 아이디어입니다.\n\n클라우드 리소스를 효과적으로 관리하는 능력은 가치 있는 기술입니다. 이제 프로젝트가 성장함에 따라 EC2 인스턴스의 스토리지를 확장할 수 있는 노하우를 갖추고 있습니다. 질문이 있거나 어려움을 겪는 경우, AWS 문서 및 커뮤니티 포럼은 더 많은 지침을 얻을 수 있는 훌륭한 자료입니다.","ogImage":{"url":"/assets/img/2024-06-23-HowtoIncreaseDiskSizeonYourAWSEC2LinuxInstance_0.png"},"coverImage":"/assets/img/2024-06-23-HowtoIncreaseDiskSizeonYourAWSEC2LinuxInstance_0.png","tag":["Tech"],"readingTime":3},{"title":"AI 예술은 진짜 예술인가","description":"","date":"2024-06-22 21:58","slug":"2024-06-22-IsAIArtRealArt","content":"\n\n## 코드로 생성된 수백만 장의 이미지가 새로운 경제 엔진을 가속화시켰습니다. 그러나 현대 예술은 여러 해 동안 여러 물꼬를 일으켜 온 것으로 알려져 있습니다. AI 예술은 새 시대의 도래일까요, 아니면 예술 세계의 최신 장난일까요?\n\n![image](/assets/img/2024-06-22-IsAIArtRealArt_0.png)\n\n생성 예술은 기계 학습과 기계 비전 기술을 사용하여 이미지를 생성합니다. 그리고 이것은 무엇이 진짜 예술이고 아닌지에 대해 주제를 이루며 많은 헤드라인을 생산하고 있습니다.\n\n저에게는 답이 명확합니다: AI 생성 예술은 예술입니다. 물론 그렇습니다. 그것은 레시피를 따르고 입력과 출력이 있습니다. 레시피를 개발하는 것도 예술이고, 레시피를 사용하여 새로운 것을 세상에 내놓는 것도 예술입니다. 둘 다 예술입니다. 이게 왜 논란이 되는 걸까요?\n\n<div class=\"content-ad\"></div>\n\n온라인 리소스와 문서를 공유하려면 가장 흔하게 사용되는 **Markdown** 양식을 사용하는 것이 좋습니다. 간단하고 사용하기 쉬우며 거의 모든 플랫폼에서 지원됩니다. Markdown으로 테이블을 변경해 보겠습니다:\n\n\n| Topic          | Translation                                    |\n|----------------|------------------------------------------------|\n| Language       | 언어                                           |\n| Translation    | 번역                                           |\n| Developer      | 개발자                                         |\n| Friendly       | 친절한                                        |\n\n\n위와 같이 Markdown 형식으로 테이블을 작성할 수 있습니다. 종이와 필기구 없이도 코드를 깔끔하게 구성할 수 있어서 편리합니다. 어떤 테이블 형식이 필요한지 주시면 도와드리겠습니다!\n\n\n<div class=\"content-ad\"></div>\n\n\n![Artwork](/assets/img/2024-06-22-IsAIArtRealArt_1.png)\n\n아티스트들은 최소한 세기 동안 같은 질문을 탐구해 왔습니다. 여론은 다음과 같습니다: 우리는 예술의 정의를 제한해서는 안 되며, 오히려 확장해야 합니다. 예술은 심지어 물리적 형태를 가져야 할 필요도 없습니다. 중요한 것은 아티스트의 결정, 대중과의 상호 작용, 그리고 이것이 어떤 의미를 지니는지가 있습니다. 그것이 아이디어가 얼마나 새롭고 독특한지와는 상관이 없습니다.\n\nAI로 생성된 예술에서 컴퓨터가 모든 결정을 내리는 것처럼 보일 수 있습니다. 아티스트가 알고리즘의 모든 과정을 이해하지 못할 수도 있습니다. (그것을 작성한 개발자들조차도 이러한 프로세스 내에서 일어나는 모든 일을 이해한다고 말할 수 없을 것입니다.) 그러나 한 사람의 입력 없이는 아무것도 일어나지 않을 것입니다. 그것이 예술을 찾는 지점입니다. 어떻게 자신의 기계학습 모델에 가중치를 줄 것인지 계산하는 지점이나, 교육 데이터에 대해 어떤 결정을 내리는지 같은 과정을 시작하는 방법에 대해 어떠한 선택을 하고 있는지 등입니다.\n\n언뜻 보기에 이러한 종류의 작업을 만들기 위해 사용하는 도구는 \"모든 일을 한다\"는 반대 의겢입니다. 그들의 출력물은 예측하기 어렵고 자체적인 마음을 지니는 것처럼 보입니다. 이러한 도구를 통해 흥미로운 결정을 내리기 전에 아티스트는 새로운 기술에서 수년간의 공부와 숙련도를 쌓아야 합니다. 비평가, 큐레이터, 예술을 감상하는 대중 등이 작품과 상호작용하는 새로운 방식을 개발하고 그것을 찾기 위한 새로운 기준을 정립해야 할 것입니다. 새로운 예술 형태가 새로운 예술을 형성할 것입니다. 그런 상황이 언제나 다를 수 있었겠습니까?\n\n\n<div class=\"content-ad\"></div>\n\n더 많은 창조적인 '아트'를 보려면 https://studioamelia.com에 있는 포트폴리오나 메타버스에서 https:/oncyber.io/studioamelia를 확인해보세요!","ogImage":{"url":"/assets/img/2024-06-22-IsAIArtRealArt_0.png"},"coverImage":"/assets/img/2024-06-22-IsAIArtRealArt_0.png","tag":["Tech"],"readingTime":3},{"title":"Stylar AI의 새로운 스타일 학습기 소개","description":"","date":"2024-06-22 21:57","slug":"2024-06-22-StylarAIhasanewStyleLearner","content":"\n\n저는 생성적 AI 앱 내 스타일 프리셋의 열렬한 팬입니다. 이에는 좋은 이유가 있죠.\n\n전통적인 예술에서 스타일은 작가나 디자이너의 시각적인 서명으로 작용하며, 그들의 독특한 관점과 창의적인 정체성을 담아냅니다. 이미지는 스타일을 통해 즉각적인 소재뿐만 아니라 표면 아래 감정적이고 개념적인 층도 전달합니다.\n\n독특한 스타일은 간단한 이미지도 강력한 커뮤니케이션 도구로 변화시킬 수 있어, 관객으로부터 특정한 감정, 생각, 반응을 유도합니다. 작가의 비전을 관람객에게 전달하는 차량으로, 예술을 기억에 남고 영향력 있게 만듭니다.\n\n스타일은 생성적 예술에서 다른 어떤 예술 형태에서나 중요합니다. 네, 프롬프트 자체에서 스타일을 설명하는 것이 가능하고 흔합니다. 대다수 생성적 AI 사용자들이 그렇게 하죠.\n\n<div class=\"content-ad\"></div>\n\n\n![StylarAI new Style Learner](/assets/img/2024-06-22-StylarAIhasanewStyleLearner_0.png)\n\nBut prompts are not unlimited. Generative AI apps have limited capacity to interpret long and complicated prompts. Sooner or later, it becomes really difficult, or even impossible, to describe everything that is needed in one single prompt.\n\nIt becomes an even more complex task if the creator wants to remain consistent in style and have their own visual signature.\n\nThat is where style presets and style references come in. Giving AI a reference to the style and leaving a prompt to describe your scene, subjects, and composition is the most effective way to work.\n\n\n<div class=\"content-ad\"></div>\n\nStylar AI는 이미 멋진 스타일 프리셋을 제공하고 있어요. 하지만 프리셋은 각 개별 창작자의 스타일과는 조금 다를 수 있죠.\n\n이제 Stylar AI에게 하나의 이미지를 제공하여 스타일 참조 이미지를 줄 수 있었고, 그 이미지에서 스타일을 잘 이해하는 일을 했습니다.\n\n그러나 이제는 여러 이미지로 Stylar AI를 훈련시켜 내가 원하는 스타일을 더 잘 이해할 수 있게 된 것이 가능해졌고, 정말 좋아요. 사용하기도 쉬워요.\n\n이 새로운 도구는 텍스트에서 이미지로 또는 이미지에서 이미지로 도구 중 스타일 옵션 창 옆의 “+” 기호를 클릭하여 액세스할 수 있어요.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-22-StylarAIhasanewStyleLearner_1.png\" />\n\n\"스타일 생성” 팝업 창에는 “스타일 스왑”과 “스타일 학습” 두 가지 옵션이 있어요. “스타일 스워퍼”는 과거 버전으로, 하나의 스타일 참조 이미지만 필요해요.\n\n“스타일 학습”은 지속적인 스타일을 가진 3-10개의 이미지를 학습시켜 새로운 스타일 프리셋을 만들 수 있어요.\n\n사용 과정은 직관적이고 간단해요: “스타일 학습” 버튼을 클릭하면 새 창이 열려 이미지를 업로드하고 새 스타일에 이름을 지정할 수 있어요. 필요한 정보가 모두 담긴 “학습 가이드” 링크도 있어요. 읽어보는 걸 추천해요!\n\n<div class=\"content-ad\"></div>\n\n![2024-06-22-StylarAIhasanewStyleLearner_2](/assets/img/2024-06-22-StylarAIhasanewStyleLearner_2.png)\n\n이미지를 업로드하고 스타일을 지정한 후 \"학습\" 버튼을 클릭하세요.\n\n학습 과정에는 시간이 소요됩니다. Stylar AI는 카운트다운 타이머를 제공할 것입니다. 제가 시행한 경우, 10개의 이미지를 기반으로 20~30분이 소요되었습니다. 작은 이미지 세트에 대해 학습하는 것이 빠를 것으로 예상되지만, 이 경우 더 많이 하는 것이 더 나은 결과를 가져다주고 기다릴 가치가 있다고 생각합니다.\n\n제가 생성한 이미지를 \"텍스트-이미지\" 및 \"이미지-이미지\" 도구로 테스트했고 결과가 인상적이었습니다.\n\n<div class=\"content-ad\"></div>\n\n여러 이미지 스타일 프리셋에서 훈련을 받은 것은 단일 이미지 스타일 참조와 비교하여 훨씬 다양한 경우에 더 잘 작동합니다.\n\n여기 몇 가지 새로운 스타일 프리셋으로 테스트한 컴필레이션이 있습니다. 각 이미지 행은 프롬프트 없이 이미지-이미지 도구에 적용된 스타일을 보여주며, 간단한 프롬프트 \"춤을 추는 여자\"로 텍스트-이미지에 적용된 스타일을 보여줍니다. 마지막 이미지는 \"귀여운 뛰는 긴 모발 강아지\"라는 프롬프트와 함께 표시됩니다.\n\n![이미지](/assets/img/2024-06-22-StylarAIhasanewStyleLearner_3.png)\n\n![이미지](/assets/img/2024-06-22-StylarAIhasanewStyleLearner_4.png)\n\n<div class=\"content-ad\"></div>\n\n![Stylar AI](/assets/img/2024-06-22-StylarAIhasanewStyleLearner_5.png)\n\n결과는 정말 멋지다고 생각해요. 하지만 가장 마음에 들었던 건 여러 도구들과 다양한 프롬프트를 사용해도 달성할 수 있는 일관성이었어요.\n\n이런 일관성은 개인적인 스타일과 브랜드를 구축하기 위해 필요한 요소에요. 이 도구는 전문가들을 위한 것이며 전문적인 결과를 만들어냅니다.\n\nStylar AI는 이미 높은 품질의 작업을 위한 도구로 잘 갖추어져 있어요. 이 새로운 애드온은 그 철학을 더욱 발전시키고 있답니다.\n\n<div class=\"content-ad\"></div>\n\n아이바라스 그라우지니스","ogImage":{"url":"/assets/img/2024-06-22-StylarAIhasanewStyleLearner_0.png"},"coverImage":"/assets/img/2024-06-22-StylarAIhasanewStyleLearner_0.png","tag":["Tech"],"readingTime":4}],"page":"24","totalPageCount":113,"totalPageGroupCount":6,"lastPageGroup":20,"currentPageGroup":1},"__N_SSG":true}