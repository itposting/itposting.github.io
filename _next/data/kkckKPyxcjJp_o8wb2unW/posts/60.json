{"pageProps":{"posts":[{"title":"제목 Debian12에서 자체 호스팅 Kubernetes 스택 만들기 및 kube-prometheus-stack로 모니터링하기","description":"","date":"2024-06-20 14:13","slug":"2024-06-20-CreatingaSelfHostedKubernetesStackonDebian12andmonitoringwithkube-prometheus-stack","content":"\n\n아래는 가정에서 Debian12 서버에서 Proxmox에 세 개 노드 Kubernetes 클러스터를 구축하는 지침입니다.\n\n이 문서의 목적은 저희가 집에서 실행 중인 도커 서비스를 도커에서 Kubernetes 클러스터로 옮기고 kube-Prometheus-stack을 사용하여 전체 시스템을 모니터링하고 경보를 설정하는 것입니다.\n\n<div class=\"content-ad\"></div>\n\n이 가이드는 저에게 도움이 되었고, 웹의 다양한 위치에서 뽑았습니다 (모든 참고자료는 아래에 있습니다).\n\n# 3 노드 클러스터 구축하기\n\n## 소개\n\n모든 것은 어디선가 시작되어야 하며, Kubernetes로 테스트/실행할 환경을 갖고 있는 것은 좋은 생각입니다. 하이퍼스케일러와 같은 타사 업체들은 인그레스와 영구 저장소가 모두 설정된 환경을 제공해줄 것입니다. 하지만 아래 정보는 Debian 12를 사용하여 로컬 베어 메탈 테스트 환경을 만드는 데 사용됩니다. 제 경우에는 Proxmox에서 가상 플랫폼을 사용하고 있습니다.\n\n<div class=\"content-ad\"></div>\n\n안녕하세요!\n\n위의 내용을 한국어로 번역해 드리겠습니다.\n\n참고:\n\n이 작업은 이상적으로는 Ansible 코드로 실행되어야 하지만, 저는 아직 Ansible 코드를 작성하는 데 시간을 들이지 못해 수동 단계를 여기에 남겼습니다.\n\n## 빌드\n\n## 요구 사항\n\n도움이 되었기를 바랍니다. 추가로 도와드릴 내용이 있으면 언제든지 말씀해 주세요.\n\n<div class=\"content-ad\"></div>\n\n3대의 서버가 구축되어 실행 중이며 다음과 같은 사양을 갖추고 있습니다.\n\n| 항목 | 설명 | 비고 |\n|---|---|---|\n| OS | Debian 12 | |\n| CPU/vCPU | 4 | 최소 2 |\n| RAM | 4GB | 최소 2GB |\n| 디스크 | 100GB | 최소 20GB |\n| IP | 정적 | DHCP 예약 |\n| 기타 | 각 노드는 다른 노드의 IP에 핑을 보낼 수 있습니다. |\n\n## 서버 설정\n\n이 환경에서는 다음과 같이 3대의 서버가 설정되어 있습니다.\n\n<div class=\"content-ad\"></div>\n\n\nMaster Node - kube-master - 10.10.0.100 \nWorker Node 1 - kube-worker01 - 10.10.0.101 \nWorker Node 2 - kube-worker02 - 10.10.0.102\n\n\n## 기본 OS 설정\n\n다음 명령어는 기본 OS 설정을하고 로컬 DNS와 통신하는 데 사용됩니다.\n\n외부 DNS 설정이있는 경우이를 사용하십시오. 이것은 테스트 환경이므로 서버가 어느 정도 자립 할 수 있도록하려고합니다.\n\n<div class=\"content-ad\"></div>\n\n## sudo 설치\n\nDebian 12에는 기본으로 sudo가 설치되어 있지 않습니다. 다음 단계를 따라 설치하고 사용자를 sudo 그룹에 추가하세요.\n\n```js\nsu -\napt install sudo\nusermod -aG sudo <사용자명>\n```\n\n## 호스트 이름 설정\n\n<div class=\"content-ad\"></div>\n\n```js\nkube-master - sudo hostnamectl set-hostname \"kube-master.local\" kube \nworker01 - sudo hostnamectl set-hostname \"kube-worker01.local\" kube \nworker02 - sudo hostnamectl set-hostname \"kube-worker02.local\"\n```\n\nSet /etc/hosts\n\nOn all three nodes run\n\n```js\nsudo nano /etc/hosts\n```\n\n<div class=\"content-ad\"></div>\n\n파일 끝에 다음을 추가해주세요\n\n```js\n10.10.0.100    kube-master.local    kube-master\n10.10.0.101    kube-worker01.local    kube-worker01\n10.10.0.102    kube-worker02.local    kube-worker02\n```\n\n## Swap 비활성화\n\nKubernetes는 Linux 스왑을 선호하지 않습니다. 모든 노드에서 스왑을 비활성화해주세요.\n\n<div class=\"content-ad\"></div>\n\n```js\nsudo swapoff -a\nsudo sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n```\n\n## 방화벽\n\nUFW 또는 FirewallD가 기본적으로 설치되어 있지 않거나 활성화되어 있지 않습니다. 테스트 환경에서 실행하지 않았으므로 방화벽/UFW를 실행하려면 다음 명령을 실행하십시오. 이 가이드의 나머지 부분은 방화벽에 대해 다루지 않을 것입니다.\n\n마스터 노드에서 실행하세요.\n\n<div class=\"content-ad\"></div>\n\n```bash\nsudo ufw allow 6443/tcp\nsudo ufw allow 2379/tcp\nsudo ufw allow 2380/tcp\nsudo ufw allow 10250/tcp\nsudo ufw allow 10251/tcp\nsudo ufw allow 10252/tcp\nsudo ufw allow 10255/tcp\nsudo ufw reload\n```\n\nWorker Nodes,\n\n```bash\nsudo ufw allow 10250/tcp\nsudo ufw allow 30000:32767/tcp\nsudo ufw reload\n```\n\n## Containerd 설치하기\n\n<div class=\"content-ad\"></div>\n\nContainerd는 Kubernetes의 컨테이너 지원을 제공해요.\n\n이 명령어들은 모든 3개의 노드에서 실행되어야 해요.\n\n다음과 같은 커널 매개변수를 설정하세요\n\n```js\ncat <<EOF | sudo tee /etc/modules-load.d/containerd.conf\noverlay\nbr_netfilter\nEOF\n```\n\n<div class=\"content-ad\"></div>\n\n```shell\nsudo modprobe overlay\nsudo modprobe br_netfilter\ncat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-k8s.conf\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nEOF\n```\n\n위 변경 사항을 적용하세요.\n\n```shell\nsudo sysctl --system\n```\n\ncontainerd 패키지를 설치하세요.\n\n<div class=\"content-ad\"></div>\n\n```js\nsudo apt update\nsudo apt -y install containerd\n```\n\nKubernetes를 containerd를 사용하도록 설정합니다.\n\n```js\ncontainerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1\n```\n\n마지막 명령어로 생성된 config.toml을 systemd를 사용하도록 수정하세요.\n\n<div class=\"content-ad\"></div>\n\n```sh\nsudo nano /etc/containerd/config.toml\n```\n\n아래와 같이 변경해주세요.\n\n```sh\n‘SystemdCgroup = false’\n```\n\n<div class=\"content-ad\"></div>\n\n\n시스템디C그룹 = true\n\n\n저장하고 나가기\n\n컨테이너디 다시 시작 및 활성화\n\n\nsudo systemctl restart containerd\nsudo systemctl enable containerd\n\n\n<div class=\"content-ad\"></div>\n\n# Kubernetes 설정\n\n모든 노드에서 실행하세요\n\n## 리포지토리 추가\n\nKubernetes 패키지는 기본 리포지토리에 포함되어 있지 않으므로 추가해야 합니다\n\n<div class=\"content-ad\"></div>\n\n```js\n에코 \"deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] <https://pkgs.k8s.io/core:/stable:/v1.28/deb/> /\" | sudo tee /etc/apt/sources.list.d/kubernetes.list\ncurl -fsSL <https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key> | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\n```\n\n## Kube 도구 설치\n\n```js\nsudo apt update\nsudo apt install kubelet kubeadm kubectl -y\nsudo apt-mark hold kubelet kubeadm kubectl\n```\n\n# Kubernetes 클러스터 설치\n\n<div class=\"content-ad\"></div>\n\n과거에는 kubelet이 명령줄 옵션을 허용했지만, 이러한 기능이 제거되었고 이제 YAML 파일을 사용하여 입력 옵션을 제공합니다.\n\n마스터 노드에서만 실행하도록 설정해주세요.\n\n## kubelet.yaml 파일 생성\n\n홈 폴더에 파일을 생성하세요.\n\n<div class=\"content-ad\"></div>\n\n```js\n나노 kubelet.yaml\n```\n\n다음 내용 추가\n\n```js\napiVersion: kubeadm.k8s.io/v1beta3\nkind: InitConfiguration\n---\napiVersion: kubeadm.k8s.io/v1beta3\nkind: ClusterConfiguration\nkubernetesVersion: \"1.28.0\" \ncontrolPlaneEndpoint: \"k8s-master\"\n---\napiVersion: kubelet.config.k8s.io/v1beta1\nkind: KubeletConfiguration\n```\n\n참고:\n\n<div class=\"content-ad\"></div>\n\n라인 kubernetesVersion: \"1.28.0\"에는 더 최근 버전이 있을 수 있습니다. 1.30.0으로 시도해 봤지만 kube 패키지가 충분히 최신 상태가 아니라는 메시지를 받았습니다.\n\n## Kubernetes Cluster 초기화\n\n다음 명령어는 마스터 Kubernetes 노드를 설정합니다.\n\n마스터 노드에서만 실행하세요\n\n<div class=\"content-ad\"></div>\n\n```sh\nsudo kubeadm init --config kubelet.yaml\n```\n\n위와 같이 출력이 나와야 합니다.\n\n이와 유사한 출력은 마스터 노드에 성공적으로 제어 평면이 설치되었음을 확인합니다.\n\n참고:\n\n<div class=\"content-ad\"></div>\n\n## Kubectl 액세스 설정\n\n친구야, Kubernetes 제어 평면에 kubectl 명령어 액세스를 활성화하기 위해 다음 설정을 완료해야 돼.\n\n마스터 노드에서만 실행해.\n\n<div class=\"content-ad\"></div>\n\n루트(root)로 실행하지 마세요\n\n```js\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n```\n\n## Kubectl 명령어 테스트\n\nkubectl 명령어를 테스트할 수 있습니다\n\n<div class=\"content-ad\"></div>\n\n마스터 노드에서만 실행되요 :)\n\n```js\nkubectl get nodes\nkubectl cluster-info\n```\n\n비슷한 출력이 표시돼요\n\n```js\nNAME                          STATUS   ROLES           AGE   VERSION\nk8s-master.safewebbox.com     Ready    control-plane   24h   v1.28.11\n```\n\n<div class=\"content-ad\"></div>\n\n그리고\n\n```js\nKubernetes 제어 평면은 <https://k8s-master:6443>에서 실행 중입니다.\nCoreDNS는 <https://k8s-master:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy>에서 실행 중입니다.\n```\n\n## 워커 노드를 클러스터에 연결\n\n이전에 마스터 노드에서 kubeadm init 명령을 실행했을 때 고유한 문자열이 포함된 kubectl join 명령이 제공되었습니다. 이 kubeadm join 명령이 지금 사용될 것입니다.\n\n<div class=\"content-ad\"></div>\n\n## Join Command\n\n워커 노드 01과 02에서 실행하세요\n\n참고\n\n당신의 명령어는 다를 것입니다. 이것을 그대로 복사하지 마세요. 이것은 마스터 노드에서의 출력을 예로 든 것입니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nsudo kubeadm k8s-master:6443에 가입 --token 21nm87.x1lgd4jf0lqiiiau \\\\\n--discovery-token-ca-cert-hash sha256:28b503f1f2a2592678724c482776f04b445c5f99d76915552f14e68a24b78009\n```\n\n성공 메시지는 다음과 같이 표시됩니다.\n\n# 테스트 워커 노드가 올바르게 가입되었습니다.\n\n마스터 노드에서 실행하기\n\n<div class=\"content-ad\"></div>\n\n```js\nkubectl get nodes\n```\n\n위 명령어를 입력하면 다음과 유사한 출력이 반환됩니다.\n\n```js\nNAME                          STATUS   ROLES           AGE   VERSION\nk8s-master.safewebbox.com     Ready    control-plane   24시간   v1.28.11\nk8s-worker01.safewebbox.com   Ready    <none>          23시간   v1.28.11\nk8s-worker02.safewebbox.com   Ready    <none>          23시간   v1.28.11\n```\n\n# Pod Networking\n\n\n<div class=\"content-ad\"></div>\n\n친구야, \n팟 네트워킹, 프록시 등을 돕기 위해 calico를 설치해야 해요.\n\n## Calico 설치\n\n마스터 노드에서 실행하세요.\n\n```js\nkubectl apply -f <https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/calico.yaml>\n```\n\n<div class=\"content-ad\"></div>\n\n## Calico 설치 확인\n\n마스터 노드에서 실행\n\n다음 명령을 실행하여 Calico를 위한 설정된 팟(컨테이너)을 확인하세요.\n\n```js\nkubectl get pods -n kube-system\n```\n\n<div class=\"content-ad\"></div>\n\n모든 파드의 실행 상태를 확인하려면 약 5분이 소요될 수 있습니다. 아래 명령어를 실행해 주세요.\n\n```js\nwatch kubectl get pods -n kube-system\n```\n\n이 명령어는 변경 사항이 있을 때 명령어의 출력을 업데이트해 줍니다.\n\n모든 파드가 실행 중일 때 준비됩니다.\n\n<div class=\"content-ad\"></div>\n\n\n이름                                                준비됨   상태    재시작      나이\n**calico-kube-controllers-7ddc4f45bc-sfjh5            1/1     실행중   0             24시간\ncalico-node-r5x4f                                   1/1     실행중   0             24시간\ncalico-node-wqmdq                                   1/1     실행중   0             24시간\ncalico-node-x6r45                                   1/1     실행중   0**             24시간\ncoredns-5dd5756b68-2mkb7                            1/1     실행중   0             24시간\ncoredns-5dd5756b68-l4b7j                            1/1     실행중   0             24시간\netcd-k8s-master.safewebbox.com                      1/1     실행중   0             24시간\nkube-apiserver-k8s-master.safewebbox.com            1/1     실행중   0             24시간\nkube-controller-manager-k8s-master.safewebbox.com   1/1     실행중   3 (23시간 전)   24시간\nkube-proxy-5t2sj                                    1/1     실행중   0             24시간\nkube-proxy-89ldw                                    1/1     실행중   0             24시간\nkube-proxy-ckwl2                                    1/1     실행중   0             24시간\nkube-scheduler-k8s-master.safewebbox.com            1/1     실행중   3 (23시간 전)   24시간\n\n\n## 노드 확인\n\n마스터 노드에서 실행\n\n실행\n\n\n<div class=\"content-ad\"></div>\n\n```js\nkubectl get node\n```\n\n```js\n이름                         상태     역할            시간    버전\nk8s-master.safewebbox.com    준비     컨트롤 플레인    24시간 v1.28.11\nk8s-worker01.safewebbox.com  준비     <없음>          24시간 v1.28.11\nk8s-worker02.safewebbox.com  준비     <없음>          24시간 v1.28.11\n```\n\n# 원격 Kubernetes 클러스터에 로컬 액세스 설정하기\n\n## 사전 요구 사항\n\n<div class=\"content-ad\"></div>\n\n이 여정을 시작하기 전에 다음 사전 조건들을 갖추었는지 확인해주세요:\n\n- 실행 중인 쿠버네티스 클러스터: 원격 쿠버네티스 클러스터가 kubeadm을 사용하여 배포되어 운영 중인지 확인하세요.\n- 로컬에 kubectl 설치: 로컬 머신에 쿠버네티스 명령줄 도구인 kubectl을 설치하세요.\n- 로컬 머신에서 kube-master.local 서버로의 SSH 접근\n\n## 로컬 서버 설정\n\n로컬 머신에서\n\n<div class=\"content-ad\"></div>\n\n로컬 홈 폴더 아래에 .kube라는 폴더를 만들어 주세요.\n\n```bash\ncd\nmkdir .kube\n```\n\n## 클러스터 구성 가져오기\n\n로컬 머신에서\n\n<div class=\"content-ad\"></div>\n\n파일 admin.conf을 /etc/kubernetes/ 디렉토리에서 kube-master.local 서버로 가져와야 합니다.\n\nkube-master.local 서버의 원격 사용자가 user1이라고 가정하고 로컬 사용자가 해당 사용자로 kube-master.local에 ssh 할 수 있다면 다음 명령어를 사용해야 합니다.\n\n```js\nscp user1@kube-master.local:/etc/kubernetes/admin.conf .kube/config\n```\n\n참고:\n\n<div class=\"content-ad\"></div>\n\n이 방법을 사용하면 로컬 머신을 사용하는 모든 사용자가 구성 파일을 가져와야 합니다.\n\n## .kube/config 확인\n\n로컬 머신에서\n\n구성 파일이 올바르게 보이는지 확인하세요\n\n<div class=\"content-ad\"></div>\n\n```yaml\napiVersion: v1\nclusters:\n- cluster:\n    server: https://k8s-master:6443\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: kubernetes-admin\n  name: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: kubernetes-admin\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDQVF8NC9FQS9FQURHQ0NBZ0VHQmJhbEJnVzJzZ0pzSERFUEhBdmrvUW9zYUM4bS9BTkJ3SUlxbnhBQVFWXjQKR0VBR01CRUdKQVNVQ0NRUWdVRHFKV3AwOUJMUWpRaXhxTU93WkljNW5kUU42MVl6TVJqVDlnREVzZUVJdEM0UkdBaktnZVFMUgpVZnlVeEIzVk1WOWJXRkpSRWh6UkVaUllXbDZiR0Y2YjJ4cGJteGhZMlJ2SUY5cmRYbDFZaTVZX2djaENjODBRakp0ClI5R1o2eG1KRXQ3R0cvaVd0WmMwRWdzY0d4Y00vM21jc1RuVFFJU1VUYkc2RUN0WTR6VEtxOW93bDBiTFJiYW1wbjRBUHMKZmxIcEt4ZFZYVDRNWGpGUHhnYWtaQkpIT01Iam5TWGlDRVdRcXE3WDdOYUdsS3ptN1FXX2tWeWw2Sjh3VHluNkJFbVd2cgp6SjIvUmdTc2J3TjU2V2JaSkJKUzFwTWJ5NCtpdG00OEVZdG1YaDduZW8vdGI2dURYNGJaeU85Ujgwb2I0YXNPM1pVcHoKTENHaFN3bUQ4ekRNNnpVSG1ubnNkMlRJVk42TDhYZXFqMVRBR0lJUVQ2TE02c0J6K1dxV1ppZjV6QU9VQ3pVSEFhCnbvNFNmVWlsbGc2NVVSVmNkbDZTaGZuN0ZpdjJOSGFiRW9aQnF3cG45bHZWYnkyNERhVDIvbFhQbDA0QkNpMWFDUk4KdEw4Z1FlbDBtTkhicGwrd3pFRno2b2hkN25ucGpHWHoxSW44Z3RwdnNnWWVnOGszbEd5NFgxTVJjM0krMFN6QmdrbAp6cUdaTVFqVnBzdkJkMzJSWTcxNmRlV3FJSEVEV1UyMjRBZmRoM3BRd0xHbUEyd1dEQjBHT3preUNYcTFFQWtMN2JICmJDcVdWcktOVTNpOGw5SktXQ2tML3dhMEdMOTNJMnNIVURRWHlXQmc0WUlvWTdPYURnOFB4bHlEbitqQlozb2RvTEIKalVXdmVYMjJ5TzMzT3BZVFN0cUErMDdIZjBiY0NmVVhCbnVTr1M2YUxMUDVkajQyb3BFbWttOGhxMUZUcTRRZwpHckpLMWtvR3lFdWVsM2VMMW01Qi9WL3RReWtZY1cwb0c3UVNudHIzY1RLcE1GSXFyQk81aTB0bmFzb3QzK3V3ClBWZVVGMmM3cG5hTnI0QmxsbzF2eE42T2dHczFNcndUb2lGSW1YK2NTMmZNL1NQckV3NUN4R0V6LzRYNDJGNFVCR25pCld0bzRWdFM3VUIyUmVvRDNZZUJaYkFNdnRYRExvT0QzNnczcTBtMllTWGorVU5WUjBYTk1aZ2tCQzdITWN2L29SQUkKS3I1VkpDM2ZRUGNjWURGcmVBd0tLb3hNdGd0SUpZMlBhZityaEV4cVZjYVJzQmZPMEVabGJPVTd1Mk5vMFQrUgp0Qlpnc29JdkozZFlUZktsZkZaNXg1NlE0Nk8rVWM4WC9kS1BzWkYweTVSNU9jWFFESmZkc3JGeWxRcWxzWmd3CmpiVEU5Qkhlb3p6cUR4V254Y1k2ZWNHcjFkeXpURE5yU2laekxHcHYwb1hwL3krajU2ZHRZbUJtUVJvUUFrN2kBWR7blEwcEt1eEkvNTZzNVlPcjRaZml2eThqbApmNDRMWEMraStSWWRRdWIzQ1NGQ0l3VVA1WE9VSFRPYk5HRkd3PS0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCgLwRG9jdW1lbnQ=\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFUREPLDd5OHjRFAErlk;sdjgghjkl;sjkl;dfhgjwlk;sjkl;dfghjkl;sdfghkl;sdghjkl;lsdfgjkl;sdfghklsdafgjhkjldfhgjlksdfghjlk;sdfghjlk;sdfgsFWlWaXpQdVjRUdjgMmR6YWV5Q2hh\n```\n\n## kubectl 설정 업데이트\n\n로컬 머신에서\n\n내보내기 설정\n\n<div class=\"content-ad\"></div>\n\n\nexport KUBECONFIG=~/.kube/config\n\n\n## kubectl 명령어 테스트\n\n로컬 머신에서\n\n다음 명령어를 로컬 사용자(user1)로 실행하세요.\n\n<div class=\"content-ad\"></div>\n\n```js\nkubectl config view\n```\n\n비슷한 내용이 표시될 것입니다.\n\n```js\napiVersion: v1\nclusters:\n- cluster:\ncertificate-authority-data: DATA+OMITTED\nserver: <https://k8s-master:6443>\nname: kubernetes\ncontexts:\n- context:\ncluster: kubernetes\nuser: kubernetes-admin\nname: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: kubernetes-admin\nuser:\nclient-certificate-data: DATA+OMITTED\nclient-key-data: DATA+OMITTED\n```\n\n## Lens 설정\n\n\n<div class=\"content-ad\"></div>\n\n## 렌즈란 무엇인가요?\n\n렌즈는 Mirantis에서 개발한 크로스 플랫폼 GUI로, Kubernetes 클러스터를 보고 상호 작용하는 데 사용됩니다. Kubernetes를 학습하는 동안 (테스트) 클러스터 내에서 무슨 일이 벌어지고 있는지 확인하는 데 매우 유용합니다.\n\nhttps://k8slens.dev/\n\n## 렌즈 실행하기\n\n<div class=\"content-ad\"></div>\n\n로컬 머신에서\n\n선호하는 플랫폼에 Lens를 설치하세요\n\nLens 설정을 실행하세요\n\nLens 클라우드 계정 설정\n\n<div class=\"content-ad\"></div>\n\n## Lens에 Kubernetes 클러스터 추가하기\n\n로컬 머신에서\n\n렌즈를 열면, 파일 → 클러스터 추가를 클릭해주세요.\n\n.kube/config 파일의 내용을 붙여넣어주세요.\n\n<div class=\"content-ad\"></div>\n\n```yaml\napiVersion: v1\nclusters:\n- cluster:sgsOQVFFTEJRQXdGVEVUTUJFR0EffhssdfghfhsdfgsgGN6QWVGdzB5TkRBMk1UZ3hNREEyTkRWYUZ3MHpOREEyTVRZeE1ERXhORFZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNybmJsem12dnV6UmVDYnUrSThHQ2VleWk3Tkc0eGFlQnNrcTlzUDBYM3ptUW1WZDlsQkdoNzRmeEEKSkRJOGJJSFArK2I2RTJJSW9OMXo4ODFqWXNSNkVpc0UzMkFpUmVyM2FHbEVtM2Z5N29VY1VGcFVxUG9ZYldzQQpUZlhWTlRHWVJBZmRhL25JZU4vbVZQZmNYU215WWoreEpKSnJwQzlaZDk3UzY4NzF3KzFhRTBmNnhUN1YrU2EwCjhGWTZpem5udWowVU5sQWpRcG9HL2xWdTZaYUlvR1Npdm1rT0NWLzNtaFpKZ1FEVFJpb2dsUG9rTGNkeFNHcm8KR0dHL3dJMXB0b2JJMVA1cXUyVmQrY3pIQmtMOXhodm1jMHVoa2dvTmhIMVowa2MxbERBSlk5clRtT0ZBMVNuMQphL00yWTNFS1BJNFgwdjF2UFEwSzNoeWVhbDV4QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUVHY2SWxTQU5CZVBuU3llM0hTZVRvRVdDTDZqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkx1MW5nVDd6dApwZWZMMDVSRERQbEljWWd6NWVjcU9hb2FzMkd5SEtkZHhXK1IwdDRXanZIUVFoS3pzOE5JVW1GcTlndm80dUxECkx6dDRGTWFOL3RhUEsyM0pPVUp1RDhjNE1TdmpZenZCK2NOb2FIQThjWmRodXBIYy9ydzFJQUhaSWxaZ3M1NjEKK0VVUzlwNDd6cU1BbHQ1QmxBREwreGxLUExuZEdzSzhBTVJRMVAzVkNxS1QyN2dieEZnRFYwU3VWRDRoUEF4UApZaVRKWkhTaTVpbTg1RFFsSTdiQ0hseTIyblg3UXZuRjNCNngvWjl5YjdjSUJYZXZpcEhTaHFGVUlrOXFCeFE2CjE0dnFGVHZFYVZRU1FxcEgyZUh1R21WbXJYekpjMytUWENzQ1BENjd0aGUxZGdMblBEaGRTWDcvY1JBS0NWa0gKaVMwMHBBUUducWM2Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: <https://k8s-master:6443>\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: kubernetes-admin\n  name: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: kubernetes-admin\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDfhjldfhjdfghjkl;dghjkl;szdg;hjzg;hjzdg;hjklzgZ0F3SUJBZ0lJSlFqYzlrb2hqZHN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBMk1UZ3hNREEyTkRWYUZ3MHlOVEEyTVRneE1ERXhORGRhTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXQ5c2dNeGt3Z0h1UTYrcU0KTTZ2VmlBY2Vmd1BCK0NGZzRkeVltelYxcEsrOEdBRWZ2Qjg1bmNhT1lVZzNPZHVPZXQ4V2JBcnBXM3JqZXVIRgpXQzlvd2hBRTVEeGNEK1h0TlZVaVZpelB1VkxMOEZ0REtCb1hwV3h5SFdIK2lNNkZFRmVrbVdiVDFlY3NJaXVMCkFlNWN3QkUrNitFa2VxUUtpWC9VdE9mNDlGaVJtdmhaS1BCYVlsZ1pjREdFYTVoeDNRM3JxYjcxYVB4Z0w3YUQKdURGNnpSRE5NUkt4VVZ1TjFROFJIei9Ia1FvNVNaUE1Lc1JtYzJ6MHpHN3gwWEVVM0s2cXA4UjJmMEFaT25LegpjdWFITkp3MFV2T25nYlpESUxQYTlXQ3dFclJKb2xxa0E2Zk1tRFRWY2dtYllYN0ZIWFMrZkg1YXB4engvK0Y4CkhDazlBUUlEQVFBQm8xWXdWREFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUVHY2SWxTQU5CZVBuU3llM0hTZVRvRVdDTDZqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkx1MW5nVDd6dApwZWZMMDVSRERQbEljWWd6NWVjcU9hb2FzMkd5SEtkZHhXK1IwdDRXanZIUVFoS3pzOE5JVW1GcTlndm80dUxECkx6dDRGTWFOL3RhUEsyM0pPVUp1RDhjNE1TdmpZenZCK2NOb2FIQThjWmRodXBIYy9ydzFJQUhaSWxaZ3M1NjEKK0VVUzlwNDd6cU1BbHQ1QmxBREwreGxLUExuZEdzSzhBTVJRMVAzVkNxS1QyN2dieEZnRFYwU3VWRDRoUEF4UApZaVRKWkhTaTV\n\n<div class=\"content-ad\"></div>\n\n## 뷰\n\n초기 뷰는 다음과 같이 보입니다.\n\n참고:\n\n통계는 즉시 표시되지 않지만 Prometheus 설정이 설치되면 이 데이터가 표시됩니다.\n\n<div class=\"content-ad\"></div>\n\n```\n![Image](/assets/img/2024-06-20-CreatingaSelfHostedKubernetesStackonDebian12andmonitoringwithkube-prometheus-stack_1.png)\n\n# 쿠버네티스 로드 밸런싱을 위해 MetaLB 설치\n\n하이퍼스케일러 또는 제공된 버전의 Kubernetes와 자체 호스팅/온프렘 Kubernetes 설치의 주요 차이점은 간단합니다. Kubernetes 서비스 모델은 인그레스 포인트, 로드 밸런서, 지속적인 데이터 및 기타 여러 가지를 포함한 전체 설정을 제공할 것입니다.\n\n하지만 자체 호스팅된 구성에서는 이러한 것들을 설정해주어야 합니다.\n\n\n<div class=\"content-ad\"></div>\n\n이 지침은 MetaLB를 인그레스 포인트로 설정하고 사용하는 방법을 다룹니다. 이것은 basically 서비스(nginx, haproxy, grafana, prmetheus 등)가 쿠버네티스에서 MetaLB를 사용하여 인터넷/외부에서 액세스할 수 있도록 설정하는 것을 의미합니다.\n\n# MetaLB란 무엇인가요?\n\nchatGPT의 말을 인용하면,\n\nMetaLB는 클라우드 환경이 아닌 베어메탈에서 실행되는 Kubernetes 클러스터용 로드 밸런서 구현체입니다(클라우드 환경에서는 일반적으로 클라우드 제공업체가 로드 밸런서를 제공합니다). MetaLB는 온프레미스 Kubernetes 환경 내에서 로드 밸런서를 생성할 수 있는 필수 구성 요소를 제공하여 클라우드 기반 로드 밸런서가 작동하는 방식과 유사하게 클러스터 외부에 서비스를 노출할 수 있도록 합니다.\n\n<div class=\"content-ad\"></div>\n\n# MetalLB의 주요 기능\n\n- 베어 메탈 클러스터용 로드 밸런서: MetalLB는 베어 메탈 하드웨어에서 실행되거나 로드 밸런서 지원이 없는 환경에서 Kubernetes 클러스터에서 LoadBalancer 유형 서비스를 사용할 수 있게 해줍니다.\n- 다중 프로토콜 지원: MetalLB는 Layer 2(데이터 링크 계층) 및 BGP(Border Gateway Protocol) 모두를 지원하여 네트워크 내에서 IP 주소를 어떻게 관리하고 경유할지에 대한 유연성을 제공합니다.\n- 구성 유연성: MetalLB를 사용자 고유의 네트워크 요구에 맞게 구성할 수 있습니다. 주소 풀 지정, 로드 밸런서의 동작 정의 등이 포함됩니다.\n- Kubernetes 통합: MetalLB는 Kubernetes와 완벽하게 통합되어 있습니다. LoadBalancer 유형의 서비스 생성을 수신하고 미리 구성된 풀에서 해당 서비스에 IP 주소를 할당합니다.\n\n# MetalLB 작동 방식\n\n- Layer 2 모드: 이 모드에서 MetalLB는 ARP(Address Resolution Protocol)를 사용하여 IP 주소를 로컬 네트워크에 알리게 합니다. 이를 통해 Kubernetes 서비스 IP가 네트워크에서 로컬 IP처럼 보이도록 합니다.\n- BGP 모드: BGP 모드에서 MetalLB는 BGP 프로토콜을 사용하여 서비스의 IP 주소를 네트워크 라우터에 광고합니다. 이를 통해 더 고급 라우팅 구성이 가능하며 대규모 및 복잡한 네트워크 환경에 적합합니다.\n\n<div class=\"content-ad\"></div>\n\n# 전형적인 사용 사례\n\n- 설치: MetaLB를 Kubernetes 클러스터에 설치하려면 필요한 매니페스트를 적용하거나 Helm과 같은 패키지 관리자를 사용하십시오.\n- 구성: MetaLB를 구성하려면 주소 풀과 운영 모드(Layer 2 또는 BGP)를 정의하는 ConfigMap을 만듭니다.\n- 서비스 생성: LoadBalancer 유형의 Kubernetes 서비스를 만들 때, MetaLB는 풀에서 IP 주소를 할당하고 접근 가능하게 만듭니다.\n\n# 전제 조건\n\n## IP 서브넷\n\n<div class=\"content-ad\"></div>\n\n설정 중에는 네트워크에서 액세스할 수 있는 IP 주소 범위가 필요합니다.\n\n이 지침에서는 내부 LAN의 10 IP 범위를 사용할 것입니다.\n\n```js\n10.10.0.240-10.10.0.250\n```\n\n## 쿠버네티스 클러스터 설정\n\n<div class=\"content-ad\"></div>\n\n여기에서 해당 작업에 대한 지침을 찾을 수 있습니다.\n\n**Kubernetes 3 노드 클러스터 구축 방법**\n\n### 테스트 배포\n\nKubernetes 외부의 인그레스가 올바르게 작동하는지 테스트하기 위해 테스트 nginx 서비스를 설정합니다.\n\n<div class=\"content-ad\"></div>\n\n## NginX 배포 생성\n\n배포를 생성합니다.\n\n```js\nkubectl create deploy nginx --image=nginx:1.20\n```\n\n다음과 같이 배포, 레플리카셋 및 파드를 나열합니다.\n\n<div class=\"content-ad\"></div>\n\n```yaml\nkubectl get deploy,rs,po\n```\n\n예상 출력은\n\n```yaml\nkubectl get deploy,rs,po\n```\n\n```yaml\nNAME                    READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/nginx   1/1     1            1           39sNAME                               DESIRED   CURRENT   READY   AGE\nreplicaset.apps/nginx-6d777db949   1         1         1       38sNAME                         READY   STATUS    RESTARTS   AGE\npod/nginx-6d777db949-sr8x6   1/1     Running   0          38s\n```\n\n<div class=\"content-ad\"></div>\n\nNginx 배포를 확장하려면\n\n```bash\nkubectl scale deploy/nginx --replicas=3\n```\n\nNginx 배포를 3개 복제본으로 확장한 후, 예상 출력은\n\n```bash\nkubectl get deploy,rs,po\n```\n\n<div class=\"content-ad\"></div>\n\n\n**이름                    준비 상태   최신 상태   이용 가능   나이**\ndeployment.apps/nginx   3/3        3           3           2분 8초\n\n이름                               원하는 상태   현재 상태   준비 상태   나이\nreplicaset.apps/nginx-6d777db949   3            3          3          2분 8초\n\n이름                         **준비 상태                        상태               다시 시작   나이**\npod/nginx-6d777db949-jttpw   1/1         실행 중       0          23초\npod/nginx-6d777db949-qmdk8   1/1         실행 중       0          23초\npod/nginx-6d777db949-sr8x6   1/1         실행 중       0          2분 8초\n\n\n위 배포에 대한 로드 밸런서 서비스를 생성해주세요\n\n\nkubectl expose deploy/nginx --type=LoadBalancer --port=80\n\n\n우리가 만든 nginx 서비스에 대해 설명해주세요\n\n\n<div class=\"content-ad\"></div>\n\n\n```js\nkubectl get svc\nkubectl describe svc/nginx\n```\n\n다음과 같은 결과가 예상됩니다.\n\n```js\n**kubectl get svc**\n```\n\n```js\nNAME         TYPE           CLUSTER-IP    **EXTERNAL-IP**   PORT(S)        AGE\nkubernetes   ClusterIP      10.96.0.1     **<none>**        443/TCP        28m\nnginx        LoadBalancer   10.103.19.189 **<pending>**     80:32019/TCP   5s\n**kubectl describe svc/nginx**\nName:                     nginx\nNamespace:                default\nLabels:                   app=nginx\nAnnotations:              <none>\nSelector:                 app=nginx\nType:                     LoadBalancer\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.103.19.189\nIPs:                      10.103.19.189\nPort:                     <unset>  80/TCP\nTargetPort:               80/TCP\nNodePort:                 <unset>  32019/TCP\nEndpoints:                192.168.145.193:80,192.168.145.194:80,192.168.72.129:80\nSession Affinity:         None\nExternal Traffic Policy:  Cluster\nEvents:                   <none>\n```\n\n<div class=\"content-ad\"></div>\n\nNginx 로드 밸런서 서비스의 외부 IP가 '보류 중'임을 알려드립니다. MetalLB 또는 유사한 로드 밸런서가 없는 경우 베어 메탈 K8s 클러스터에서 로드 밸런서 서비스는 외부 IP를 가져오지 못하므로 NodePort 서비스와 똑같이 작동하게 됩니다.\n\n이는 예상하지 못한 일일지도 모릅니다. MetalLB가 로컬 K8s 클러스터의 이 문제를 해결해 줄 것입니다.\n\nnginx 배포를 0으로 축소하세요.\n\n```shell\nkubectl scale deploy/nginx --replicas=0\n```\n\n<div class=\"content-ad\"></div>\n\nKubernetes NGINX 배포가 완료되었습니다. 이것은 나중에 사용될 것입니다.\n\n# MetalLB 설정\n\n참고:\n\nMetalLB에는 BGP 및 Layer2 모드가 있습니다. 이 안내서는 Layer2 모드를 설정합니다.\n\n<div class=\"content-ad\"></div>\n\n## 네임스페이스 생성\n\nMetaLB를 위한 네임스페이스를 만들어보세요.\n\n```js\nkubectl apply -fhttps://raw.githubusercontent.com/metallb/metallb/v0.11.0/manifests/namespace.yaml\n```\n\n## 참고:\n\n<div class=\"content-ad\"></div>\n\nMetal LB의 내부 사용을 위해 일부 IP 주소를 할당해야 합니다. IP 주소가 이미 사용 중이지 않도록 확인해야 합니다.\n\n로드밸런서 서비스를 생성할 때마다 Kubernetes는 MetalLB 로드밸런서의 인스턴스를 생성합니다. Kubernetes는 구성 맵에 지정된 IP 주소 범위에서 사용 가능한 IP 주소를 선택하고 MetalLB 로드밸런서에 할당합니다. 그런 다음 MetalLB 로드밸런서는 우리의 응용 프로그램 배포를 위해 생성한 LB 서비스에 연결된 여러 Pod EndPoints를 로드 밸런싱합니다.\n\n## 구성 파일 생성\n\n로컬 머신에서\n\n<div class=\"content-ad\"></div>\n\n메탈로드밸런서 설정을 위한 YAML 파일을 생성하세요.\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    address-pools:\n    - name: default\n      protocol: layer2\n      addresses:\n      - **10.10.0.240-10.10.0.250**\n```\n\n<div class=\"content-ad\"></div>\n\n아래 섹션은 위의 사전 준비 섹션에서 선택한 IP 범위를 사용합니다.\n\n```js\naddresses:\n      - **10.10.0.240-10.10.0.250**\n```\n\n## 방화벽 설정\n\n<div class=\"content-ad\"></div>\n\n3 노드 클러스터는 로컬 방화벽을 사용하지 않습니다. 여기에 참고용으로 추가했습니다.\n\n```js\nsudo firewall-cmd --permanent --add-port=7472/tcp --zone=trusted\nsudo firewall-cmd --permanent --add-port=7472/udp --zone=trusted\nsudo firewall-cmd --permanent --add-port=7946/tcp --zone=trusted\nsudo firewall-cmd --permanent --add-port=7946/udp --zone=trusted\nsudo firewall-cmd --reload\nsudo firewall-cmd --list-all\n```\n\n위 포트는 Metal LB에서 사용하는 기본 포트입니다. 수정했다면 해당 포트를 변경해야 합니다.\n\n## 클러스터에 MetaLB 배포하기\n\n<div class=\"content-ad\"></div>\n\n로컬 머신에서\n\n```js\nkubectl apply -f **metal-lb-cm.ymlkubectl** apply -f <https://raw.githubusercontent.com/metallb/metallb/v0.11.0/manifests/metallb.yaml>\n```\n\nmetallb-system 네임스페이스 내에서 실행 중인 pod 목록을 나열해주세요.\n\n```js\nkubectl get pod -n metallb-system\n```\n\n<div class=\"content-ad\"></div>\n\n```js\n이름                        준비 상태   상태      재시작    시간\ncontroller-7fbf768f66-m66ph   1/1     실행 중   0          30초\nspeaker-hj669                 1/1     실행 중   0          30초\nspeaker-l9sbp                 1/1     실행 중   0          30초\nspeaker-q9jjf                 1/1     실행 중   0          30초\n```\n\n# MetaLB로 NginX 테스트 계속\n\nMetaLB를 설치한 후에 Nginx 테스트를 계속 진행하여 이 작동 방식을 확인하세요.\n\n## 레플리카 세트 확장하기\n\n<div class=\"content-ad\"></div>\n\nNginx 배포를 확장했습니다.\n\n```js\nkubectl scale deploy nginx --replicas=3\n```\n\n결과 출력:\n\n```js\ndeployment.apps/nginx scaled\n```\n\n<div class=\"content-ad\"></div>\n\n로드 밸런서 서비스를 설명하고 외부 IP가 할당되었는지 확인해보세요.\n\n```js\nkubectl expose deploy nginx --type=LoadBalancer --port=80\n```\n\n출력 결과\n\n```js\nservice/nginx가 노출되었습니다\n```\n\n<div class=\"content-ad\"></div>\n\n외부 IP가 할당되었는지 확인해 보세요\n\n```js\nkubectl get svc nginx\n```\n\n결과 값은 다음과 같아야 합니다\n\n```js\nNAME    TYPE           CLUSTER-IP    **EXTERNAL-IP**       PORT(S)        AGE\nnginx   LoadBalancer   10.102.5.84   **10.10.0.240**       80:31829/TCP   5s\n```\n\n<div class=\"content-ad\"></div>\n\n이번에는 서비스를 보면 MetaLB가 해당 서비스에 대해 범위/풀에서 IP를 할당했습니다.\n\n더 많은 세부 정보를 보려면 kubectl describe 명령을 사용해보세요.\n\n```js\nkubectl describe svc/nginx\n```\n\n```js\nName:                     nginx\nNamespace:                default\nLabels:                   app=nginx\nAnnotations:              <none>\nSelector:                 app=nginx\nType:                     LoadBalancer\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.102.5.84\nIPs:                      10.102.5.84\n**LoadBalancer Ingress:     110.10.0.240**\nPort:                     <unset>  80/TCP\nTargetPort:               80/TCP\nNodePort:                 <unset>  31829/TCP\n**Endpoints:                192.168.145.195:80,192.168.145.196:80,192.168.72.132:80**\nSession Affinity:         None\nExternal Traffic Policy:  Cluster\nEvents:\n  Type    Reason        Age   From                Message\n  ----    ------        ----  ----                -------\n  Normal  IPAllocated   31s   metallb-controller  Assigned IP \"192.168.254.240\"\n  Normal  nodeAssigned  16s   metallb-speaker     announcing from node \"master.tektutor.org\"\n```\n\n<div class=\"content-ad\"></div>\n\n위에서 볼 수 있듯이, nginx 로드밸런서 서비스는 metallb 구성 맵에서 언급한 범위의 ExternalIP로 할당되었습니다.\n\n이제 아래와 같이 서비스에 액세스할 수 있습니다.\n\n```js\ncurl <http://10.10.0.240>\n```\n\n표시\n\n<div class=\"content-ad\"></div>\n\n```js\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\n    body {\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    }\n</style>\n</head>\n<body>\n<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p><p>For online documentation and support please refer to\n<a href=\"http://nginx.org/\">nginx.org</a>.<br/>\nCommercial support is available at\n<a href=\"http://nginx.com/\">nginx.com</a>.</p><p><em>Thank you for using nginx.</em></p>\n</body>\n</html>\n```\n\n# 완료\n\n메타LB는 LoadBalancer로 정의된 서비스에 대해 외부 IP 주소를 할당합니다. ClusterIP와 달리, prometheus monitoring을 배포할 때 이를 기억하는 것이 중요합니다.\n\n# 쿠버네티스 프로메테우스 모니터링 스택 설치\n\n<div class=\"content-ad\"></div>\n\n3 노드 클러스터를 생성하고 Ingress를 위해 MetaLB를 클러스터에 설치하고 로컬 Linux 서버에서 클러스터에 원격 액세스를 설정했다면, 다음 단계는 모니터링을 배포하는 것입니다.\n\nPrometheus 커뮤니티는 HELM을 사용하여 전체 모니터링 스택을 배포합니다. 배포는 쿠버네티스 클러스터에 Prometheus, AlertManager 및 Grafana를 설치하고 이러한 서비스를 경고, 대시보드, API 엔드포인트로 채워서 즉시 전체적인 개요를 얻을 수 있도록 합니다.\n\n## 전제 조건\n\n## Helm\n\n<div class=\"content-ad\"></div>\n\nHelm이 설치되었습니다!\n\nHelm을 설치하는 자세한 내용은 여기에서 확인할 수 있어요.\n\n[https://helm.sh/docs/intro/install/](https://helm.sh/docs/intro/install/)\n\n## Helm이란 무엇인가요?\n\n<div class=\"content-ad\"></div>\n\n헬름은 쿠버네티스용 패키지 매니저로, 쿠버네티스 클러스터에 애플리케이션 및 서비스를 배포, 관리, 구성하는 데 사용됩니다. 헬름 차트를 사용하여 사용자가 복잡한 쿠버네티스 애플리케이션을 정의, 설치, 업그레이드할 수 있어 배포 프로세스를 단순화합니다.\n\n## 헬름의 주요 기능\n\n- 패키지 관리: 헬름은 사용자가 쿠버네티스 리소스를 차트로 패키징할 수 있도록 해 주는데, 이는 일련의 쿠버네티스 리소스를 설명하는 파일 모음입니다.\n- 버전 관리: 헬름 차트는 버전을 매길 수 있어 애플리케이션 업데이트와 롤백을 쉽게 관리할 수 있습니다.\n- 템플릿화: 헬름은 템플릿을 사용하여 쿠버네티스 리소스를 정의하는데, 동적이고 재사용 가능한 구성을 가능하게 합니다. 템플릿은 다양한 배포 환경을 수용할 수 있도록 매개변수화될 수 있습니다.\n- 릴리스 관리: 헬름은 차트의 인스턴스인 릴리스를 관리합니다. 이를 통해 쉽게 설치, 업그레이드, 롤백할 수 있습니다.\n- 의존성 관리: 헬름 차트는 다른 차트에 대한 의존성을 지정할 수 있어 복잡한 애플리케이션 스택을 단일 단위로 배포할 수 있습니다.\n\n## URL\n\n<div class=\"content-ad\"></div>\n\n서비스는 GitHub을 통해 제공됩니다.\n\n- <https://github.com/prometheus-community/helm-charts/tree/6f1bc9ed3f7eb9a8cb4711ca538fd0ddf71fcb96/charts/kube-prometheus-stack>\n- <https://github.com/prometheus-community/helm-charts/tree/6f1bc9ed3f7eb9a8cb4711ca538fd0ddf71fcb96>\n\n# Kube-Prometheus-stack 설치\n\n## 네임스페이스 생성\n\n<div class=\"content-ad\"></div>\n\n```bash\n# 모니터링 스택을 위한 네임스페이스 생성\n\nkubectl create ns monitoring\n```\n\n## 새로운 Helm 저장소 추가\n\nhelm을 사용하여 프로메테우스 스택을 위한 저장소를 추가해야 합니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nhelm repo add prometheus-community <https://prometheus-community.github.io/helm-charts>\n```\n\n```js\nhelm repo update\n```\n\n## values.yaml 편집\n\nHelm 설치에는 helm 패키지에 내장된 values.yaml 파일이 있습니다. 이 설치를 사용하면 기본값을 재정의할 수 있는 values.yaml 파일을 생성해야 합니다. 이 값을 install 명령어에 전달하여 기본값을 재정의할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n알림\n\n**기본 values.yaml 파일은 여기에서 찾을 수 있습니다: https://github.com/prometheus-community/helm-charts/blob/f5e395597054cc94ee7d9d92813552501c22266e/charts/kube-prometheus-stack/values.yaml#L4**\n\n```js\nnano values.yaml\n```\n\n다음을 추가하세요.\n\n<div class=\"content-ad\"></div>\n\n```js\nruleSelectorNilUsesHelmValues: false\nserviceMonitorSelectorNilUsesHelmValues: false\npodMonitorSelectorNilUsesHelmValues: false\nprobeSelectorNilUsesHelmValues: false\nscrapeConfigSelectorNilUsesHelmValues: false\n```\n\n```js\ngrafana:\n  service:\n    type: LoadBalancer\nprometheus:\n  service:\n    type: LoadBalancer\nalertmanager:\n  service:\n    type: LoadBalancer\n```\n\n마지막 세 개의 \"서비스\"인 그라파나, 프로메테우스, 알람매니저는 기본 설정인 ClusterIP를 재정의하여 외부 IP를 LoadBalancer로 설정했습니다. MetaLB를 사용하여 우리가 정의한 범위/풀에서 외부 IP를 이 서비스에 할당할 수 있습니다.\n\n## Helm 배포\n\n<div class=\"content-ad\"></div>\n\nkube-prometheus-stack을 Helm 업데이트 명령을 사용하여 배포하세요.\n\n```js\nhelm upgrade --install -f **values.yaml** kube-prometheus-stack prometheus-community/kube-prometheus-stack -n monitoring\n```\n\nKube-Prometheus 스택을 배포한 후에는 다음과 같은 기본 앱들을 얻습니다:\n\n- Grafana\n- Prometheus\n- Alert Manager.\n\n<div class=\"content-ad\"></div>\n\n# 배포 확인\n\n## 파드가 실행 중인지 확인\n\n```js\nkubectl get pod -n monitoring\n```\n\n반응이 있어야 해요\n\n<div class=\"content-ad\"></div>\n\n```js\n이름                                                        준비 상태    상태    재시작    시간\nalertmanager-kube-prometheus-stack-alertmanager-0           2/2         실행 중   0        21시간\nkube-prometheus-stack-grafana-76858ff8dd-nnh94              3/3         실행 중   0        21시간\nkube-prometheus-stack-kube-state-metrics-7f6967956d-tzrkm   1/1         실행 중   0        21시간\nkube-prometheus-stack-operator-79b45fdb47-ccqc6             1/1         실행 중   0        21시간\nkube-prometheus-stack-prometheus-node-exporter-bxbtc        1/1         실행 중   0        21시간\nkube-prometheus-stack-prometheus-node-exporter-j9gjg        1/1         실행 중   0        21시간\nkube-prometheus-stack-prometheus-node-exporter-r2fqw        1/1         실행 중   0        21시간\nprometheus-kube-prometheus-stack-prometheus-0               2/2         실행 중   0        21시간\n```\n\n만약 파드가 계속 생성 중이라면\n\n```js\nwatch kubectl get pod -n monitoring\n```\n\n위 명령을 사용해 주세요. 이 명령은 출력이 변경될 때마다 위의 결과를 업데이트합니다.\n\n<div class=\"content-ad\"></div>\n\n## 서비스 확인하기\n\n다음 명령어를 실행해 주세요\n\n```js\nkubectl get svc -n monitoring\n```\n\n출력 결과 확인해보세요 (좌우 스크롤 바 유의)\n\n<div class=\"content-ad\"></div>\n\n```js\n이 이름들은 존경스러운! \n\n각각의 접근 가능한 서비스는 외부 범위/풀에서 IP를 할당받아 TYPE = LoadBalancer로 지정되어야 합니다.\n\n## 서비스 모니터 적용\n\n서비스 모니터는 쿠버네티스에서 메트릭을 스크래핑하는 응용 프로그램을 정의합니다.\n```\n\n<div class=\"content-ad\"></div>\n\n아래와 같이 YAML 파일을 만들어주세요.\n\n\nnano servicemonitor.yaml\n\n\n다음 내용을 추가해주세요.\n\n```yaml\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: prometheus-self\n  labels:\n    app: kube-prometheus-stack-prometheus\nspec:\n  endpoints:\n  - interval: 30s\n    port: web\n  selector:\n    matchLabels:\n      app: kube-prometheus-stack-prometheus\n```\n\n<div class=\"content-ad\"></div>\n\n아래와 같이 코드를 실행해주세요.\n\n```bash\nkubectl apply -f servicemonitor.yaml -n monitoring\n```\n\n예상 결과는 다음과 같습니다.\n\n```bash\nservicemonitor.monitoring.coreos.com/prometheus-self가 생성되었습니다.\n```\n\n<div class=\"content-ad\"></div>\n\n# 인터페이스 보기\n\n필요한 3가지 인터페이스가 설정되었으며 공개 인터페이스에 이용 가능합니다.\n\n## 프로메테우스\n\n### URL\n\n<div class=\"content-ad\"></div>\n\n10.10.0.243에서 확인부탁드립니다.\n\n## 홈페이지\n\n<img src=\"/assets/img/2024-06-20-CreatingaSelfHostedKubernetesStackonDebian12andmonitoringwithkube-prometheus-stack_2.png\" />\n\n## 사전 정의된 알림\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-20-CreatingaSelfHostedKubernetesStackonDebian12andmonitoringwithkube-prometheus-stack_3.png)\n\n# Alert Manager\n\n## URL\n\nhttp://10.10.0.242:9093\n\n\n<div class=\"content-ad\"></div>\n\n## 홈\n\n![이미지](/assets/img/2024-06-20-CreatingaSelfHostedKubernetesStackonDebian12andmonitoringwithkube-prometheus-stack_4.png)\n\n# 그라파나\n\n## URL\n\n<div class=\"content-ad\"></div>\n\nhttp://10.10.0.241\n\n## 기본 접근\n\n- 사용자 이름: admin\n- 비밀번호: prom-operator\n\n## 사전 설치된 경고 규칙\n\n<div class=\"content-ad\"></div>\n\n\n![PreInstalled Dashboards](/assets/img/2024-06-20-CreatingaSelfHostedKubernetesStackonDebian12andmonitoringwithkube-prometheus-stack_6.png)\n\n![PreInstalled Dashboards](/assets/img/2024-06-20-CreatingaSelfHostedKubernetesStackonDebian12andmonitoringwithkube-prometheus-stack_7.png)\n\n\n<div class=\"content-ad\"></div>\n\n# 시스로그를 위한 Promtail과 Loki 설치하기\n\n# Helm Repos 설치\n\nGrafana Helm 차트를 Helm cli에 추가하세요:\n\n```js\nhelm repo add grafana <https://grafana.github.io/helm-charts>\nhelm repo update\n```\n\n<div class=\"content-ad\"></div>\n\n# Loki 설치하기\n\n다음 명령어를 실행해주세요.\n\n```js\nhelm upgrade --install loki grafana/loki-distributed -n monitoring --set service.type=LoadBalancer\n```\n\n# 포드 확인\n\n<div class=\"content-ad\"></div>\n\n```js\nwatch kubectl get pods -n monitoring\n```\n\n원하는 출력\n\n```js\nNAME                                                        READY   STATUS    RESTARTS   AGE\nalertmanager-kube-prometheus-stack-alertmanager-0           2/2     Running   0          23시간\nkube-prometheus-stack-grafana-76858ff8dd-nnh94              3/3     Running   0          23시간\nkube-prometheus-stack-kube-state-metrics-7f6967956d-tzrkm   1/1     Running   0          23시간\nkube-prometheus-stack-operator-79b45fdb47-ccqc6             1/1     Running   0          23시간\nkube-prometheus-stack-prometheus-node-exporter-bxbtc        1/1     Running   0          23시간\nkube-prometheus-stack-prometheus-node-exporter-j9gjg        1/1     Running   0          23시간\nkube-prometheus-stack-prometheus-node-exporter-r2fqw        1/1     Running   0          23시간\n**loki-loki-distributed-distributor-b8448bd4b-2twdh           1/1     Running   0          3분15초\nloki-loki-distributed-gateway-9d8b76d6d-mvxps               1/1     Running   0          3분15초\nloki-loki-distributed-ingester-0                            1/1     Running   0          3분15초\nloki-loki-distributed-querier-0                             1/1     Running   0          3분15초\nloki-loki-distributed-query-frontend-6db884fbdd-zfs2s       1/1     Running   0          3분15초**\nprometheus-kube-prometheus-stack-prometheus-0               2/2     Running   0          23시간\n```\n\n시작할 때 변경 사항을 보기 위해 watch 명령어를 사용하세요.\n\n<div class=\"content-ad\"></div>\n\n```js\nwatch kubectl get pods -n monitoring\n```\n\n# 서비스 확인하기\n\n실행하세요\n\n```js\nkubectl get services -n monitoring\n```\n\n<div class=\"content-ad\"></div>\n\n예상 결과\n\n```js\nNAME                                             TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE\nalertmanager-operated                            ClusterIP      None            <none>        9093/TCP,9094/TCP,9094/UDP      23h\nkube-prometheus-stack-alertmanager               LoadBalancer   10.108.18.33    10.10.0.242   9093:31456/TCP,8080:31493/TCP   23h\nkube-prometheus-stack-grafana                    LoadBalancer   10.105.8.65     10.10.0.241   80:31941/TCP    23h\nkube-prometheus-stack-kube-state-metrics         ClusterIP      10.97.4.3       <none>        8080/TCP        23h\nkube-prometheus-stack-operator                   ClusterIP      10.107.254.83   <none>        443/TCP         23h\nkube-prometheus-stack-prometheus                 LoadBalancer   10.108.245.2    10.10.0.243   9090:30518/TCP,8080:31169/TCP   23h\nkube-prometheus-stack-prometheus-node-exporter   ClusterIP      10.105.24.16    <none>        9100/TCP        23h\n**loki-loki-distributed-distributor                ClusterIP      10.102.78.123   <none>        3100/TCP,9095/TCP               4m9s\nloki-loki-distributed-gateway                    ClusterIP      10.97.122.135   <none>        80/TCP          4m9s\nloki-loki-distributed-ingester                   ClusterIP      10.110.15.213   <none>        3100/TCP,9095/TCP               4m9s\nloki-loki-distributed-ingester-headless          ClusterIP      None            <none>        3100/TCP,9095/TCP               4m9s\nloki-loki-distributed-memberlist                 ClusterIP      None            <none>        7946/TCP        4m9s\nloki-loki-distributed-querier                    ClusterIP      10.108.56.75    <none>        3100/TCP,9095/TCP               4m9s\nloki-loki-distributed-querier-headless           ClusterIP      None            <none>        3100/TCP,9095/TCP               4m9s\nloki-loki-distributed-query-frontend             ClusterIP      10.100.183.25   <none>        3100/TCP,9095/TCP,9096/TCP      4m9s\nloki-loki-distributed-query-frontend-headless    ClusterIP      None            <none>        3100/TCP,9095/TCP,9096/TCP      4m9s\npro**metheus-operated                              ClusterIP      None            <none>        9090/TCP        23h\n```\n\n# 그라파나에 Loki 추가하기\n\n그라파나의 홈 → 연결 → 데이터 소스로 이동하여 Loki 데이터 소스를 추가하세요.\n\n<div class=\"content-ad\"></div>\n\n로키를 데이터 소스로 선택하세요\n\n다음 URL을 사용하세요\n\n```js\n[http://loki-loki-distributed-query-frontend.monitoring:3100](http://loki-loki-distributed-query-frontend.monitoring:3100)\n```\n\n# 이 작업은 자동으로 수행됩니다\n\n<div class=\"content-ad\"></div>\n\n요고를 values.yaml에 추가하면 Loki를 자동으로 설정할 수 있을 것 같아요.\n\n```yaml\ngrafana:\n  sidecar:\n    datasources:\n      defaultDatasourceEnabled: true\n  additionalDataSources:\n    - name: Loki\n      type: loki\n      url: <http://loki-loki-distributed-query-frontend.monitoring:3100>\n```\n\n# Promtail 설치\n\nPromtail은 데이터를 Loki로 푸시합니다.\n\n<div class=\"content-ad\"></div>\n\nA values 파일이 promtail 구성에 필요합니다.\n\n```yaml\nnano promtail-values.yaml\n```\n\n다음을 추가하세요.\n\n```yaml\n---\nconfig:\nclients:\n- url: \"<http://loki-loki-distributed-gateway/loki/api/v1/push>\"\n---\n```\n\n<div class=\"content-ad\"></div>\n\n해당 명령을 실행해보세요:\n\n```js\nhelm upgrade --install promtail grafana/promtail -f promtail-values.yaml -n monitoring\n```\n\n# Pod 확인\n\n```js\nkubectl get pods -n monitoring\n```\n\n<div class=\"content-ad\"></div>\n\n원하는 표시\n\n```js\nNAME                                                        READY   STATUS    RESTARTS   AGE\nalertmanager-kube-prometheus-stack-alertmanager-0           2/2     Running   0          23h\nkube-prometheus-stack-grafana-76858ff8dd-nnh94              3/3     Running   0          23h\nkube-prometheus-stack-kube-state-metrics-7f6967956d-tzrkm   1/1     Running   0          23h\nkube-prometheus-stack-operator-79b45fdb47-ccqc6             1/1     Running   0          23h\nkube-prometheus-stack-prometheus-node-exporter-bxbtc        1/1     Running   0          23h\nkube-prometheus-stack-prometheus-node-exporter-j9gjg        1/1     Running   0          23h\nkube-prometheus-stack-prometheus-node-exporter-r2fqw        1/1     Running   0          23h\nloki-loki-distributed-distributor-b8448bd4b-2twdh           1/1     Running   0          22m\nloki-loki-distributed-gateway-9d8b76d6d-mvxps               1/1     Running   0          22m\nloki-loki-distributed-ingester-0                            1/1     Running   0          22m\nloki-loki-distributed-querier-0                             1/1     Running   0          22m\nloki-loki-distributed-query-frontend-6db884fbdd-zfs2s       1/1     Running   0          22m\nprometheus-kube-prometheus-stack-prometheus-0               2/2     Running   0          23h\n**promtail-25bjr                                              1/1     Running   0          3m21s\npromtail-5kmlt                                              1/1     Running   0          3m21s\npromtail-h9mrf                                              1/1     Running   0          3m21s**\n```\n\n변경 사항을 보면서 시작할 때 watch로 사용해보세요\n\n```js\nwatch kubectl get pods -n monitoring\n```\n\n<div class=\"content-ad\"></div>\n\n# 서비스 확인\n\n실행\n\n```js\nkubectl get services -n monitoring\n```\n\n예상 결과\n\n<div class=\"content-ad\"></div>\n\n```js\n이름                                               유형            클러스터 IP       외부 IP         포트       생성된 시간\nalertmanager-operated                            ClusterIP      없음            없음           9093/TCP,9094/TCP,9094/UDP      23시간\nkube-prometheus-stack-alertmanager               로드 밸런서     10.108.18.33    10.10.0.242    9093:31456/TCP,8080:31493/TCP   23시간\nkube-prometheus-stack-grafana                    로드 밸런서     10.105.8.65     10.10.0.241    80:31941/TCP    23시간\nkube-prometheus-stack-kube-state-metrics         ClusterIP      10.97.4.3       없음           8080/TCP        23시간\nkube-prometheus-stack-operator                   ClusterIP      10.107.254.83   없음           443/TCP         23시간\nkube-prometheus-stack-prometheus                 로드 밸런서     10.108.245.2    10.10.0.243    9090:30518/TCP,8080:31169/TCP   23시간\nkube-prometheus-stack-prometheus-node-exporter   ClusterIP      10.105.24.16    없음           9100/TCP        23시간\nloki-loki-distributed-distributor                ClusterIP      10.102.78.123   없음           3100/TCP,9095/TCP               24분\nloki-loki-distributed-gateway                    ClusterIP      10.97.122.135   없음           80/TCP          24분\nloki-loki-distributed-ingester                   ClusterIP      10.110.15.213   없음           3100/TCP,9095/TCP               24분\nloki-loki-distributed-ingester-headless          ClusterIP      없음            없음           3100/TCP,9095/TCP               24분\nloki-loki-distributed-memberlist                 ClusterIP      없음            없음           7946/TCP        24분\nloki-loki-distributed-querier                    ClusterIP      10.108.56.75    없음           3100/TCP,9095/TCP               24분\nloki-loki-distributed-querier-headless           ClusterIP      없음            없음           3100/TCP,9095/TCP               24분\nloki-loki-distributed-query-frontend             ClusterIP      10.100.183.25   없음           3100/TCP,9095/TCP,9096/TCP      24분\nloki-loki-distributed-query-frontend-headless    ClusterIP      없음            없음           3100/TCP,9095/TCP,9096/TCP      24분\nprometheus-operated                              ClusterIP      없음            없음           9090/TCP        23시간\n```\n\n# 결과\n\n이 결과를 통해\n\nGrafana를 열 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n해당 테이블 태그를 마크다운 형식으로 변경해주세요.\n\n<div class=\"content-ad\"></div>\n\n# 생각\n\n이것들은 조잡하고 대충 적은 메모입니다. 그러나, 나는 이 홈랩을 운영하는 방법으로 모든 것을 구현한 것이며, 다음 단계는 도커에서 실행 중인 것을 이 Kubernetes 클러스터로 마이그레이션하는 것입니다.\n\n# 참고 자료\n\n- https://www.linuxtechi.com/install-kubernetes-cluster-on-debian/\n- https://k21academy.com/docker-kubernetes/accessing-remote-kubeadm-cluster/\n- https://medium.com/tektutor/using-metal-lb-on-a-bare-metal-onprem-kubernetes-setup-6d036af1d20c\n- https://medium.com/israeli-tech-radar/how-to-create-a-monitoring-stack-using-kube-prometheus-stack-part-1-eff8bf7ba9a9\n- https://github.com/prometheus-community/helm-charts/tree/6f1bc9ed3f7eb9a8cb4711ca538fd0ddf71fcb96/charts/kube-prometheus-stack\n- https://docs.appsealing.com/guide/4.%20On-Premise/7.%20Logging_and_monitoring_with_Prometheus_Grafana_Loki.html#what-is-this-content-based-on","ogImage":{"url":"/assets/img/2024-06-20-CreatingaSelfHostedKubernetesStackonDebian12andmonitoringwithkube-prometheus-stack_0.png"},"coverImage":"/assets/img/2024-06-20-CreatingaSelfHostedKubernetesStackonDebian12andmonitoringwithkube-prometheus-stack_0.png","tag":["Tech"],"readingTime":44},{"title":"리눅스 Unix에서 예제를 활용한 AWK를 이용한 텍스트 처리","description":"","date":"2024-06-20 14:11","slug":"2024-06-20-TextProcessingwithAWKinLinuxUnixwithexamples","content":"\n\n\n![Image](/assets/img/2024-06-20-TextProcessingwithAWKinLinuxUnixwithexamples_0.png)\n\nawk은 패턴 스캔 및 처리를 위한 강력한 프로그래밍 언어이자 명령 줄 유틸리티입니다. 주로 텍스트 처리에 사용되며 데이터 추출 및 보고 도구로 사용됩니다. 본 안내서는 awk의 기본 개념을 이해하는 데 도움을 주고 Linux/Unix 환경에서 효과적으로 사용하는 방법을 보여줄 것입니다.\n\n# awk 소개\n\nawk은 창안자 Alfred Aho, Peter Weinberger, Brian Kernighan의 이름에서 따왔습니다. 사용자가 지정한 패턴과 작업을 적용하여 텍스트를 한 줄씩 처리합니다.\n\n\n<div class=\"content-ad\"></div>\n\n# 기본 구문\n\nawk의 기본 구문은 다음과 같습니다:\n\n\nawk '패턴 { 동작 }' 파일\n\n\n- 패턴: 일치시킬 조건을 지정합니다.\n- 동작: 패턴이 일치할 때 무엇을 할지 지정합니다.\n\n<div class=\"content-ad\"></div>\n\n테이블 태그를 Markdown 형식으로 변경할 수도 있어요.\n\n```js\necho \"text\" | awk 'pattern { action }'\n```\n\n# 주요 사용 사례 및 예시\n\ndata.txt라는 파일을 고려해보세요.\n\n<div class=\"content-ad\"></div>\n\n```js\nJohn Doe 30 180\nJane Smith 25 165\nAlice Johnson 35 170\nBob Brown 28 175\nCharlie White 32 160\n```\n\n<img src=\"/assets/img/2024-06-20-TextProcessingwithAWKinLinuxUnixwithexamples_1.png\" />\n\n## 1. Printing Specific Columns separated by space\n\nTo print the first names (1st field) and ages (3rd field) separated by space:\n\n<div class=\"content-ad\"></div>\n\n```js\nawk '{ print $1, $3 }' data.txt\n\n\n----- 출력 결과 -----\n\nJohn 30\nJane 25\nAlice 35\nBob 28\nCharlie 32\n```\n\n## 2. 특정 문자로 구분된 특정 열 출력\n\n이름(첫 번째 열)과 나이(세 번째 열)을 세미콜론으로 구분하여 출력하는 방법:\n\n```js\nawk '{ print $1 \";\" $3 }' data.txt\n\n\n----- 출력 결과 -----\n\nJohn;30\nJane;25\nAlice;35\nBob;28\nCharlie;32\n```\n\n<div class=\"content-ad\"></div>\n\n## 3. 조건에 따라 행 필터링하기\n\n네 번째 열이 169보다 큰 경우 모든 행 출력합니다.\n\n```js\nawk '$4 > 169' data.txt\n\n\n----- 결과 -----\n\nJohn Doe 30 180\nAlice Johnson 35 170\nBob Brown 28 175\n```\n\n## 4. 특정 단어를 포함하는 행 출력\n\n<div class=\"content-ad\"></div>\n\n\"John\"이라는 단어를 포함하는 줄을 출력합니다.\n\n```js\nawk '/John/' data.txt\n\n\n----- 출력결과 -----\n\nJohn Doe 30 180\nAlice Johnson 35 170\n```\n\n로그 파일을 처리하고 \"Error\" 또는 \"Warning\"과 같은 키워드를 포함하는 줄을 검색할 때 유용하게 사용할 수 있습니다.\n\n## 5. 열을 합산하기\n\n<div class=\"content-ad\"></div>\n\n각 줄의 3번째와 4번째 열의 합계를 출력합니다.\n\n```js\nawk '{ print $3 + $4 }' data.txt\n\n\n----- 결과 -----\n\n210\n190\n205\n203\n192\n```\n\n- 다른 방법 (변수 사용)\n\n```js\nawk '{ sum=$3+$4 ; print sum }' data.txt\n```\n\n<div class=\"content-ad\"></div>\n\n## 6. 합계 값\n\n세 번째 열의 값을 합산하고 총합을 출력합니다.\n\n```js\nawk '{ sum+=$3 } END { print sum }' data.txt\n\n\n----- 출력 결과 -----\n\n150\n```\n\n## 7. 평균 계산\n\n<div class=\"content-ad\"></div>\n\n평균 연령을 계산하려면 (세 번째 필드):\n\n```js\nawk '{ sum += $3; count++ } END { print sum / count }' data.txt\n\n\n## 8. 라인 번호 출력\n\n각 라인에 라인 번호를 추가하고 출력합니다.\n\n<div class=\"content-ad\"></div>\n\nawk '{print NR, $0}' data.txt\n\n----- 출력 -----\n\n1 John Doe 30 180\n2 Jane Smith 25 165\n3 Alice Johnson 35 170\n4 Bob Brown 28 175\n5 Charlie White 32 160\n\n## 9. 필드 수 출력\n\n각 줄의 필드 수를 출력합니다.\n\nawk '{ print \"Number of fields:\", NF }' data.txt\n\n----- 출력 -----\n\nNumber of fields: 4\nNumber of fields: 4\nNumber of fields: 4\nNumber of fields: 4\nNumber of fields: 4\n\n<div class=\"content-ad\"></div>\n\n## 10. 첫 번째 및 마지막 필드 인쇄\n\nawk '{ print $1, $NF }' data.txt\n\n\n----- 출력 -----\n\nJohn 180\nJane 165\nAlice 170\nBob 175\nCharlie 160\n\n## 11. 대문자로 필드 인쇄\n\n첫 번째 필드를 대문자로 출력\n\n<div class=\"content-ad\"></div>\n\nawk '{ print toupper($1) }' data.txt\n\n\n### 결과\n\nJOHN\nJANE\nALICE\nBOB\nCHARLIE\n\n## 12. 필드로부터 하위 문자열 추출\n\n2번째 필드에서 하위 문자열 추출: 1번째 문자부터 3번째 문자까지\n\nawk '{print substr($2,1,3)}' data.txt\n\n\n### 결과\n\nDoe\nSmi\nJoh\nBro\nWhi\n\n<div class=\"content-ad\"></div>\n\n## 13. 각 줄의 필드 길이 출력\n\n각 줄의 2번째 필드의 길이를 출력합니다.\n\nawk '{ print length($2) }' data.txt\n\n\n----- 출력 결과 -----\n\n3\n5\n7\n5\n5\n\n## 14. 사용자 정의 함수\n\n<div class=\"content-ad\"></div>\n\n보다 복잡한 작업을 위해 awk 스크립트 내에서 함수를 정의할 수 있어요:\n\nawk '\nfunction square(x) { return x * x }\n{ print $3, \" --> square :\" , square($3) }\n' data.txt\n\n\n----- 출력 -----\n\n30  --> square : 900\n25  --> square : 625\n35  --> square : 1225\n28  --> square : 784\n32  --> square : 1024\n\n# 결론\n\nawk는 여러 가지 방식으로 텍스트 파일을 조작하고 분석하는 데 도움이 되는 다재다능한 도구입니다. 데이터 추출, 계산 수행, 또는 텍스트 변환 등이 목적이라면 awk가 작업을 간소화하는 강력한 기능 세트를 제공합니다.\n\n<div class=\"content-ad\"></div>\n\nawk 명령어를 실험해보세요! 이를 통해 Linux/Unix에서 더 효율적인 텍스트 처리를 위한 워크플로에 효과적으로 통합할 수 있습니다.","ogImage":{"url":"/assets/img/2024-06-20-TextProcessingwithAWKinLinuxUnixwithexamples_0.png"},"coverImage":"/assets/img/2024-06-20-TextProcessingwithAWKinLinuxUnixwithexamples_0.png","tag":["Tech"],"readingTime":4},{"title":"이메일 OSINT","description":"","date":"2024-06-19 21:46","slug":"2024-06-19-EmailOSINT","content":"\n\n## 안녕하세요 여러분 !!!\n\n- 여러분의 이메일이나 비밀번호가 공개되어 있는지 궁금한 적이 있었나요?\n\n혹은 여러분의 데이터가 유출된 웹사이트, 패스트빈, 또는 텔레그램 그룹에 공개적으로 혹은 유료로 게시되었나요?\n\n그렇다면 계속 읽는 것이 도움이 될 것입니다. 저는 이에 대한 완벽한 도구를 소개하겠습니다. 또한 이 도구들은 OSINT, 사이버 보안 전문가, 해커, 그리고 그들의 동료들이 모두의 정보를 수집하고 이메일과 관련된 모든 정보를 수집하여 대상의 프로필을 작성하는 데 사용하는 도구입니다.\n\n<div class=\"content-ad\"></div>\n\n시작하기 전에, 알지 못하는 분들을 위해 온라인 안전을 유지할 수 있는 몇 가지 사이버-위생 도구와 주의사항을 공유하고 싶어요.\n\n# 복잡한 암호 및 2단계 인증 앱 사용하기!\n\n확실하게 말하자면, 최고 수준의 2단계 인증 앱을 사용하더라도, 웹사이트나 다른 보안 방법을 사용하는 경우에도 만약 누군가가 호스트 (예: 구글, 페이스북, 혹은 지역 가게)를 해킹한다면, 모든 노력이 물거품이 될 수 있어요. 그럼에도 불구하고, 포기하지 말아야 합니다. 왜냐하면 종종 한 계정을 해킹해 권한을 높이는 과정으로 시작하기 때문이에요.\n\n# 모든 계정에 같은 이메일 주소를 사용하는 것을 피해주세요.\n\n<div class=\"content-ad\"></div>\n\n왜요? 해커가 당신의 모든 계정에 대한 단일 이메일 주소를 가지고 있는 서버로 침입한다고 상상해봅시다. 오직 한 개의 이메일 주소 뿐이라면, 그가 이 주소와 연결된 모든 계정 및 데이터를 발견하기까지 시간 문제입니다. 이것은 무수히 많은 가능한 연결된 시나리오 중 하나에 불과합니다.\n\n# 가리기, 전달 및 임시 이메일 서비스 사용하기\n\n가령 가리기, 전달 또는 임시 이메일 서비스를 잘 활용하면 좋은 수준의 개인 정보 보호를 효과적으로 유지할 수 있습니다. 더불어 이들은 단일 이메일 주소에 대한 OSINT 또는 추적 도구를 강화할 수 있습니다. 다음은 몇 가지 옵션입니다. 더 많은 옵션이 필요하다면, 이메일 및 기타 도구에 대한 무수히 많은 도구 모음을 위한 마지막 링크를 클릭하세요. (진행 중인 내용)\n\n- 발행 전에 여러 링크를 삭제해야 해서 놓친 것이 있을 수 있습니다. 부족한 부분은 아래에서 찾아볼 수 있습니다:\n\n<div class=\"content-ad\"></div>\n\nOOSINT [https://start.me/p/ME7aRA/oosint](https://start.me/p/ME7aRA/oosint)\n\n이메일 주소를 다룰 때 기억해야 할 몇 가지 기본 사항들입니다. 이제 OSINT 웹사이트와 앱으로부터 어떤 정보를 수집할 수 있는지 살펴볼 수 있습니다.\n\n# Epieos\n\n- [https://epieos.com](https://epieos.com)\n\n<div class=\"content-ad\"></div>\n\n간단한 웹사이트로 이메일 주소 또는 전화 번호에 관한 기본 정보를 수집합니다. Google, Email Checker(+200개 사이트), Skype, LinkedIn, Nike Run Club, Fitbit, GitHub, Duolingo, Asics Runkeeper, Adidas Runtastic, Strava, Vivino, Facebook, Proton Mail, Phone Checker, Etsy, Have I Been Pwned?, Dropbox, Foursquare, Flickr, Chess.com, Substack, Trello, Notion, Gravatar 등의 결과를 제공합니다.\n\n데이터를 수집할 때 유용한 도구이며, 무료 버전도 몇 초 안에 기본 결과를 제공합니다.\n\n- [가격 정보 보러가기](https://epieos.com/pricing)\n\n# Dehashed\n\n<div class=\"content-ad\"></div>\n\n- https://dehashed.com\n\n이 웹 사이트는 IP 주소, 이메일, 휴대전화 등과 관련된 정보를 찾는 데 이상적입니다. 무료 버전은 흐릿한 결과를 제공하지만 프로 버전은 합리적인 가격으로 완전한 가시성을 제공합니다. 탈락한 자격 증명을 확인하려는 개인 또는 비즈니스, 대상을 감시하는 프로페셔널 조사관 또는 윤리적 해커 등에 적합합니다. 전반적으로 이 분야에서 최고의 웹 사이트로 여겨집니다.\n\n- https://dehashed.com\n\n# IRBIS\n\n<div class=\"content-ad\"></div>\n\n- https://irbis.espysys.com\n\n이 플랫폼은 모바일 및 이메일을 포함한 다양한 채널에서 온라인 데이터를 수집하는 데 중요하고 포괄적인 소스를 제공합니다. 소셜 미디어 인텔리전스(SOCMINT)에 초점을 맞추며 사용자에게 다양한 정보 소스에 대한 액세스를 부여합니다. 구독료가 있지만, 새로 가입한 사용자는 대개 처음 계정을 열 때 무료 검색 크레딧을 받습니다. 온라인을 탐험할 때 들르고 싶은 곳입니다.\n\n# IntelX.io\n\n- https://intelx.io\n\n<div class=\"content-ad\"></div>\n\n이 플랫폼은 폭넓은 온라인 데이터 스크래핑 도구를 제공합니다. 무료 버전은 완전한 데이터셋을 제공하지는 않을 수 있지만, 위반 파일 이름을 노출하여 사용자가 추가적인 특정 검색을 수행할 수 있도록 합니다. 이 웹사이트는 이메일, 전화번호, 비트코인 지갑 등 다양한 소스에서 데이터를 추출할 수 있어서 중요한 대상 정보에 접근할 수 있도록 합니다.\n\n# 다른 유사한 웹사이트:\n\n- https://haveibeenpwned.com\n\n- https://www.voilanorbert.com\n\n<div class=\"content-ad\"></div>\n\n- [https://app.orbitly.io](https://app.orbitly.io)\n- [https://www.maltego.com](https://www.maltego.com)\n- [https://intel471.com/solutions/attack-surface-protection](https://intel471.com/solutions/attack-surface-protection)\n- [https://www.emailsherlock.com](https://www.emailsherlock.com)\n\n<div class=\"content-ad\"></div>\n\n## 또한, 이제는 터미널, 클라우드 인스턴스, 도커, CLI OS 또는 가상 머신에 이상적인 GitHub 도구들을 확인해보겠습니다.\n\n<div class=\"content-ad\"></div>\n\n# 블랙 타이거\n\n- https://github.com/VirusZzHkP/The-Black-Tiger\n\n블랙 타이거 도구는 다양한 영역의 OSINT에 초점을 맞추고 있습니다. 사람, 닉네임, 소셜 네트워크, 이메일, 전화 번호, 웹 페이지, 공개 IP 및 이미지를 포함합니다. 이 도구의 아이디어는 가장 고급 OSINT 기술을 한 곳에 수집하고 자동화해 효율적이고 편리하게 만드는 것이었습니다. 이 도구는 몇 번의 클릭으로 정보를 조직적으로 수집하고 제시합니다. 각 섹션은 특정 유형의 정보를 추출하기 위한 부분으로 나눠지지만, 이용 가능한 모든 데이터를 추출할 수도 있습니다.\n\n# 홀히\n\n<div class=\"content-ad\"></div>\n\n- [https://github.com/megadose/holehe](https://github.com/megadose/holehe)\n\n안녕하세요! \"Holehe\"는 특정 이메일 주소와 연결된 등록된 계정을 효율적으로 식별하기 위해 설계된 도구입니다. 이 도구는 해당 이메일이 Twitter, Instagram, Imgur 및 120개 이상의 다른 인기 웹사이트에 연결되어 있는지 확인할 수 있습니다. 이 도구는 이러한 플랫폼의 비밀번호를 잊었을 때의 정보를 검색합니다. 또한 Python 3에서 실행되도록 구축되어 최신 프로그래밍 환경과 호환됩니다.\n\n# Poastal\n\n- [https://github.com/jakecreps/poastal](https://github.com/jakecreps/poastal)\n\n<div class=\"content-ad\"></div>\n\n\"P\noastal\"은 어떤 이메일 주소에 대해 포괄적인 정보를 제공하는 필수적인 이메일 OSINT(Open Source Intelligence) 도구입니다. 이 강력한 도구를 사용하면 이메일 소유자의 이름을 알아낼 수 있고, 전달 가능 여부를 확인하며, 일회용으로 사용되거나 스팸으로 간주되는지 확인하고, Facebook, Twitter, Snapchat 등 여러 인기 플랫폼에 등록되어 있는지도 확인할 수 있습니다. 이는 이메일 주소와 관련된 중요한 정보를 수집하는 데 유용한 자원입니다.\n\n# GHunt\n\n- https://github.com/mxrch/GHunt\n\nG\nHunt (v2)는 효율적인 진화에 중점을 둔 최신 안전 구글 프레임워크입니다. 이 도구는 현재 OSINT(Open Source Intelligence)에 특화되어 있지만 다양한 구글 관련 용도로 적용할 수 있습니다. 이 도구의 특징은 CLI 사용 및 모듈, Python 라이브러리 통합, 원활한 작동을 위한 전체 비동기 지원, JSON 내보내기 기능 및 간결한 로그인 절차를 위한 편리한 브라우저 확장 프로그램을 포함하고 있습니다.\n\n<div class=\"content-ad\"></div>\n\n# Seekr\n\n- https://github.com/seekr-osint/seekr\n\nSeekr은 사용자 친화적인 OSINT(Open Source Intelligence) 데이터를 수집하고 관리하기 위한 툴킷입니다. 선호하는 OSINT 도구를 모두 통합한 데스크톱 화면을 제공합니다. 백엔드는 Go로 개발되었으며 데이터베이스로 BadgerDB를 사용하여 다양한 데이터 수집, 조직 및 분석 기능을 제공합니다. Seekr은 연구원, 조사원 또는 정보 수집을 하는 개인에게 필요한 데이터를 찾고 관리하는 것을 간편하게 만들어줍니다. 여러분의 OSINT 작업을 어떻게 개선할 수 있는지 확인해 보세요!\n\n# 다른 옵션들...\n\n<div class=\"content-ad\"></div>\n\n더 많은 옵션을 원하시면 `https://start.me/p/ME7aRA/oosint`를 방문해보세요.\n\n# 아니면\n\n이제 왜 계정마다 동일한 이메일 주소를 사용하는 것을 피해야 하는지 알게 되셨죠. 이렇게 하면 불허한 접근과 잠재적인 데이터 유출 위험이 높아집니다. 일시적, 전달 및 마스킹 이메일 서비스를 활용하면 악의적인 목적에서 민감한 정보를 보호하기 위한 추가적인 방어층을 더할 수 있습니다. 온라인 보안과 개인정보 보호를 우선시하며 잠재적인 위험을 완화하기 위해 이러한 조치를 항상 고려하는 것이 중요합니다.\n\n# 아직 궁금한 점이 있으신가요? ¡\n\n<div class=\"content-ad\"></div>\n\n아래에, 아마 당신이 좋아할만한 것들이 있을 거에요! 😊","ogImage":{"url":"/assets/img/2024-06-19-EmailOSINT_0.png"},"coverImage":"/assets/img/2024-06-19-EmailOSINT_0.png","tag":["Tech"],"readingTime":6},{"title":"Windows PC와 Mac에서 WhatsApp 앱을 잠그는 방법","description":"","date":"2024-06-19 21:44","slug":"2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac","content":"\n\nWhatsApp Android 및 WhatsApp iPhone에서는 화면 잠금 기능을 제공하며 WhatsApp Web도 마찬가지입니다. 그러나 Windows 또는 Mac용 WhatsApp에는 해당 기능이 없습니다. 컴퓨터에서이 앱을 잠그려면 어떻게 해야합니까? 이 기사에서는 Windows PC 및 Mac의 WhatsApp에 비밀번호를 설정하는 방법을 안내합니다.\n\n![WhatsApp](/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_0.png)\n\n## Windows 11, Windows 10 및 이전 버전에서 WhatsApp를 비밀번호로 잠그는 방법\n\n저는 WhatsApp용으로 사용하는 앱 잠금이 AppCrypt입니다. 이름에서 알 수 있듯이 AppCrypt는 앱 잠금입니다. 또한 웹 사이트 차단기로도 사용할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n단계 1. AppCrypt를 다운로드하고 컴퓨터에 설치하세요.\n\n단계 2. AppCrypt 암호를 설정하세요. 그리고 System Startup에서 실행 옵션을 선택하세요.\n\n![이미지](/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_1.png)\n\n단계 3. 화면 하단의 작업 표시줄에서 AppCrypt 아이콘을 클릭하세요. 나타나는 화면에서 AppCrypt 비밀번호를 입력하세요.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_2.png\" />\n\n단계 4. 이제 AppCrypt의 주 창에 도착했습니다. 두 개의 탭, 앱 잠금과 웹 차단이 보입니다.\n\n<img src=\"/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_3.png\" />\n\n단계 5. WhatsApp을 잠그려면 AppCrypt에 추가해야 합니다. 두 가지 상황이 있습니다.\n\n<div class=\"content-ad\"></div>\n\n![이미지](/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_4.png)\n\n만약 WhatsApp 앱이 Microsoft Store에서 설치되었다면, 먼저 파일 탐색기를 열어주세요. \"C:\\Program Files\\WindowsApps\"로 이동하시면 두 개의 WhatsApp 폴더를 발견할 수 있습니다. \"5319275A.WhatsAppDesktop_2.2401.4.0_x64__cv1g1gvanyjgm\"이라는 폴더를 열어보시면 WhatsApp.exe 파일을 찾을 수 있습니다. 이 WhatsApp.exe 파일을 AppCrypt의 App Lock 탭으로 끌어다 놓으세요.\n\n![이미지](/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_5.png)\n\n만약 WhatsApp 앱이 EXE 파일을 다운로드하여 설치되었다면, WhatsApp의 바탕화면 바로 가기를 찾으실 수 있습니다. 이 바로 가기를 AppCrypt의 App Lock 탭으로 끌어다 놓으면 됩니다. (바로 가기를 찾을 수 없다면, 파일 탐색기를 열어 \"C:\\Users\\Administrator\\AppData\\Local\\WhatsApp\"로 이동해주세요. WhatsApp.exe 파일이 있을 겁니다. 이 WhatsApp.exe 파일을 App Lock 탭으로 끌어다 놓으세요.)\n\n<div class=\"content-ad\"></div>\n\n지금 WhatsApp이 PC에서 잠겨 있어요.\n\n당신이나 누군가가 WhatsApp을 열려고 시도하면 WhatsApp이 열리지 않아요. 대신에 잠금 화면이 나타날 거에요. WhatsApp을 성공적으로 열려면 AppCrypt 비밀번호를 입력해야 해요.\n\n![WhatsApp AppCrypt](/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_6.png)\n\nWhatsApp을 잠금 해제하는 네 가지 방법이 있어요. 잠금 화면에서 AppCrypt 비밀번호를 입력하거나 AppCrypt를 종료하는 것과 같은 방법으로 WhatsApp을 잠금 해제할 수 있어요. 그러나 네 가지 방법 중 어느 것이든 비밀번호가 필요해요. WhatsApp의 잠금을 제거하기 위해서도 비밀번호가 필요해요.\n\n<div class=\"content-ad\"></div>\n\n팁 1: AppCrypt 환경 설정에서 App Lock 섹션으로 이동하세요. 앱이 비활성 상태가 될 때 자동 잠금 활성화 확인란을 선택하고 1분과 같은 시간을 선택하세요. 이렇게 하면 WhatsApp이 잠겨 있지만 1분 동안 비활성 상태로 유지되면 자동으로 잠길 것입니다.\n\n![Screenshot](/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_7.png)\n\n팁 2: 잠금은 이미 다른 사람들이 WhatsApp 앱에 접속하는 것을 방지하기에 충분히 효과적입니다. 더 효과적으로 만들고, 컴퓨터에 숙련된 사람들이 잠금을 우회하는 것을 방지하려면 AppCrypt 환경 설정으로 이동하여 TaskMgr 비활성화 확인란과 CMD 비활성화 확인란을 선택하세요.\n\n## 맥에서 비밀번호로 WhatsApp 잠그는 방법\n\n<div class=\"content-ad\"></div>\n\n만약 여러분이 맥 사용자라면, Mac용 AppCrypt이 있기 때문에 위의 \"Windows\" 부분도 확인할 수 있어요. 하지만 순서는 조금 다르답니다.\n\n1. AppCrypt을 다운로드하고 맥에 설치해주세요.\n\n2. AppCrypt 비밀번호를 설정해주세요.\n\n![이미지](/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_8.png)\n\n<div class=\"content-ad\"></div>\n\n단계 3. 화면 상단의 메뉴 바에서 잠금 아이콘을 클릭한 후 '주 창 열기'를 선택하세요.\n\n![Step 3](/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_9.png)\n\n단계 4. AppCrypt의 주 창에 들어가려면 AppCrypt 비밀번호를 입력하세요.\n\n![Step 4](/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_10.png)\n\n<div class=\"content-ad\"></div>\n\n5. **앱 잠금** 탭 아래에 있는 큰 **추가** 버튼을 클릭하세요.\n\n![Step 5](/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_11.png)\n\n6. 나타나는 **응용 프로그램** 창에서 WhatsApp을 선택한 후 **열기**를 클릭하세요.\n\n![Step 6](/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_12.png)\n\n<div class=\"content-ad\"></div>\n\n지금 WhatsApp이 맥에서 잠겨 있어요.\n\n![WhatsApp Lock on Mac](/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_13.png)\n\n더 자세한 내용은 위의 “Windows” 부분을 참고해주세요.\n\nWhatsApp 데스크톱 앱에는 WhatsApp 모바일 앱과 같은 화면 잠금 기능이 있으면 좋겠죠. 하지만 그런 기능은 제공되지 않아요. 다행히도 AppCrypt와 같은 앱 잠금 앱을 사용하여 WhatsApp 앱을 윈도우나 맥 컴퓨터에서 잠글 수 있어요. WhatsApp 외에도 AppCrypt를 사용하여 다른 앱을 잠글 수 있어요. 이것은 당신의 개인 정보를 보호하는 효과적인 방법이에요.","ogImage":{"url":"/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_0.png"},"coverImage":"/assets/img/2024-06-19-HowtoLockWhatsAppApponWindowsPCandMac_0.png","tag":["Tech"],"readingTime":4},{"title":"구독 모델이 온라인 광고를 시장에서 천천히 밀어내고 있는 방법","description":"","date":"2024-06-19 21:43","slug":"2024-06-19-Howthesubscriptionmodelissteadilysqueezingonlineadvertisingoutofthemarket","content":"\n\n<img src=\"/assets/img/2024-06-19-Howthesubscriptionmodelissteadilysqueezingonlineadvertisingoutofthemarket_0.png\" />\n\n금일의 빠르게 변화하는 웹 환경에서 온라인 광고의 전통적 역할이 경제 성장의 엔진 및 주요 비즈니스 모델로서 점차 의문의 여지가 더해지고 있습니다.\n\n온라인 존재 기업의 대부분에 대한 주요 수익원이었던 광고 시대는 점점 사라져 가고 있습니다. 아마존, 메타, 구글과 같은 섹터의 몇몇 거대기업을 제외하고는 더 이상 이러한 경우는 아닙니다. 각각의 논란이 많은 논란이 제기될 정도로 이 회사들은 규제당국의 감시를 받고 있는 상황으로, 그 결과 평판이 손상되었습니다.\n\n2023년 제4분기 결과 발표로 광고 시장의 하락이 강조되었습니다. 뉴욕 타임스와 같은 유명 기업들은 디지털과 인쇄 매체 양쪽 모두 광고 수익이 감소했다고 보도되었습니다. 이 신문은 운영 이익이 매우 건강한 39% 성장하는 반면, 디지털 및 인쇄 광고 수익이 8.4% 줄어 들었습니다. 더 많은 이익, 더 적은 지루한 광고를 경험해보세요.\n\n<div class=\"content-ad\"></div>\n\n가입 모델은 광고 수익 감소를 보상하는 데 점차 더 매력적인 대안으로 자리 잡고 있습니다. 지속 가능한 성장을 지원할 수 있는 능력을 갖추어 소비자 뿐만 아니라 분석가들에게도 보다 매력적으로 다가가고 있습니다. 사용자들과 믿음의 유대 관계를 구축하는 기업을 중요하게 생각하는 분석가들은 광고를 투하하거나 데이터를 최고 가격에 판매하는 기업보다 더 매력적으로 여깁니다. 이러한 추세는 디지털 미디어 분야 전반에 반영되어 있으며, 구독 수익은 꾸준히 감소하는 광고 수익과 동시에 증가하고 있습니다.\n\n비즈니스 모델은 장기적인 지속 가능성을 보장하기 위해 점차적으로 구독 중심으로 발전하고 있습니다. 심지어 디즈니와 같은 전통적인 미디어 기업도 광고 수익이 작년의 마지막 분기에 2.8% 줄었다고 해도 충분히 큰 타격을 입었습니다. 스냅과 같은 기업들은 광고 수익 성장이 둔화되고 있는 가운데 구독 모델을 강화하고 있어, 광고주들의 시사하고 있는 강력하고 예측 가능한 비즈니스 모델로의 전환을 시사하고 있습니다. Snap 주식은 2023년 4분기에 5% 성장률을 기록해 투자자들의 기대를 저버리자 35% 하락했고, 회사의 분기 성장은 주로 Snapchat+ 구독 제품의 확대 덕분인 것으로 보입니다.\n\n그 결과, 사용자 중 일부는 소중히 여기는 서비스와 정보를 위해 구독료를 지불하고 있으며, 그 결과로 좀 더 높은 수준의 충성도를 제공받아 일반 사용자보다 훨씬 뛰어난 경험을 즐기고 있습니다. 반면 일반 사용자들은 강제적인 광고 수락과 감시 대상이 되는 상황을 받아들여야 합니다. 자신의 데이터를 판매하지 않을 수 있다면, 그렇지 못하다면 광고주의 원재료가 될 수 있습니다.\n\n온라인 광고 시장이 어떻게 계속 발전할지는 모르지만, 대다수의 사용자들이 혐오하는 제품을 제공하고 있는 상황에서는 새로운 현실을 확인하는 추세에 적응하는 기업이 중요해지리라고 생각합니다. 광고에 가능한 한 적게 의존하도록 소득원을 다각화할 수 있는 기업이야말로 미래에 존재감을 유지할 수 있는 기업이 될 것입니다.\n\n<div class=\"content-ad\"></div>\n\n표 태그를 Markdown 형식으로 변경해주세요.","ogImage":{"url":"/assets/img/2024-06-19-Howthesubscriptionmodelissteadilysqueezingonlineadvertisingoutofthemarket_0.png"},"coverImage":"/assets/img/2024-06-19-Howthesubscriptionmodelissteadilysqueezingonlineadvertisingoutofthemarket_0.png","tag":["Tech"],"readingTime":2},{"title":"유령 개발 업데이트 2024년 6월","description":"","date":"2024-06-19 21:42","slug":"2024-06-19-GhostDevelopmentUpdateJune2024","content":"\n\n![Ghost Development Update June 2024](/assets/img/2024-06-19-GhostDevelopmentUpdateJune2024_0.png)\n\n올해의 중간 지점을 통과하면서, Ghost에서 몇 가지 중요한 업데이트를 공유할 수 있어 흥분스럽습니다. GhostVault RS의 개발은 꾸준히 진행되어 왔습니다. GhostVault RS에서의 데몬 기반 아키텍처로의 전환은 순조롭고 신뢰할 수 있는 스테이킹 경험을 약속하는 동시에 사용자 자산과 데이터를 보호하기 위한 향상된 보안 기능을 제공합니다.\n\n핵심 유지보수 측면에서, 우리는 블록체인의 보안과 효율성을 우선시하고 있습니다. 최근 업데이트는 AGVR의 최적화와 암호화 수단의 개선에 초점을 맞추어, Ghost가 블록체인 보안의 최전선에 남아 있도록 보장합니다.\n\n우리의 외부 홍보 노력 또한 강화되어오고 있으며, 파트너십이 진행 중에 있습니다. 이러한 협업은 Ghost 생태계의 기능을 향상시키고 사용자 베이스를 확대하는 데 목적이 있습니다. 디지털 시대의 개인정보 보호 및 보안을 공유하는 잠재적인 파트너들과 적극적으로 소통하고 있습니다.\n\n<div class=\"content-ad\"></div>\n\n드디어 GhostVault RS의 공식 출시를 준비하며 마케팅 노력이 크게 강화되고 있습니다. GhostVault RS 및 Ghost 생태계 전반의 혜택에 대해 기존 커뮤니티 및 잠재적인 새 사용자들을 교육하기 위해 타겟팅된 캠페인을 준비 중입니다. 소셜 미디어 참여, 커뮤니티 행사 및 교육 콘텐츠를 결합하여 최신 혁신들의 채택을 촉진하고 흥미를 불러일으키는 데 주력하고 있습니다.\n\n성장과 혁신을 움직이는 우리의 지속적인 지지와 열정에 감사드립니다. 블록체인 개인 정보 보호 기술의 한계를 끌어올리는 동안 최신 업데이트와 발전에 대한 소식을 얻을 수 있도록 공식 채널을 주시해 주세요.","ogImage":{"url":"/assets/img/2024-06-19-GhostDevelopmentUpdateJune2024_0.png"},"coverImage":"/assets/img/2024-06-19-GhostDevelopmentUpdateJune2024_0.png","tag":["Tech"],"readingTime":1},{"title":"6가지 방법으로 LLMs를 로컬에서 실행하는 방법","description":"","date":"2024-06-19 21:41","slug":"2024-06-19-6WaystoRunLLMsLocally","content":"\n\n상용 AI 및 대규모 언어 모델(LLM)은 한 가지 큰 단점이 있습니다: 개인 정보 보호 문제! 민감하거나 자사 데이터를 다룰 때 이러한 도구를 활용할 수 없습니다.\n\n이로 인해 로컬에서 개인 LLM을 운영하는 방법에 대해 알아야 합니다. 오픈 소스 모델은 해결책을 제시하지만 그들만의 일련의 도전과 혜택이 따릅니다.\n\n당신의 컴퓨터에서 실행할 수 있는 ChatGPT의 로컬 대안을 발견하기 위한 여정에 함께해주세요.\n\n# 기대치 설정\n\n<div class=\"content-ad\"></div>\n\n오픈 소스는 다양한 모델이 제공되므로 Meta와 같은 대규모 조직에서 제공하는 모델부터 개별 열정가들이 개발한 모델까지 수천 가지가 있습니다. 그러나 이러한 모델을 실행하는 것은 고유의 일련의 도전 과제를 제시할 수 있습니다:\n\n- 강력한 하드웨어가 필요할 수 있습니다: 많은 메모리와 가능한 경우 GPU\n- 오픈 소스 모델은 개선되고 있지만, 대개 ChatGPT와 같은 더 정교한 제품의 능력을 따라잡지 못할 수 있습니다. 이러한 제품들은 대규모 엔지니어 팀의 지원을 받고 있습니다.\n- 모든 모델을 상업적으로 사용할 수 있는 것은 아닙니다.\n\nGoogle의 유출 문서에 따르면 오픈 소스와 폐쇄 소스 모델 간의 간격이 좁혀지고 있다고 합니다.\n\n![이미지](/assets/img/2024-06-19-6WaystoRunLLMsLocally_0.png)\n\n<div class=\"content-ad\"></div>\n\n# 1. Hugging Face와 Transformers\n\nHugging Face은 머신러닝과 인공지능을 위한 도커 허브와 같은 서비스로, 다양한 오픈소스 모델을 제공합니다. 다행히도, Hugging Face는 주기적으로 모델을 평가하고 가장 좋은 모델을 선택할 수 있도록 리더보드를 제공합니다.\n\n또한, Hugging Face는 transformers라는 파이썬 라이브러리도 제공하는데, 이 라이브러리는 로컬에서 LLM을 간편하게 실행할 수 있게 해줍니다. 아래 예제는 라이브러리를 사용하여 이전 버전의 GPT-2 microsoft/DialoGPT-medium 모델을 실행하는 방법을 보여줍니다. 첫 번째 실행 시 Transformers는 모델을 다운로드하고, 이 모델을 사용하여 다섯 번의 대화를 할 수 있습니다. 이 스크립트를 실행하기 위해서는 PyTorch도 설치되어 있어야 합니다.\n\n```python\nfrom transformers import AutoModelForCausalLM, AutoTokenizer\nimport torch\n```\n\n<div class=\"content-ad\"></div>\n\n```js\ntokenizer = AutoTokenizer.from_pretrained(\"microsoft/DialoGPT-medium\", padding_side='left')\nmodel = AutoModelForCausalLM.from_pretrained(\"microsoft/DialoGPT-medium\")\n# 출처: https://huggingface.co/microsoft/DialoGPT-medium\n# 5줄 동안 채팅해 봅시다\nfor step in range(5):\n    # 새로운 사용자 입력을 인코딩하고 eos_token을 추가하여 Pytorch의 텐서를 반환합니다\n    new_user_input_ids = tokenizer.encode(input(\">> 사용자:\") + tokenizer.eos_token, return_tensors='pt')\n    # 채팅 기록 텐서에 새로운 사용자 입력 토큰을 추가합니다\n    bot_input_ids = torch.cat([chat_history_ids, new_user_input_ids], dim=-1) if step > 0 else new_user_input_ids\n    # 총 채팅 기록을 1000 토큰으로 제한하며 응답을 생성합니다\n    chat_history_ids = model.generate(bot_input_ids, max_length=1000, pad_token_id=tokenizer.eos_token_id)\n    # 최신 출력 토큰을 이쁘게 출력합니다\n    print(\"DialoGPT: {}\".format(tokenizer.decode(chat_history_ids[:, bot_input_ids.shape[-1]:][0], skip_special_tokens=True)))\r\n```\n\nTransformers 장점:\n\n- 모델 자동 다운로드\n- 코드 조각 사용 가능\n- 실험 및 학습에 이상적\n\nTransformers 단점:\n\n<div class=\"content-ad\"></div>\n\n- ML 및 NLP에 대한 좋은 이해가 필요합니다.\n- 코딩 및 구성 기술이 필요합니다.\n\n## 2. LangChain\n\n로컬에서 LLM을 실행하는 또 다른 방법은 LangChain을 사용하는 것입니다. LangChain은 AI 애플리케이션을 구축하기 위한 Python 프레임워크입니다. 지원하는 모델 중 하나 위에 AI 애플리케이션을 개발하기 위한 추상화 및 미들웨어를 제공합니다. 예를 들어 아래 코드는 microsoft/DialoGPT-medium 모델에 한 가지 질문을 하는 코드입니다:\n\n```js\nfrom langchain.llms.huggingface_pipeline import HuggingFacePipeline\n``` \n\n<div class=\"content-ad\"></div>\n\n```js\nhf = HuggingFacePipeline.from_model_id(\n    model_id=\"microsoft/DialoGPT-medium\", task=\"text-generation\", pipeline_kwargs={\"max_new_tokens\": 200, \"pad_token_id\": 50256},\n)\nfrom langchain.prompts import PromptTemplate\ntemplate = \"\"\"Question: {question}\nAnswer: Let's think step by step.\"\"\"\nprompt = PromptTemplate.from_template(template)\nchain = prompt | hf\nquestion = \"What is electroencephalography?\"\nprint(chain.invoke({\"question\": question}))\n```\n\nLangChain Pros:\n\n- 모델 관리가 쉽습니다\n- AI 응용 프로그램 개발을 위한 유용한 유틸리티들\n\nLangChain Cons:\n\n<div class=\"content-ad\"></div>\n\n- 속도가 제한되어 있어 Transformers와 동일합니다\n- 여전히 애플리케이션 로직을 코딩하거나 적합한 UI를 만들어야 합니다.\n\n# 3. Llama.cpp\n\nLlama.cpp은 LLM을 위한 C 및 C++ 기반 추론 엔진으로, Apple 실리콘에 최적화되어 있으며 Meta의 Llama2 모델을 실행할 수 있습니다.\n\n저장소를 복제하고 프로젝트를 빌드한 후에는 다음을 사용하여 모델을 실행할 수 있습니다:\n\n<div class=\"content-ad\"></div>\n\n```js\n$ ./main -m /path/to/model-file.gguf -p \"안녕하세요!\"\n```\n\nLlama.cpp의 장점:\n\n- Python 기반의 솔루션보다 높은 성능\n- Llama 7B와 같은 대형 모델을 저사양 하드웨어에서 지원\n- 다른 언어로 AI 애플리케이션을 빌드하기 위한 바인딩을 제공하며 추론은 Llama.cpp를 통해 실행됨.\n\nLlama.cpp의 단점:\n\n<div class=\"content-ad\"></div>\n\n- 제한된 모델 지원\n- 도구 빌딩이 필요합니다\n\n## 4. 람파파일\n\nMozilla에서 개발한 람파파일은 LLM(?)을 실행하는 사용자 친화적인 대안을 제공합니다. 람파파일은 휴대성과 하나의 파일로 실행 가능한 능력으로 유명합니다.\n\n람파파일을 다운로드한 후 GGUF 형식의 모델과 함께 사용하면 로컬 브라우저 세션을 시작할 수 있습니다:\n\n<div class=\"content-ad\"></div>\n\n```js\n$ ./llamafile -m /path/to/model.gguf\n```\n\nLlamafile 장점:\n\n- Llama.cpp와 동일한 속도 장점을 누릴 수 있습니다.\n- 모델이 포함된 단일 실행 파일을 빌드할 수 있습니다.\n\nLlamafile 단점:\n\n<div class=\"content-ad\"></div>\n\n- 프로젝트는 아직 초기 단계에 있어요.\n- 모든 모델이 지원되는 것은 아니에요. Llama.cpp가 지원하는 모델만 지원돼요.\n\n# 5. Ollama\n\nOllama는 Llama.cpp와 Llamafile에 대한 더 사용하기 쉬운 대안이에요. 실행 파일을 다운로드하여 설치하는 서비스를 머신에 설치해요. 설치가 완료되면 터미널을 열고 아래와 같이 실행해주세요.\n\n```js\n$ ollama run llama2\n```\n\n<div class=\"content-ad\"></div>\n\nOllama는 모델을 다운로드하고 대화형 세션을 시작할 것입니다.\n\nOllama 장점:\n\n- 설치 및 사용이 쉽습니다.\n- 람마와 비쿠냐 모델을 실행할 수 있습니다.\n- 속도가 정말 빠릅니다.\n\nOllama 단점:\n\n<div class=\"content-ad\"></div>\n\n- 모델 라이브러리 제공이 제한적입니다.\n- 모델을 스스로 관리하며, 사용자 지정 모델을 재사용할 수 없습니다.\n- LLM을 실행할 때 조정 가능한 옵션이 없습니다.\n- 아직 Windows 버전은 없습니다.\n\n# 6. GPT4ALL\n\nGPT4ALL은 직관적인 GUI를 갖춘 사용하기 쉬운 데스크톱 응용 프로그램입니다. 로컬 모델 실행을 지원하며, OpenAI에 API 키를 사용하여 연결할 수 있습니다. GPT4ALL은 문맥을 위해 로컬 문서를 처리하는 능력으로 두드러집니다. 개인 정보 보호를 보장합니다.\n\n![이미지](/assets/img/2024-06-19-6WaystoRunLLMsLocally_1.png)\n\n<div class=\"content-ad\"></div>\n\n장점:\n\n- 친근한 UI를 가진 정교한 대안\n- 다양한 선별된 모델을 지원\n\n단점:\n\n- 모델 선택이 제한적\n- 일부 모델은 상업적 이용 제약이 있음\n\n<div class=\"content-ad\"></div>\n\n# 결론\n\nLLM을 로컬에서 실행할 수 있는 적합한 도구를 선택하는 것은 여러분의 요구사항과 전문 지식에 달려 있어요. GPT4ALL과 같은 사용자 친화적인 응용 프로그램부터 Llama.cpp 및 Python 기반의 더 기술적인 옵션까지 다양한 선택지가 있어요. 오픈 소스 모델들이 새로운 기능들을 제공하며, 데이터와 개인 정보 보호에 대한 더 많은 통제 기회를 제공하고 있어요.\n\n본 안내서는 로컬 LLM 세계를 탐색하는 데 도움이 되는 직관성을 제공하고 있어요. 이러한 모델들이 발전함에 따라, ChatGPT와 같은 제품들과 경쟁력을 갖출 것으로 약속되고 있어요.\n\n2023년 12월 14일에 https://semaphoreci.com에 게재된 내용입니다.","ogImage":{"url":"/assets/img/2024-06-19-6WaystoRunLLMsLocally_0.png"},"coverImage":"/assets/img/2024-06-19-6WaystoRunLLMsLocally_0.png","tag":["Tech"],"readingTime":6},{"title":"열정으로부터 이익 창출하기 데이터 프라이버시 프리랜싱 및 링크드인 경력 시작하기를 위한 30일 가이드","description":"","date":"2024-06-19 21:38","slug":"2024-06-19-FromPassiontoProfitYour30-DayGuidetoLaunchingaDataPrivacyFreelancingLinkedInCareer","content":"\n\n세계는 데이터 프라이버시의 중요성에 대해 깨어나고 있습니다. GDPR 및 CCPA와 같은 규정들이 중심에 서 있음에 따라, 모든 규모의 비즈니스가 규정을 준수하기 위해 서둘러하고 있습니다. 이 수요의 급증은 특히 프리랜서들에게는 황금의 기회를 제공합니다! 데이터 프라이버시에 열정적이고 이 역동적인 분야에서 자신의 영역을 개척하려는 분들을 위해, 이 30일 가이드는 프리랜서 경력을 시작하고 뛰어난 LinkedIn 프로필을 구축하는 데 필요한 지식과 자원을 갖추어줄 것입니다.\n\n1일-10일: 데이터 프라이버시 전문 지식 구축\n\n- 기본 지식: 데이터 주체 권리, 데이터 유출 통지, 데이터 최소화와 같은 핵심 데이터 프라이버시 개념에 익숙해지세요. [ISTQB Certified Data Privacy Professional (CDPP)(https://www.istqb.org/)] 및 [International Association of Privacy Professionals (IAPP)(https://iapp.org/)]과 같은 자원들은 가치 있는 입문 과정과 인증을 제공합니다.\n- 심층 탐구: 특정 지역이나 규정을 전문화해보세요. 거주지, 언어 능력, 그리고 가장 흥미로운 규정적 환경을 고려해보세요. [EU 일반 데이터 보호 규정 (GDPR)(https://gdpr.eu/what-is-gdpr/)] 웹사이트와 [캘리포니아 소비자 개인정보 보호법 (CCPA)(https://oag.ca.gov/privacy/ccpa)]와 같은 자원들은 공식 가이드를 제공합니다.\n\n11일-20일: 프리랜싱 스킬을 갖추어보세요\n\n<div class=\"content-ad\"></div>\n\n- 프리랜싱 플랫폼: 업워크, 피버, 또는 토플 같은 플랫폼을 탐색하여 프리랜스 데이터 프라이버시 전문가가 어떻게 자신의 서비스를 마케팅하는지 이해해보세요. 프로젝트 설명, 가격 구조, 클라이언트 리뷰를 분석하여 시장에 대한 통찰력을 얻을 수 있습니다.\n- 서비스 포트폴리오 개발: 데이터 프라이버시 전문성을 강조하는 매력적인 포트폴리오를 작성하세요. 완료된 프로젝트, 관련 기술, 특정 전문 분야를 강조해주세요. 문제 해결 능력을 보여주는 사례 연구 또는 화이트 페이퍼를 작성하는 것도 고려해보세요.\n\n제 21-30일: LinkedIn 브랜드 구축\n\n- 프로필 최적화: 데이터 프라이버시에 초점을 맞춘 헤드라인과 요약을 작성하여 가치 제안과 타겟 대상을 명확히 전달하세요. 프로필 전반에 관련 키워드를 활용하여 검색에서의 발견성을 향상시켜주세요.\n- 콘텐츠는 왕이다: 지속적으로 데이터 프라이버시와 관련된 정보를 게시하세요. 통찰력 있는 기사, 인포그래픽, 또는 데이터 기반 통찰을 공유해주세요. 다른 전문가들이 제기한 질문에 답하거나 토론에 참여함으로써 자신을 사고 리더로 만들고 잠재적인 클라이언트를 끌어당기세요.\n- 네트워킹 파워: LinkedIn에서 다른 데이터 프라이버시 전문가, 컴플라이언스 담당자, 법률 전문가와 연결하세요. 관련 그룹에 가입하여 대화에 참여하고 관계를 구축하세요. \n\n보너스 자료:\n\n<div class=\"content-ad\"></div>\n\n- 프리랜스 작가를 위한 플랫폼: 글쓰기를 즐기는 경우, ProBlogger나 FlexJobs 같은 플랫폼을 고려해보세요. 데이터 개인 정보 보호 분야에서 콘텐츠 작성 기회를 제공합니다.\n- 데이터 개인 정보 보호 블로그: IAPP의 Privacy Tech Blog(https://iapp.org/news/privacy-tech)나 GDPRhub(https://gdprhub.eu/index.php?title=Welcome_to_GDPRhub)과 같은 데이터 개인 정보 보호 블로그를 팔로우하며 최신 트렌드를 계속해서 파악하세요.\n\n기억하세요:\n프리랜싱은 목적지가 아닌 여정입니다. 지속적인 학습, 가치 있는 콘텐츠 작성, 활발한 네트워킹은 성공적인 프리랜서 경력을 쌓는 데 중요합니다. 헌신과 제공된 자원을 이용하면, 30일 만에 데이터 개인 정보 보호 전문가로서 인정받는 프리랜서가 되는 길에 여러분이 잘 나아갈 것입니다!","ogImage":{"url":"/assets/img/2024-06-19-FromPassiontoProfitYour30-DayGuidetoLaunchingaDataPrivacyFreelancingLinkedInCareer_0.png"},"coverImage":"/assets/img/2024-06-19-FromPassiontoProfitYour30-DayGuidetoLaunchingaDataPrivacyFreelancingLinkedInCareer_0.png","tag":["Tech"],"readingTime":3},{"title":"10대 시절 웹마스터였던 나","description":"","date":"2024-06-19 21:38","slug":"2024-06-19-IWasaTeenageWebmaster","content":"\n\n![img](/assets/img/2024-06-19-IWasaTeenageWebmaster_0.png)\n\n2000년대 초반 금요일 오후 3시 30분, 학교 도서관의 컴퓨터 앞에 앉아 있어요.\n\n학교 주간이 끝났어요. 면제된 시간이고, 숙제는 제 마음 속에서 가장 먼 곳에 있어요. 집에 가야 할 시간인데요. 그런데, 집은 인터넷이 없어요. 그러면 제 인생의 적기인 이 프로젝트에 세 야일 기다려야 해요: 제 웹사이트.\n\n내 HTML, 적당치 않은 CSS, 그리고 훔친 코드로 만들어진 이 사이트는 청소년 소년의 마음만이 상상할 수 있는 형편없는 것이에요. 초록색 헤더 텍스트와 검은 배경, GIF 컬렉션, 그리고 청소년 유머로 가득한 페이지를 상상해보세요.\n\n<div class=\"content-ad\"></div>\n\n사이트 홈페이지 하단에는 메카니컬 카운터가 있어서 방문자의 수를 알려줍니다. 왼쪽 다섯 번째 숫자가 곧 '1'로 바뀔 것 같아서 자부심을 느낍니다. 하지만 손님들의 방명록에 있는 \"사이트가 멋있어\"라는 코멘트만큼은 자부심을 느끼는군요.\n\n지금부터 저는 도서관에서 30분 동안 \"내가 좋아하는 TV 프로그램\"이라는 블로그 포스트를 작성할 거에요. 누군가에게는 흥미로운 글일 거라고 확신합니다. 메모장에 쓰고 철자 오류를 확인하지 않았다는 점, 아직 공유할 가치 있는 생각이 없다는 현실이라도 신경 쓰지 않아요. 그냥 웹에 올릴 거거든요.\n\n사이트가 방문하고 싶은 곳은 아니에요. 지금 돌아보니, 접근성이 떨어지는 악몽의 공간이었고, 미성숙한 생각으로 가득한 글들이 넘쳐났던 것 같아요 (아마 아직도 크게 변한 게 없을 거에요?). 아무에게도 큰 도움이 되지 않았죠.\n\n하지만 한 가지로, 나에게는요.\n\n<div class=\"content-ad\"></div>\n\n자그만하지만 재미있는 이 사이트를 통해 학교 IT 수업 전체보다 더 많은 것을 웹 디자인에 대해 배우고 있어요. 그리고 첫 번째로 독자들을 위해 글을 쓰는 경험도 얻게 되었어요.\n\n무엇보다도 \"웹마스터\"가 되는 것은 디지털 시민이 되는 법에 대해 가르쳐주고, 웹이 무엇이고 어떤 존재여야 하는지에 대한 생각을 심어주고 있어요.\n\n지금도 머리 속에서 그 생각을 곱씹고 있어요.\n\n웹은 제 어린 시절의 일부가 아니었어요. 90년대와 00년대 초반에 영국의 근로 계급으로 성장했을 때, 제 기억과 통계가 나를 독특하게 만들었다는 걸 보여주세요. 하지만 설탕에 금기를 둔 아이가 초콜릿을 발견한 것처럼, 중학교 네트워크에 처음으로 로그인했을 때 제게 제공된 인터넷 기회에 탐식했던 기억이 있어요.\n\n<div class=\"content-ad\"></div>\n\n갑작스럽게 수천 개가 넘는 도서관에 있는 컨텐츠가 손끝에서 이루어졌습니다. 더 중요한 것은 웹 공간 자체도 마찬가지였죠.\n\n오늘날과 마찬가지로, 인터넷은 당신이 생각할 수 있는 모든 질문에 답을 제공했습니다. 그러나 그 답을 얻거나 그 답을 말할 사람이 어디에 있는지는 정확히 알 수 없었습니다. 어쩌면 어떤 사람의 개인 사이트에 올라와 있을지도 모르고, 화려한 Geocities 팬 페이지를 보게 될지도 모릅니다. 어쨌든, 정보를 알려주는 사람이 누구든간에, 그들이 당신이 찾고 있는 대답을 나눌 때에는 다른 동기가 없을 것이었습니다. 그저 자신의 즐거움을 위해서 그랬던 거죠.\n\n하지만 당신은 대답을 얻으면 그걸로 끝나지 않았습니다. 어차피 당신은 온라인에 접속하는 데 시간을 할애했으니까요. 대신, 마음에 생각한 것에 대한 답변은 추가적인 탐험을 위한 시작점일 뿐이었습니다. 그리고 내가 온라인을 시작했을 때는 이미 구글이 존재했지만, 좋은 정보를 안내해주는 것은 알고리즘이 아니라 블로그 롤, 링크 블로그 및 디렉토리를 통해 보여주는 인간 관리자들이었습니다.\n\n분명히 말하자면, 이 옛날 웹, 나에게 소중히 기억되는 웹은 완벽하지 않았습니다. 팝업창이 곳곳에 있었고, 접근성 문제가 많았으며, 몇 번의 클릭만으로 컴퓨터를 악성 소프트웨어로 인해 사용 불가능하게 만드는 일도 피할 수 없었습니다. 그것은 상상력의 한계를 벗어난 어떤 사람들이 주도하는 기업 무료 유토피아도 아니었습니다. 그러나 그 단점들이 동시에 그 특이함이자 매력이었습니다.\n\n<div class=\"content-ad\"></div>\n\n이제 젊은이의 향수가 나를 멍하게 만들었을 수도 있음을 깨달았어요. 하지만 때로는 그 느낌이 \"그것이 정말 어땠는지\"만큼 중요할 때도 있어요. 그리고 저에게는 웹이 제어할 수 없고 무질서하며 민주적이고 흥미로웠던 곳처럼 느껴졌어요. 사람들은 느슨하고 진심 어린 언어로 말하고 쓰곤 했어요. 아직은 낯선 사람들, 고용주, 친구들에게 우리 자신을 완벽하게 보여줘야 하는 시장이 아니었어요. 오히려 마을 광장과 더 가까웠죠. 아무도 소유하지 않았기 때문에, 우리 모두에게 속해 있었어요.\n\n물론, 저와 웹 모두 크게 변했어요.\n\n인터넷은 더 이상 방문하는 곳이 아니에요. 그것은 제 주변에 그림자처럼 항상 따라 다니는 의무가 되었어요. 제 주의를 끌기 위해 항상 기다리는 거죠.\n\n표면 상으로는 오늘날의 웹은 제가 알고 있던 그 시절과 조금도 닮아 보이지 않아요. 사라진 것 같은데, 웹 링크와 개인 홈페이지가 그것이구요. 그 자리에는 앱, 무한 스크롤, 자동 재생 비디오, 부풀어 오른 스크립트, 감시 인프라가 넘실거리는 Web 2.0의 장벽과 인공정보가 차지하고 있어요.\n\n<div class=\"content-ad\"></div>\n\n당신이 개발자이신가요? 그럼 저는 Markdown 형식으로 표 태그를 변환해 보겣습니다.\n\n<div class=\"content-ad\"></div>\n\n그 소리가 어떻게 들리던지, 난 ‘지오시티스’ 웹이 그리워하지 않아. 모든 홈페이지에 건설 GIF가 있던 것을 염탐하진 않아. 언제 마지막으로 방명록을 남겼는지 기억이 안 나고, 오늘날에는 내 사이트에 방문자 카운터를 두려고 생각하지도 않아. 그렇지만 그 미학이 의미했던 것들은 그리워.\n\n또한, “내 개인 정보를 소중히 생각한다”는 사이트의 팝업이 나타나지 않고 싶다는 것도 그리워하지만 그 데이터를 80명 이상의 공급업체에 판매하고 싶다는 내공을 던져주는 것(그 뒤로 이메일을 요구하는 팝업, “앱에서 더 잘 보일 거야”라고 하는 팝업, 그리고 광고 차단기를 꺼달라고 요청하는 팝업이 뒤따라오곤 한다.) 그것도 그리워해.\n\n또한, 모든 팝업을 넘어선 후에도 점점 그럼에도 불구하고 블로거가 아닌, 내게 뭔가를 팔려고 하는 마케터의 피부에 감싸인 쓸모없고 도움이 되지 않는 콘텐츠를 발견할 확률이 높아진다는 게 내가 찾기 어려운 점이라고 생각한다.\n\n하지만 오늘날 웹에서 가장 걱정되는 것은 변화한 정도가 아니라, 얼마나 우리를 바꿨는지이다.\n\n<div class=\"content-ad\"></div>\n\n\"이러한 새로운 기술들은 매력적일 뿐만 아니라 홀린 듯하고 중독성이 강해요. 이는 우리가 자산, 개인정보, 안전, 때로는 삶까지 잃을 위험에 처하도록 하는 큰 약점을 남기게 해요.\" - 컴퓨터 과학자 론 로스\n\n공공 공간은 항상 건강한 사회의 기반입니다. 강압에 두려워하지 않고 회의, 소통, 조직화, 표현할 수 있는 능력은 공동체 발전, 아이디어 전파, 실제 민주주의가 번성하는 방법입니다. 하지만 우리는 대개 기업이 현실 생활의 공공 공간을 와락거리게 할 허용했듯이 웹 공간도 가치를 과소평가해왔어요.\n\n중앙 집중형 소셜 미디어 알고리즘, 광고 기술, 데이터 브로커는 단순히 귀하의 가치 있는 주의를 영리하게 활용하려는 성가시운 기관이 아니에요. 오히려 많은 경우에 개인 및 사회적 수준에서 널리 약속을 지키는, 점점 더 대규모로 확장되는 감시 자본주의 시스템에 의해 촉진되는 피해를 초래합니다. 이 시스템은 당신이 볼 수 있는 모든 주류 웹사이트부터 휴대폰 앱 및 자동차 기능까지 확장되어 있어요.\n\nParimal Satyal이 설명한대로, 이 시스템은\"\n\n<div class=\"content-ad\"></div>\n\n페이스북-캠브리지 애널리티카 스캔들부터 에드워드 스노든의 폭로, 포플리스트들의 플랫폼화, 그리고 전염병 격리 기간 동안 번개처럼 퍼져나간 모든 끔찍한 음모 이론까지, 알고리즘 감시 웹의 경고 신호와 결과들은 점점 더 명백하고 걱정스러운 것으로 나타났어요. 하지만 편의의 약에 중독되어, 우리는 더 이상 스스로를 도울 수 없는 것 같아요.\n\n현대 웹의 문제 중 하나는 그 서비스와 플랫폼들이 단 한때엔 그들이 하는 일에 대해 매우 뛰어났다는 것이었어요. 그래서 우리는 무엇을 얻을 수 있을지에 대해 생각하지 않고 과거 것을 버리기를 간단히 봐주었어요.\n\n구글은 환상적인 검색 엔진이었어요. 페이스북은 오래된 친구들과 연락할 수 있는 깔끔한 인터페이스를 제공했고, 아마존은 책을 찾고 구매하는 것을 쉽게 만들어주었으며, 트위터는 우리가 생각을 방송하고 문화적 대화에 참여할 수 있는 번거로움 없는 방법을 제공해주었어요.\n\n하지만, 천천히, 사악하게, 사용자들이 잠긴 이후로, 대형 기술 플랫폼들은 점차적으로 더 도움이 안 되고 광고로 가득 찬, 신뢰할 수 없는 곳으로 쇠해갔어요. 작가이자 활동가인 코리 독터로가 'enshittification(악화)'라고 지칭하는 과정 덕분이죠:\n\n<div class=\"content-ad\"></div>\n\n그러나 웹 2.0의 실패에서 우리는 다시 일어날 기회를 찾을 수 있다는 것을 알 수 있어요. \"옛날 좋은 시절\"로 돌아가기 보다는 포기한 아이디어를 다시 살펴볼 수 있는 기회일지도 몰라요.\n\n그리고 아니요, 이것은 암호화폐에 대해 이야기하는 길이 아니에요.\n\n좋은 소식이 있어요: \"옛날 웹\"은 여전히 여기 있어요.\n\n인터넷에는 현재 10억 개 이상의 웹사이트가 있어요. 많은 사이트들이 여전히 개인 홈페이지에요. 그들은 재미있고 흥미진진하며 이상하며 경이로우며 도움이 되며 실제 사람들의 진정한 생각, 아이디어, 그리고 삶의 조각들로 가득 차 있어요.\n\n<div class=\"content-ad\"></div>\n\n이러한 사이트들의 유일한 문제는 구글이 수십 페이지 이상 묻어버린 곳에서 발견해야 한다는 점입니다. 그곳은 아무도 가지 않는 곳이죠. 발견하는 일은 마치 대서양을 가로 질러 마른 땅을 찾을 것이라는 직감으로 배를 타고 출항하는 것과 같습니다. 이를 위해서는 일반적인 웹서핑 이상의 특별한 노력이 필요합니다.\n\n제이슨 벨라즈퀘즈(Jason Velazquez)는 쓰는대로, 더 이상 창작에 열정이 부족한 사람들이 없어진 것이 문제가 아니라, 누가 웹을 우리를 위해 선별할 수 있는지입니다. 만약 보다 인간적인 웹이 우리가 원하는 것이라면, 그 일을 수행할 수 있는 유일한 종류의 선별자가 있으며, 그것은 기업 후원 알고리즘이나 AI 구동 봇이 아닙니다.\n\n다행히도, 웹 경험에 개인적인 요소가 되찾기를 원하는 욕망은 흥미로운 방식으로 나타나고 있습니다. 분산형 소셜 미디어 플랫폼부터 인디웹 프로토콜, 개인 블로그의 귀환, 정적 사이트와 블로그롤, 그리고 놀랍도록 커다란 \"작은 웹\" 씬까지 이런 것들이 포함됩니다.\n\n어플리케이션 웹만 알고 있는 사람들도 개인적인 네트워크를 원한 것이 아닙니다. 그들은 오히려 그것을 적극적으로 구축하고 있는 것입니다.\n\n<div class=\"content-ad\"></div>\n\n최근 롤링 스톤에 실린 기사에서 기술 기업가인 Anil Dash는 웹 사용 방식에 관한 권력 이전이 예견되고 있다고 예언합니다. 규제 당국이 기술 거물들에 대해 마침내 개입하고 강력한 행동을 취한다고 언급하며, 회사들이 앱 스토어를 운영하는 방법부터 검색 엔진을 제어하는 사람, 그리고 데이터 수집 방식에 이르기까지 모든 것을 강제하고 있다고 주장합니다.\n\n그 결과, 그는 아직도 자유로운 시대로 돌아갈 수도 있다고 믿고 있습니다:\n\n그렇다면, 가까운 HTML 가이드를 참고하여 새로운 사이트를 만들기 시작해야 할까요? 어쩌면 그렇습니다. 생각보다 쉬울 거에요. 그리고 나는 자신의 웹 공간을 소유하는 것이 강력한 것이라고 믿습니다. 아마도 웹이 다시 웹마스터들에게 속해 갈 수도 있습니다.\n\n그러나 여기서 중요한 것은 웹 마스터십이 아니라 사람들이 만드는 웹사이트의 의미입니다. 정보의 민주화, 개인의 권리 강화, 디지털 시민권의 정신이 무엇을 나타내는지에 대한 것이라고 생각합니다.\n\n<div class=\"content-ad\"></div>\n\n웹은 도구나 애플리케이션 목록 이상의 것입니다. 네트워크 이상의 것입니다. 웹은 우리 자신이에요. 어떻게 사용하고 접근하며, 무엇을 말하고 웹에서 하는지가 우리를 점점 더 정의합니다.\n\n우리는 디지털 세계의 영향에 대해 불안하거나 불편할 수 있습니다. 그러나 현실은 그것이 사라지지 않는다는 것입니다. 그리고 그것은 \"실제 세계\"의 어떤 물리적 기관과 같이 우리 문화의 결정적 측면입니다.\n\n아마도 우리는 스스로에게 질문해야 할지도 모릅니다. 웹은 어떤 종류의 기관이어야 할까요?\n\n저에게는 인터넷을 도서관에서 발견한 것이 적절해 보입니다. 항상 웹이 될 수 있는 것에 대한 가장 적합한 반영 같았습니다. 학습, 이해, 탈출, 반영을 위한 곳. 공공의 소유인 곳, 우리가 소비자가 아니라 시민으로 존재하는 곳입니다.\n\n<div class=\"content-ad\"></div>\n\n지금은 더 이상 그렇게 여겨지지 않는 것 같을 수 있어요. 인터넷은 소비하고, 고함을 지르고, 우월성을 주장하며, 강요하고, 누군가의 삶을 어떻게든 상업화하려는 곳으로 변모한 것 같아요. 하지만 이것이 정말 우리의 모습을 반영하는 것일까요, 아니면 소수의 목소리가 큰 영향력을 가진 것일까요?\n\n분명하게 말하자면, 저는 웹이 상업적 시장으로 존재할 권리가 있다고 생각해요. 제 주장은 웹이 어떤 자본주의에서 자유로운 이상적인 곳이어야 한다는 것이 아니에요. 상업적 노력이 우리의 유일한 우선순위가 되어서는 안 된다는 것이죠 — 개인적인 웹이 암흑 속에서 죽거나 향수 여행으로만 방문되는 곳으로 밀려날 필요가 없다는 것이에요.\n\n물론, 제 개인적인 힘으로 인터넷의 방향을 바꿀 수는 없어요. 할 수 있는 건 예전에 알아왔던 웹의 정신대로 디지털 발자취를 만들어 나가는 것뿐이에요. 이것이 중요하다고 생각하기 때문에 이를 실천할 거예요. 우리의 네트워크와 우리가 소비하는 콘텐츠는 우리를 반영하고 정의지어 주기 때문에요. 편의성을 중심으로 한 목표뿐만 아니라 교류가 거래 이상의 의미를 가져야 한다고 생각하기 때문에요.\n\n그리고 예전에 웹은 제가 이렇게 느끼는 유일한 사람은 아니라고 보여줬기 때문에 이를 실천할 거예요.\n\n<div class=\"content-ad\"></div>\n\n## 더 많은 독서 자료:\n\n- J.R. Carpenter의 \"수공으로 만든 웹\"\n- Joan Westenberg의 \"인터넷이 그리워\"\n- Parimal Satyal의 \"작은 웹 재발견\"\n- Dominik Rabiej의 \"옛날 개인 홈페이지 부흥\"\n- Yancey Strickler의 \"인터넷의 어두운 숲 이론\"\n- Aral Balkan의 \"Small Web은 무엇인가요?\"\n\n[마이크 그린들의 웹사이트](https://mikegrindle.com)","ogImage":{"url":"/assets/img/2024-06-19-IWasaTeenageWebmaster_0.png"},"coverImage":"/assets/img/2024-06-19-IWasaTeenageWebmaster_0.png","tag":["Tech"],"readingTime":8},{"title":"내 남편이 내 위치를 더 이상 공유하지 않아","description":"","date":"2024-06-19 21:36","slug":"2024-06-19-MyHusbandStoppedSharingHisLocationWithMe","content":"\n\n![이미지](/assets/img/2024-06-19-MyHusbandStoppedSharingHisLocationWithMe_0.png)\n\n크린치.\n\n소파 쿠션 속에 사라졌던 iPhone을 찾으려 소파 베드를 열었습니다. 유리가 깨지는 소리가 이토록 마음아파질 수 있다는 것을 누가 알았을까요? 화면이 완전히 깨졌어요.\n\n새 핸드폰을 샀는데 설정하는 것이 두려웠어요. 프로세스에 충분한 시간을 확보하기 위해 저녁 일정을 전부 취소했습니다. 마침내 설정을 끝내자, 의외로 이전 iPhone과 똑같이 느껴졌어요.\n\n<div class=\"content-ad\"></div>\n\n제 남편 위치 말고.\n\n## 제 반응\n\n옛 핸드폰에서는 어떤 때나 그에게서 온 메시지를 읽을 때, 그의 위치를 그의 사진을 클릭하여 확인할 수 있었습니다. 그것이 더 이상 작동되지 않았어요. 제게 위치를 공유하는 다른 사람들을 보았지만, 남편은 아니었어요. 남편에게 다시 위치를 공유해달라고 했지만, 아직도 성공하지 못했어요.\n\n\"그래, 말야,\" 그는 말했어요. \"우리가 정말로 위치를 공유해야 할까?\"\n\n<div class=\"content-ad\"></div>\n\n그의 대답에 놀랐어요. 감정적인 반응은 했지만 입을 다물었어요. 그가 한 말에 대해 생각할 시간이 필요했죠. 아마 우리가 더 이상 위치를 공유할 필요가 없을지도 모르겠다고 했던게 맞을지도 모르죠. 그래도 마음이 걸렸어요.\n\n그는 뭔가 숨기는 게 있을까요? 아니면 제가 과도하게 반응한 걸까요?\n\n## 주로 편의를 위해\n\n저는 남편과 위치를 주로 안전을 위해 공유하지만 편의를 위해서도 공유해요. 혼자 여행하다가 무언가 일어났을 때 남편이 내 위치를 추적할 수 있어 안심돼요. 남편의 위치를 볼 수 있는 것이 편리해요. 그가 회사를 떠나거나 식료품점을 나왔을 때 알 수 있어요. 이미 나가 있다는 걸 보면서 상점에서 사오라고 문자를 보내지 않게 됐어요.\n\n<div class=\"content-ad\"></div>\n\n나만이 위치 공유를 유용하게 느끼는 것은 아닙니다. 2022년 해리스 폴이 실시한 조사에 따르면:\n\n- 79%의 미국 성인 중 네 명 중 세 명(79%)은 사용하는 기기에서 어느 정도의 시간 동안 위치 공유 기능을 활성화했다고 보고하며, 이 중 10분의 2(16%)는 항상 위치 공유 기능을 활성화한다고 신고했습니다.\n- 미국 성인 중 10%만이 위치 공유 기능을 절대로 활성화하지 않습니다.\n- 기기에서 위치 공유 기능을 활성화한 사람들 중 절반 이상(54%)은 특정 작업을 수행하기 위해 그렇게 한다고 합니다. 예를 들어 물건을 배달 받거나 길 안내 정보를 얻는 등의 이유입니다.\n\n하지만 이것이 불안정한 사람들을 위한 스토킹 도구가 되는 시점은 언제인가요?\n\n![이미지](/assets/img/2024-06-19-MyHusbandStoppedSharingHisLocationWithMe_1.png)\n\n<div class=\"content-ad\"></div>\n\n## 추적할 때\n\n할 말이 있어. 남편의 위치를 볼 때가 있는데, 그냥 아무 이유없이 확인해 본 적이 있어. 남편이 도시를 벗어나 있을 때 가끔씩 확인하는 걸 좋아해. 나는 남편이 말한 곳이 맞는지, 알 수 없는 곳에 있는지 궁금해해. 이 습관에 대해 자랑스럽지 않지만, 그가 나에게 위치를 알려주지 않을 때까지는 해가 없는 일처럼 느껴졌어.\n\n내가 신뢰 문제에 대해 고민하는 것은 사실이야. 어릴 때와 어른이 된 후의 경험을 합치면, 내 뇌는 나를 안전하게 지키려고 최선을 다해. 이는 최악의 결과를 상상하고, 꼭 문제를 찾으려고 노력하는 것을 의미해.\n\n전문가들이 위치 공유에 대해 어떻게 생각하는지 궁금했어.\n\n<div class=\"content-ad\"></div>\n\n## 전문가들의 의견\n\n관계 전문가들 사이에 위치 공유에 대한 의견 차이가 있습니다. 관계에 대한 좋은 것인지 나쁜 것인지에 대해 합의가 없습니다. 어떤 사람들은 이를 개인 정보 침해로 보고 있습니다. 다른 사람들은 과거에 배신을 경험한 파트너들과의 신뢰를 구축하는 방법으로 이해하고 있습니다.\n\n콜로라도 덴버에 위치한 치료사이자 라이프 코치인 리사 마리 보비 박사는 건강하고 안전한 관계에 관해서는 위치 공유는 \"절대 문제가 아니다\" 라고 믿습니다.\n\n보비 박사는 \"만약 [부부가] 자신들의 위치 추적을 켜 놓았다면, 이는 대화의 주제가 되거나 사람들이 심각하게 생각하는 것이 아니다\"라고 Inverse에 전했습니다.\n\n<div class=\"content-ad\"></div>\n\n컬러라도 보울더에 위치한 인티마시 인스티튜트의 제니 스카일러 박사는 인벌스에 말했습니다. \"만약 최근에 신뢰 위반이 없는 관계라면, 이것은 과도하다고 볼 수 있습니다.\"\n\n\"이것은 어떤 식으로는 통제의 연습이며, 당신을 토끼굴로 이끌 수 있습니다,\" 라고 스카일러는 말했습니다. \"이것이 잘못될 수 있는 세 가지 경우가 있습니다: 한 쪽 파트너가 다른 쪽이 침범받고 있다고 느끼는 정도에 공유를 지지하는 경우, 한 쪽 파트너가 다른 쪽이 수상하다고 느끼는 정도에 공유를 반발하는 경우, 그리고 한 쪽 파트너가 불임박한 다른 배신을 통해 다른 쪽의 신뢰를 속인 경우.\"\n\n모든 커플에게 한 가지 해결책이 되지 않기 때문에, 나는 중도를 선택했습니다.\n\n<div class=\"content-ad\"></div>\n\n## 내 결정\n\n남편이 나와 자신의 위치를 공유하지 않기를 선호하는 점을 받아들이기로 결정했습니다. 그 점이 난 불편하지만, 불편함에 대해 마주하기 위해 노력해야 합니다. 내가 언제든지 그가 어디에 있는지 알고 싶어하는 필요성은 그에게가 아니라 내게 더 관련이 있을 것이라 의심합니다.\n\n그가 나에게 위치를 공유해야 할 때가 있을 경우, 그에게 부탁할 겁니다. 그는 임시로 위치를 공유할 수 있습니다. 예를 들어, 공항에서 나를 데리러 오는 길이라면, 그가 터미널에 접근하고 있는지 알면 우리 둘 다 많은 머리아피 한 걸 막을 수 있습니다.\n\n원래의 \"그가 뭔가를 숨기고 있는가?\" 또는 \"나는 과도하게 반응하고 있는가?\"라는 질문에 대한 대답은 아마도 \"아니요, 그가 뭔가를 숨기고 있는 것은 아니고 네, 나는 과도하게 반응하고 있습니다.\"일 것입니다.\n\n<div class=\"content-ad\"></div>\n\n반대로 말하자면, 위치 공유는 어차피 나를 심장이 아픈 상황으로부터 구해주지 않을 거에요. \n\n내 남편과 거의 이혼직전이었던 경험에 대해 계속 읽어보세요:\n\n내 절친이 남편을 속여 부정행위를 저질렀다고 고백했던 이야기를 계속 읽어보세요:","ogImage":{"url":"/assets/img/2024-06-19-MyHusbandStoppedSharingHisLocationWithMe_0.png"},"coverImage":"/assets/img/2024-06-19-MyHusbandStoppedSharingHisLocationWithMe_0.png","tag":["Tech"],"readingTime":4}],"page":"60","totalPageCount":113,"totalPageGroupCount":6,"lastPageGroup":20,"currentPageGroup":2},"__N_SSG":true}