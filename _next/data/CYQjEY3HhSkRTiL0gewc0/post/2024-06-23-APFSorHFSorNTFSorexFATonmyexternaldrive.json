{"pageProps":{"post":{"title":"외장 하드, APFS, HFS, NTFS, exFAT 중 어떤 파일 시스템을 선택해야 할까","description":"","date":"2024-06-23 15:54","slug":"2024-06-23-APFSorHFSorNTFSorexFATonmyexternaldrive","content":"\n\n## FAT32가 더 이상 필요 없어요\n\n![외장 드라이브에 APFS, HFS, NTFS 또는 FAT, 어떤 파일 시스템을 선택할까요?](/assets/img/2024-06-23-APFSorHFSorNTFSorexFATonmyexternaldrive_0.png)\n\n여러 OS를 사용하는 여러 디바이스로 작업할 때, 파일 관리는 항상 있어야 할 상수입니다. 대용량 비디오 파일, 소프트웨어 이미지, 백업 또는 아카이브와 같은 Cold Storage, 악명 높은 node_modules와 같은 대량의 소규모 파일 그룹, 파일 조각 및 PDF 문서가 흩어져 있습니다.\n\n이러한 파일들을 한 디바이스에서 다른 디바이스로 옮기는 것은 항상 문제였습니다. 광섬유 또는 4Gbps 이더넷과 같은 빠른 네트워크의 혜택을 받을 수 없을 때, 외장 드라이브에 이동하고 작업하기를 처리해야 합니다. 이것은 특정한 파일 시스템 형식으로 드라이브를 용례시키고, 절대 문제가 발생하지 않길 신은 바랍니다.\n\n<div class=\"content-ad\"></div>\n\n올해 나의 한 가지 문제 중 하나였어요. 중요한 파일 몇 개를 회사 네트워크에 연결되지 않은 다른 컴퓨터로 물리적으로 옮겨야 했거든요. 그 기기들은 매우 다르기 때문에 이 파일이 가장 큰 드라이브에 저장되면 어떤 형식이 가장 좋을지 조사했죠. 회계사는 Windows를 사용하고, 매니저는 macOS를 사용하며, 서버는 Debian에서 실행돼요. 감이 오시죠?\n\n# 만능 exFAT\n\n지금은 FAT32가 뒤쳐지고 exFAT 지원이 대부분의 운영 체제에서 넓게 이루어지고 있어요. 이는 윈도우, 리눅스 (커널 5.4 이상), macOS (10.12 이후)에서 기본적으로 읽을 수 있기 때문에, 특별한 드라이버나 소프트웨어가 필요하지 않다는 뜻이에요. 그냥 작동되는 것이죠.\n\n<div class=\"content-ad\"></div>\n\n다시 말해, exFAT를 다른 형식보다 사용하는 가장 중요한 이유는 기기 간 호환성입니다.\n\n더불어, exFAT를 가장 보급화되고 오래된 FAT32보다 사용하는 두 번째 이유는 기기 및 파일 크기입니다. 오늘날 4GB 이상의 싸고 저렴한 USB 플래시 드라이브 및 그 이상의 파일을 찾는 것이 일반적이며, 이는 FAT32의 한계입니다. exFAT는 외장 드라이브에서 표준 형식으로 사용됩니다, 예를 들어 SD 카드 등입니다. 이것은 2010년경에는 문제가 되지 않았지만, 지금은 그렇습니다.\n\nexFAT를 선택하는 세 번째, 그리고 덜 중요한 이유는 가벼움 때문입니다. 호스트로부터 너무 많은 자원을 필요로하지 않습니다. - 이것은 카메라와 같은 저전력 장치와 같은 경우 32GB 이상의 SD 카드가 이 형식을 사용하는 주요한 이유 중 하나입니다.\n\nexFAT의 큰 단점이 있습니다. 그것은 저널링이 없다는 것입니다. exFAT 파티션에 변경 사항이 발생할 때(예: 파일 쓰기), 이에 대한 기록이 없습니다. 의도치 않은 케이블이 꼬이거나 전원이 차단되거나 시스템이 멈추는 등의 갑작스러운 중단이 발생하면 데이터가 손상될 수 있습니다. 2GB 파일을 복사하는 중이라고 상상해보세요. 그런데 파일의 나머지 절반은 모두 0으로 나오고 있는데요, 막상 생각해보면 파일이 이런 상태일 수도 있습니다.\n\n<div class=\"content-ad\"></div>\n\n또 하나는 TRIM 기능이 없다는 것이며, 아마 비슷한 문제일 것입니다. 이 OS에서 보내는 명령은 Flash NAND 기반 저장장치(SSD)에서 쓰기 및 삭제 작업의 성능을 향상시키고 조금 더 오래 사용할 수 있게 만듭니다.\n\n이 두 가지 이유는 계속해서 작업에 exFAT 드라이브를 사용하지 않아야 하는 큰 이유입니다. 다행히 대부분의 OS는 불완전한 작업이 감지될 때 오류를 확인하고 복구하는 것을 지원하지만, 때로는 파일들을 마법처럼 고치지 못할 수 있습니다.\n\n중요한 작업을 할 때, 제 추천은 exFAT을 사용하여 파일을 로컬로 복사하고 작업을 수행한 후 한 번 복사된 변경 사항을 다시 복사하는 것입니다. 듣던 대로 빠르지는 않지만, 무작위 데이터 손실이나 성능 저하가 없음을 보장할 수 있습니다. rsync 명령이 유용할 수 있습니다.\n\n# 믿음직한 NTFS\n\n<div class=\"content-ad\"></div>\n\nNTFS 형식은 버전 3.1에서 지원되는 파일 시스템으로 현재 주요 운영 체제에서 지원하지만 완벽하게는 아닙니다. 대부분의 운영 체제에서 읽고 쓸 수 있으며 macOS와 같은 운영 체제는 쓰기 위해 제3자 소프트웨어가 필요합니다.\n\n![external drive](/assets/img/2024-06-23-APFSorHFSorNTFSorexFATonmyexternaldrive_2.png)\n\n다른 것 대신 NTFS를 사용하는 주된 이유는 Windows 사용자를 위한 기능입니다. Ext4, APFS, HFS 등에서 발생하는 파일 작업 오버헤드가 있지만, 저널링, TRIM, 파일 권한을 위한 ACL, 암호화, 압축, 중복 제거, 그림자 사본 및 수천 개의 파일에 대해 때로는 더 좋은 성능을 제공하는 기능을 사용할 수 있습니다.\n\n그러나 NTFS는 자체적으로 문제가 될 수 있습니다. Windows 사용자는 특히 큰 드라이브를 NTFS로 포맷팅하는 데 주의해야 합니다. 쓰기 작업의 교차 호환성이 주 문제이므로 다른 운영 체제에서만 읽기만 하려면 문제가 없을 것입니다.\n\n<div class=\"content-ad\"></div>\n\n만약 윈도우가 당신의 선택이 아니라면, exFAT이 유일한 선택일지도 모릅니다.\n\n# HFS+와 APFS\n\n맥 사용자들은 애플이 드라이브에 HFS 형식을 사용하는 것을 잘 알고 있습니다. NTFS에 관해서도 같은 얘기를 할 수 있고, 여기에는 저널링 및 내장 SSD에서의 TRIM과 같은 대부분의 기능들이 포함됩니다 (외장 SSD에서도 사용할 수 있습니다).\n\n이 형식은 기계적 드라이브가 일반적이었던 시절에 만들어졌습니다. 최근에는 APFS로 대체되었는데, 이 형식은 많은 기능과 최적화가 내재되어 있습니다. 이곳에서의 주의할 점은 APFS가 SSD에 최적화되어 있고, 현대 macOS 내장 드라이브의 기본 형식이라는 것입니다.\n\n<div class=\"content-ad\"></div>\n\nHowToGeek에 따르면, Apple 생태계에서 외장 드라이브를 전용으로 사용할 계획이 있다면, HFS + 또는 APFS가 가장 신뢰할만한 옵션이라고 합니다. HFS +는 기계식 드라이브와 매우 잘 작동하며, APFS는 SSD 또는 NVMe 드라이브와 같은 플래시 NAND 저장소에도 동일하게 작동합니다.\n\n![image](/assets/img/2024-06-23-APFSorHFSorNTFSorexFATonmyexternaldrive_3.png)\n\n궁금하다면, 주로 파일 메타데이터 위치 때문입니다. HFS +에서는 메타데이터가 회전 디스크의 시작 부분(외부 테두리)에 저장되지만, APFS는 파일과 동일한 위치에 넣습니다. 기계식 드라이브는 Flash NAND와 비교해서 순차적이 아닌 읽기에서 성능이 저하되는데, 여기서 HFS + 성능이 더 좋으며, 추가 파일이 이 메타데이터의 희소성으로 인해 증가함에 따라 APFS는 악화됩니다.\n\nAPFS는 파일 다루는 방식 때문에 매우 유연합니다. LifeWire에 따르면, 이러한 기능에는 공간 공유, 스냅샷 및 클론과 같은 기능이 있으며, 아마 Flash NAND의 빠른 랜덤 읽기 덕분에 가능한 것입니다.\n\n<div class=\"content-ad\"></div>\n\n만약 교차 호환성을 원한다면, APFS 또는 HFS+는 맥 OS에서만 작동하므로 타사 소프트웨어는 다른 환경에서만 작동함을 고려해야 합니다.\n\n# ext4는 어떠한가요?\n\next4 형식은 데비안과 우분투에서는 윈도우의 NTFS나 맥 OS의 APFS와 유사합니다. StackOverflow에는 두 형식에 대해 다룬 좋은 글이 있습니다.\n\nXFS, BTRFS, F2FS 및 ZFS에 대해서도 같은 말을 할 수 있습니다. 리눅스를 사용 중이라면 이미 어떤 파일 시스템을 선택해야 하는지 알고 계실 것입니다. 작은 이동 장치(SD 카드, eMMC, 비슷한 기기)를 위해서는 F2FS나 exFAT를 선택하면 될 것입니다.\n\n<div class=\"content-ad\"></div>\n\n어쨌든, Linux는 전혀 다른 세계입니다. 작업 부하에 따라 NAS에는 ZFS, NASA에는 XFS, eMMC 드라이브에는 F2FS, 작업용 워크스테이션에는 BTRFS, 그리고 Ubuntu를 사용하는 엄마 노트북에는 ext4를 선호할 수 있습니다.\n\n# 그럼, 어떤 걸 선택해야 할까요?\n\n64GB 플래시 드라이브에 JPEG 형식의 작은 사진과 4K 영상 파일이라는 큰 파일이 많이 있다고 상상해봅시다.\n\n- 장치 간 호환성? exFAT\n- 오래된 장치 간 호환성? FAT32 및 다수의 zip 파일.\n- Flash NAND에서의 Apple 생태계? APFS\n- 기계식 드라이브에서의 Apple 생태계? HFS+\n- Windows 생태계? NTFS\n- Linux 생태계? Ext4\n- 저전력 장치용 Linux? F2FS가 선택지일 수 있습니다, exFAT\n- 서버? ZFS, BTRFS, XFS를 검토해 보세요...","ogImage":{"url":"/assets/img/2024-06-23-APFSorHFSorNTFSorexFATonmyexternaldrive_0.png"},"coverImage":"/assets/img/2024-06-23-APFSorHFSorNTFSorexFATonmyexternaldrive_0.png","tag":["Tech"],"readingTime":5},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h2>FAT32가 더 이상 필요 없어요</h2>\n<p><img src=\"/assets/img/2024-06-23-APFSorHFSorNTFSorexFATonmyexternaldrive_0.png\" alt=\"외장 드라이브에 APFS, HFS, NTFS 또는 FAT, 어떤 파일 시스템을 선택할까요?\"></p>\n<p>여러 OS를 사용하는 여러 디바이스로 작업할 때, 파일 관리는 항상 있어야 할 상수입니다. 대용량 비디오 파일, 소프트웨어 이미지, 백업 또는 아카이브와 같은 Cold Storage, 악명 높은 node_modules와 같은 대량의 소규모 파일 그룹, 파일 조각 및 PDF 문서가 흩어져 있습니다.</p>\n<p>이러한 파일들을 한 디바이스에서 다른 디바이스로 옮기는 것은 항상 문제였습니다. 광섬유 또는 4Gbps 이더넷과 같은 빠른 네트워크의 혜택을 받을 수 없을 때, 외장 드라이브에 이동하고 작업하기를 처리해야 합니다. 이것은 특정한 파일 시스템 형식으로 드라이브를 용례시키고, 절대 문제가 발생하지 않길 신은 바랍니다.</p>\n<div class=\"content-ad\"></div>\n<p>올해 나의 한 가지 문제 중 하나였어요. 중요한 파일 몇 개를 회사 네트워크에 연결되지 않은 다른 컴퓨터로 물리적으로 옮겨야 했거든요. 그 기기들은 매우 다르기 때문에 이 파일이 가장 큰 드라이브에 저장되면 어떤 형식이 가장 좋을지 조사했죠. 회계사는 Windows를 사용하고, 매니저는 macOS를 사용하며, 서버는 Debian에서 실행돼요. 감이 오시죠?</p>\n<h1>만능 exFAT</h1>\n<p>지금은 FAT32가 뒤쳐지고 exFAT 지원이 대부분의 운영 체제에서 넓게 이루어지고 있어요. 이는 윈도우, 리눅스 (커널 5.4 이상), macOS (10.12 이후)에서 기본적으로 읽을 수 있기 때문에, 특별한 드라이버나 소프트웨어가 필요하지 않다는 뜻이에요. 그냥 작동되는 것이죠.</p>\n<div class=\"content-ad\"></div>\n<p>다시 말해, exFAT를 다른 형식보다 사용하는 가장 중요한 이유는 기기 간 호환성입니다.</p>\n<p>더불어, exFAT를 가장 보급화되고 오래된 FAT32보다 사용하는 두 번째 이유는 기기 및 파일 크기입니다. 오늘날 4GB 이상의 싸고 저렴한 USB 플래시 드라이브 및 그 이상의 파일을 찾는 것이 일반적이며, 이는 FAT32의 한계입니다. exFAT는 외장 드라이브에서 표준 형식으로 사용됩니다, 예를 들어 SD 카드 등입니다. 이것은 2010년경에는 문제가 되지 않았지만, 지금은 그렇습니다.</p>\n<p>exFAT를 선택하는 세 번째, 그리고 덜 중요한 이유는 가벼움 때문입니다. 호스트로부터 너무 많은 자원을 필요로하지 않습니다. - 이것은 카메라와 같은 저전력 장치와 같은 경우 32GB 이상의 SD 카드가 이 형식을 사용하는 주요한 이유 중 하나입니다.</p>\n<p>exFAT의 큰 단점이 있습니다. 그것은 저널링이 없다는 것입니다. exFAT 파티션에 변경 사항이 발생할 때(예: 파일 쓰기), 이에 대한 기록이 없습니다. 의도치 않은 케이블이 꼬이거나 전원이 차단되거나 시스템이 멈추는 등의 갑작스러운 중단이 발생하면 데이터가 손상될 수 있습니다. 2GB 파일을 복사하는 중이라고 상상해보세요. 그런데 파일의 나머지 절반은 모두 0으로 나오고 있는데요, 막상 생각해보면 파일이 이런 상태일 수도 있습니다.</p>\n<div class=\"content-ad\"></div>\n<p>또 하나는 TRIM 기능이 없다는 것이며, 아마 비슷한 문제일 것입니다. 이 OS에서 보내는 명령은 Flash NAND 기반 저장장치(SSD)에서 쓰기 및 삭제 작업의 성능을 향상시키고 조금 더 오래 사용할 수 있게 만듭니다.</p>\n<p>이 두 가지 이유는 계속해서 작업에 exFAT 드라이브를 사용하지 않아야 하는 큰 이유입니다. 다행히 대부분의 OS는 불완전한 작업이 감지될 때 오류를 확인하고 복구하는 것을 지원하지만, 때로는 파일들을 마법처럼 고치지 못할 수 있습니다.</p>\n<p>중요한 작업을 할 때, 제 추천은 exFAT을 사용하여 파일을 로컬로 복사하고 작업을 수행한 후 한 번 복사된 변경 사항을 다시 복사하는 것입니다. 듣던 대로 빠르지는 않지만, 무작위 데이터 손실이나 성능 저하가 없음을 보장할 수 있습니다. rsync 명령이 유용할 수 있습니다.</p>\n<h1>믿음직한 NTFS</h1>\n<div class=\"content-ad\"></div>\n<p>NTFS 형식은 버전 3.1에서 지원되는 파일 시스템으로 현재 주요 운영 체제에서 지원하지만 완벽하게는 아닙니다. 대부분의 운영 체제에서 읽고 쓸 수 있으며 macOS와 같은 운영 체제는 쓰기 위해 제3자 소프트웨어가 필요합니다.</p>\n<p><img src=\"/assets/img/2024-06-23-APFSorHFSorNTFSorexFATonmyexternaldrive_2.png\" alt=\"external drive\"></p>\n<p>다른 것 대신 NTFS를 사용하는 주된 이유는 Windows 사용자를 위한 기능입니다. Ext4, APFS, HFS 등에서 발생하는 파일 작업 오버헤드가 있지만, 저널링, TRIM, 파일 권한을 위한 ACL, 암호화, 압축, 중복 제거, 그림자 사본 및 수천 개의 파일에 대해 때로는 더 좋은 성능을 제공하는 기능을 사용할 수 있습니다.</p>\n<p>그러나 NTFS는 자체적으로 문제가 될 수 있습니다. Windows 사용자는 특히 큰 드라이브를 NTFS로 포맷팅하는 데 주의해야 합니다. 쓰기 작업의 교차 호환성이 주 문제이므로 다른 운영 체제에서만 읽기만 하려면 문제가 없을 것입니다.</p>\n<div class=\"content-ad\"></div>\n<p>만약 윈도우가 당신의 선택이 아니라면, exFAT이 유일한 선택일지도 모릅니다.</p>\n<h1>HFS+와 APFS</h1>\n<p>맥 사용자들은 애플이 드라이브에 HFS 형식을 사용하는 것을 잘 알고 있습니다. NTFS에 관해서도 같은 얘기를 할 수 있고, 여기에는 저널링 및 내장 SSD에서의 TRIM과 같은 대부분의 기능들이 포함됩니다 (외장 SSD에서도 사용할 수 있습니다).</p>\n<p>이 형식은 기계적 드라이브가 일반적이었던 시절에 만들어졌습니다. 최근에는 APFS로 대체되었는데, 이 형식은 많은 기능과 최적화가 내재되어 있습니다. 이곳에서의 주의할 점은 APFS가 SSD에 최적화되어 있고, 현대 macOS 내장 드라이브의 기본 형식이라는 것입니다.</p>\n<div class=\"content-ad\"></div>\n<p>HowToGeek에 따르면, Apple 생태계에서 외장 드라이브를 전용으로 사용할 계획이 있다면, HFS + 또는 APFS가 가장 신뢰할만한 옵션이라고 합니다. HFS +는 기계식 드라이브와 매우 잘 작동하며, APFS는 SSD 또는 NVMe 드라이브와 같은 플래시 NAND 저장소에도 동일하게 작동합니다.</p>\n<p><img src=\"/assets/img/2024-06-23-APFSorHFSorNTFSorexFATonmyexternaldrive_3.png\" alt=\"image\"></p>\n<p>궁금하다면, 주로 파일 메타데이터 위치 때문입니다. HFS +에서는 메타데이터가 회전 디스크의 시작 부분(외부 테두리)에 저장되지만, APFS는 파일과 동일한 위치에 넣습니다. 기계식 드라이브는 Flash NAND와 비교해서 순차적이 아닌 읽기에서 성능이 저하되는데, 여기서 HFS + 성능이 더 좋으며, 추가 파일이 이 메타데이터의 희소성으로 인해 증가함에 따라 APFS는 악화됩니다.</p>\n<p>APFS는 파일 다루는 방식 때문에 매우 유연합니다. LifeWire에 따르면, 이러한 기능에는 공간 공유, 스냅샷 및 클론과 같은 기능이 있으며, 아마 Flash NAND의 빠른 랜덤 읽기 덕분에 가능한 것입니다.</p>\n<div class=\"content-ad\"></div>\n<p>만약 교차 호환성을 원한다면, APFS 또는 HFS+는 맥 OS에서만 작동하므로 타사 소프트웨어는 다른 환경에서만 작동함을 고려해야 합니다.</p>\n<h1>ext4는 어떠한가요?</h1>\n<p>ext4 형식은 데비안과 우분투에서는 윈도우의 NTFS나 맥 OS의 APFS와 유사합니다. StackOverflow에는 두 형식에 대해 다룬 좋은 글이 있습니다.</p>\n<p>XFS, BTRFS, F2FS 및 ZFS에 대해서도 같은 말을 할 수 있습니다. 리눅스를 사용 중이라면 이미 어떤 파일 시스템을 선택해야 하는지 알고 계실 것입니다. 작은 이동 장치(SD 카드, eMMC, 비슷한 기기)를 위해서는 F2FS나 exFAT를 선택하면 될 것입니다.</p>\n<div class=\"content-ad\"></div>\n<p>어쨌든, Linux는 전혀 다른 세계입니다. 작업 부하에 따라 NAS에는 ZFS, NASA에는 XFS, eMMC 드라이브에는 F2FS, 작업용 워크스테이션에는 BTRFS, 그리고 Ubuntu를 사용하는 엄마 노트북에는 ext4를 선호할 수 있습니다.</p>\n<h1>그럼, 어떤 걸 선택해야 할까요?</h1>\n<p>64GB 플래시 드라이브에 JPEG 형식의 작은 사진과 4K 영상 파일이라는 큰 파일이 많이 있다고 상상해봅시다.</p>\n<ul>\n<li>장치 간 호환성? exFAT</li>\n<li>오래된 장치 간 호환성? FAT32 및 다수의 zip 파일.</li>\n<li>Flash NAND에서의 Apple 생태계? APFS</li>\n<li>기계식 드라이브에서의 Apple 생태계? HFS+</li>\n<li>Windows 생태계? NTFS</li>\n<li>Linux 생태계? Ext4</li>\n<li>저전력 장치용 Linux? F2FS가 선택지일 수 있습니다, exFAT</li>\n<li>서버? ZFS, BTRFS, XFS를 검토해 보세요...</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}