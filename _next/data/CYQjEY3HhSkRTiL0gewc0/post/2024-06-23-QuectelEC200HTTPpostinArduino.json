{"pageProps":{"post":{"title":"Arduino에서 Quectel EC200을 사용해 HTTP POST 요청 보내는 방법","description":"","date":"2024-06-23 17:38","slug":"2024-06-23-QuectelEC200HTTPpostinArduino","content":"\n\n![image](/assets/img/2024-06-23-QuectelEC200HTTPpostinArduino_0.png)\n\nQuectel HTTP 애플리케이션 노트에서는 데이터를 보내는 두 가지 방법을 제공합니다.\n옵션 1. POST 본문에서 포스트 데이터와 함께 요청 헤더를 보냅니다. 따라서 데이터 길이에는 헤더와 포스트 데이터 크기가 모두 포함됩니다.\n옵션 2: HTTPCFG를 사용하여 요청 헤더를 설정하고 QHTTPPOST AT 명령을 사용하여 포스트 데이터만을 보냅니다.\n\n# HTTP POST 요청을 보내는 방법\n\n## 1. HTTP 구성\n\n<div class=\"content-ad\"></div>\n\n1. HTTP context id를 설정하세요: AT+QHTTPCFG=\"contextid\",1\n2. 포스트 URL을 설정하세요: AT+QHTTPCFG=\"url\",\"`URL`\"\nURL은 꼭 프로토콜인 HTTP 또는 HTTPS를 포함해야 합니다. 그렇지 않으면 에러 메시지가 전송됩니다.\n3. 요청 헤더를 설정하세요: AT+QHTTPCFG=\"header\",\"`header`\"\n\n## 2. 포스트 데이터 전송\n\n- 포스트 본문의 데이터 길이를 구하고 AT+QHTTPPOST=`data_length`를 통해 설정하세요.\n\n추가로 입력 시간 초과 및 응답 시간 초과를 설정하는 데 사용할 수 있는 선택적 매개변수로 AT+QHTTPPOST=`data_length`[,`input_time`,`rsptime`]을 사용할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n2. 만약 위 단계에서의 응답이 \"CONNECT\"인 경우, 페이로드를 입력하시면 됩니다.\n\n# 아두이노 예제 코드\n\n```js\n#include <SoftwareSerial.h>\n\n#define MCU_RXD D5 // EC200U_TXD에 연결됨\n#define MCU_TXD D6 // EC200U_RXD에 연결됨\n\nSoftwareSerial quectel_serial(MCU_RXD, MCU_TXD);\n\nString myurl = \"api.example.com/post-endpoint/\"; // 이 예제에서는 프로토콜이 포함되어 있지 않습니다\nString token = \"8434jn3i2sdhsy32uau3tjna\";\nString node_id = \"dev-12345\";\nString user_agent= \"Quectel Modem\";\n\nvoid QUECTEL_POST(String url, String headers[], int header_size, const String &data, int data_length);\n\nvoid setup()\n{ \n  delay(10000); // 모뎀이 네트워크에 등록될 때까지 대기\n\n  Serial.begin(57600);\n  quectel_serial_serial.begin(115200);\n\n  // HTTP 헤더 설정\n  String Quectel_headers[4];\n  Quectel_headers[0] = \"User-Agent\" + user_agent;\n  Quectel_headers[1] = \"Authorization: Token \" + token;   \n  Quectel_headers[2] = \"X-node: \" + node_id;\n  Quectel_headers[3] = \"Content-Type: \" + String(contentType); // 30\n\n  int header_size = sizeof(Quectel_headers) / sizeof(Quectel_headers[0]);\n\n  String data= \"{\\\"sensor_data\\\":[{\\\"data_type\\\":\\\"CO\\\",\\\"value\":\\\"7.80\\\"},{\\\"data_type\\\":\\\"temperature\\\",\\\"value\\\":\\\"32.780\\\"},{\\\"data_type\\\":\\\"humidity\\\",\\\"value\\\":\\\"13.40\\\"}]}\";\n\n  QUECTEL_POST(myurl, Quectel_headers, header_size, data, data.length());\n\n}\n\nvoid loop(){\n// 아무 작업도 수행하지 않음\n}\n\n\nvoid QUECTEL_POST(String url, String headers[], int header_size, const String &data, int data_length)\n{\n   \n    String HTTP_CFG = \"AT+QHTTPCFG=\\\"url\\\",\\\"http://\" + url + \"\\\"\"; // URL 앞에 프로토콜을 설정해야 함\n    Serial.print(\"Quectel URL 설정: \");\n    Serial.println(HTTP_CFG);\n    quectel_serial.println(HTTP_CFG);\n\n    quectel_serial.println(\"AT+QHTTPCFG=\\\"contextid\\\",1\");      // 컨텍스트 ID 설정\n    quectel_serial.println(\"AT+QHTTPCFG=\\\"requestheader\\\",0\");  // POST 본문에 요청 헤더 비활성화\n    quectel_serial.println(\"AT+QHTTPCFG=\\\"responseheader\\\",1\"); // 응답 헤더 사용\n    quectel_serial.println(\"AT+QHTTPCFG=\\\"rspout/auto\\\",1\");    // 자동 응답 및 HTTPREAD \"비활성화\"\n    \n    // 사용자 지정 헤더 설정\n    for (int i = 0; i < header_size; i++)\n    {\n        HTTP_CFG = \"AT+QHTTPCFG=\\\"header\\\",\\\"\" + headers[i] + \"\\\"\";\n        quectel_serial.println(HTTP_CFG);\n    }\n\n    // 데이터 전송\n    HTTP_CFG = \"AT+QHTTPPOST=\" + String(data_length) + \",30,60\";\n    quectel_serial(HTTP_CFG);\n    Serial.print(\"Quectel POST 본문: \");\n    Serial.println(data);\n    quectel_serial(data);\n}\n```\n\n문제가 없다면 20x HTTP 응답 코드를 수신해야 합니다.\n\n<div class=\"content-ad\"></div>\n\n## 참고 자료\n\n- EC200U 및 EG915U 시리즈 HTTP(S) 애플리케이션 노트\n- EC200T-CN AT 명령어 메뉴얼","ogImage":{"url":"/assets/img/2024-06-23-QuectelEC200HTTPpostinArduino_0.png"},"coverImage":"/assets/img/2024-06-23-QuectelEC200HTTPpostinArduino_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-23-QuectelEC200HTTPpostinArduino_0.png\" alt=\"image\"></p>\n<p>Quectel HTTP 애플리케이션 노트에서는 데이터를 보내는 두 가지 방법을 제공합니다.\n옵션 1. POST 본문에서 포스트 데이터와 함께 요청 헤더를 보냅니다. 따라서 데이터 길이에는 헤더와 포스트 데이터 크기가 모두 포함됩니다.\n옵션 2: HTTPCFG를 사용하여 요청 헤더를 설정하고 QHTTPPOST AT 명령을 사용하여 포스트 데이터만을 보냅니다.</p>\n<h1>HTTP POST 요청을 보내는 방법</h1>\n<h2>1. HTTP 구성</h2>\n<div class=\"content-ad\"></div>\n<ol>\n<li>HTTP context id를 설정하세요: AT+QHTTPCFG=\"contextid\",1</li>\n<li>포스트 URL을 설정하세요: AT+QHTTPCFG=\"url\",\"<code>URL</code>\"\nURL은 꼭 프로토콜인 HTTP 또는 HTTPS를 포함해야 합니다. 그렇지 않으면 에러 메시지가 전송됩니다.</li>\n<li>요청 헤더를 설정하세요: AT+QHTTPCFG=\"header\",\"<code>header</code>\"</li>\n</ol>\n<h2>2. 포스트 데이터 전송</h2>\n<ul>\n<li>포스트 본문의 데이터 길이를 구하고 AT+QHTTPPOST=<code>data_length</code>를 통해 설정하세요.</li>\n</ul>\n<p>추가로 입력 시간 초과 및 응답 시간 초과를 설정하는 데 사용할 수 있는 선택적 매개변수로 AT+QHTTPPOST=<code>data_length</code>[,<code>input_time</code>,<code>rsptime</code>]을 사용할 수 있습니다.</p>\n<div class=\"content-ad\"></div>\n<ol start=\"2\">\n<li>만약 위 단계에서의 응답이 \"CONNECT\"인 경우, 페이로드를 입력하시면 됩니다.</li>\n</ol>\n<h1>아두이노 예제 코드</h1>\n<pre><code class=\"hljs language-js\">#include &#x3C;<span class=\"hljs-title class_\">SoftwareSerial</span>.<span class=\"hljs-property\">h</span>>\n\n#define <span class=\"hljs-variable constant_\">MCU_RXD</span> <span class=\"hljs-variable constant_\">D5</span> <span class=\"hljs-comment\">// EC200U_TXD에 연결됨</span>\n#define <span class=\"hljs-variable constant_\">MCU_TXD</span> <span class=\"hljs-variable constant_\">D6</span> <span class=\"hljs-comment\">// EC200U_RXD에 연결됨</span>\n\n<span class=\"hljs-title class_\">SoftwareSerial</span> <span class=\"hljs-title function_\">quectel_serial</span>(<span class=\"hljs-variable constant_\">MCU_RXD</span>, <span class=\"hljs-variable constant_\">MCU_TXD</span>);\n\n<span class=\"hljs-title class_\">String</span> myurl = <span class=\"hljs-string\">\"api.example.com/post-endpoint/\"</span>; <span class=\"hljs-comment\">// 이 예제에서는 프로토콜이 포함되어 있지 않습니다</span>\n<span class=\"hljs-title class_\">String</span> token = <span class=\"hljs-string\">\"8434jn3i2sdhsy32uau3tjna\"</span>;\n<span class=\"hljs-title class_\">String</span> node_id = <span class=\"hljs-string\">\"dev-12345\"</span>;\n<span class=\"hljs-title class_\">String</span> user_agent= <span class=\"hljs-string\">\"Quectel Modem\"</span>;\n\n<span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">QUECTEL_POST</span>(<span class=\"hljs-title class_\">String</span> url, <span class=\"hljs-title class_\">String</span> headers[], int header_size, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">String</span> &#x26;data, int data_length);\n\n<span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\"></span>)\n{ \n  <span class=\"hljs-title function_\">delay</span>(<span class=\"hljs-number\">10000</span>); <span class=\"hljs-comment\">// 모뎀이 네트워크에 등록될 때까지 대기</span>\n\n  <span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">begin</span>(<span class=\"hljs-number\">57600</span>);\n  quectel_serial_serial.<span class=\"hljs-title function_\">begin</span>(<span class=\"hljs-number\">115200</span>);\n\n  <span class=\"hljs-comment\">// HTTP 헤더 설정</span>\n  <span class=\"hljs-title class_\">String</span> <span class=\"hljs-title class_\">Quectel</span>_headers[<span class=\"hljs-number\">4</span>];\n  <span class=\"hljs-title class_\">Quectel</span>_headers[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-string\">\"User-Agent\"</span> + user_agent;\n  <span class=\"hljs-title class_\">Quectel</span>_headers[<span class=\"hljs-number\">1</span>] = <span class=\"hljs-string\">\"Authorization: Token \"</span> + token;   \n  <span class=\"hljs-title class_\">Quectel</span>_headers[<span class=\"hljs-number\">2</span>] = <span class=\"hljs-string\">\"X-node: \"</span> + node_id;\n  <span class=\"hljs-title class_\">Quectel</span>_headers[<span class=\"hljs-number\">3</span>] = <span class=\"hljs-string\">\"Content-Type: \"</span> + <span class=\"hljs-title class_\">String</span>(contentType); <span class=\"hljs-comment\">// 30</span>\n\n  int header_size = <span class=\"hljs-title function_\">sizeof</span>(<span class=\"hljs-title class_\">Quectel</span>_headers) / <span class=\"hljs-title function_\">sizeof</span>(<span class=\"hljs-title class_\">Quectel</span>_headers[<span class=\"hljs-number\">0</span>]);\n\n  <span class=\"hljs-title class_\">String</span> data= <span class=\"hljs-string\">\"{\\\"sensor_data\\\":[{\\\"data_type\\\":\\\"CO\\\",\\\"value\"</span>:\\<span class=\"hljs-string\">\"7.80\\\"},{\\\"data_type\\\":\\\"temperature\\\",\\\"value\\\":\\\"32.780\\\"},{\\\"data_type\\\":\\\"humidity\\\",\\\"value\\\":\\\"13.40\\\"}]}\"</span>;\n\n  <span class=\"hljs-title function_\">QUECTEL_POST</span>(myurl, <span class=\"hljs-title class_\">Quectel</span>_headers, header_size, data, data.<span class=\"hljs-title function_\">length</span>());\n\n}\n\n<span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">loop</span>(<span class=\"hljs-params\"></span>){\n<span class=\"hljs-comment\">// 아무 작업도 수행하지 않음</span>\n}\n\n\n<span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">QUECTEL_POST</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">String</span> url, <span class=\"hljs-built_in\">String</span> headers[], int header_size, <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">String</span> &#x26;data, int data_length</span>)\n{\n   \n    <span class=\"hljs-title class_\">String</span> <span class=\"hljs-variable constant_\">HTTP_CFG</span> = <span class=\"hljs-string\">\"AT+QHTTPCFG=\\\"url\\\",\\\"http://\"</span> + url + <span class=\"hljs-string\">\"\\\"\"</span>; <span class=\"hljs-comment\">// URL 앞에 프로토콜을 설정해야 함</span>\n    <span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">\"Quectel URL 설정: \"</span>);\n    <span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">println</span>(<span class=\"hljs-variable constant_\">HTTP_CFG</span>);\n    quectel_serial.<span class=\"hljs-title function_\">println</span>(<span class=\"hljs-variable constant_\">HTTP_CFG</span>);\n\n    quectel_serial.<span class=\"hljs-title function_\">println</span>(<span class=\"hljs-string\">\"AT+QHTTPCFG=\\\"contextid\\\",1\"</span>);      <span class=\"hljs-comment\">// 컨텍스트 ID 설정</span>\n    quectel_serial.<span class=\"hljs-title function_\">println</span>(<span class=\"hljs-string\">\"AT+QHTTPCFG=\\\"requestheader\\\",0\"</span>);  <span class=\"hljs-comment\">// POST 본문에 요청 헤더 비활성화</span>\n    quectel_serial.<span class=\"hljs-title function_\">println</span>(<span class=\"hljs-string\">\"AT+QHTTPCFG=\\\"responseheader\\\",1\"</span>); <span class=\"hljs-comment\">// 응답 헤더 사용</span>\n    quectel_serial.<span class=\"hljs-title function_\">println</span>(<span class=\"hljs-string\">\"AT+QHTTPCFG=\\\"rspout/auto\\\",1\"</span>);    <span class=\"hljs-comment\">// 자동 응답 및 HTTPREAD \"비활성화\"</span>\n    \n    <span class=\"hljs-comment\">// 사용자 지정 헤더 설정</span>\n    <span class=\"hljs-keyword\">for</span> (int i = <span class=\"hljs-number\">0</span>; i &#x3C; header_size; i++)\n    {\n        <span class=\"hljs-variable constant_\">HTTP_CFG</span> = <span class=\"hljs-string\">\"AT+QHTTPCFG=\\\"header\\\",\\\"\"</span> + headers[i] + <span class=\"hljs-string\">\"\\\"\"</span>;\n        quectel_serial.<span class=\"hljs-title function_\">println</span>(<span class=\"hljs-variable constant_\">HTTP_CFG</span>);\n    }\n\n    <span class=\"hljs-comment\">// 데이터 전송</span>\n    <span class=\"hljs-variable constant_\">HTTP_CFG</span> = <span class=\"hljs-string\">\"AT+QHTTPPOST=\"</span> + <span class=\"hljs-title class_\">String</span>(data_length) + <span class=\"hljs-string\">\",30,60\"</span>;\n    <span class=\"hljs-title function_\">quectel_serial</span>(<span class=\"hljs-variable constant_\">HTTP_CFG</span>);\n    <span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">\"Quectel POST 본문: \"</span>);\n    <span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">println</span>(data);\n    <span class=\"hljs-title function_\">quectel_serial</span>(data);\n}\n</code></pre>\n<p>문제가 없다면 20x HTTP 응답 코드를 수신해야 합니다.</p>\n<div class=\"content-ad\"></div>\n<h2>참고 자료</h2>\n<ul>\n<li>EC200U 및 EG915U 시리즈 HTTP(S) 애플리케이션 노트</li>\n<li>EC200T-CN AT 명령어 메뉴얼</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}