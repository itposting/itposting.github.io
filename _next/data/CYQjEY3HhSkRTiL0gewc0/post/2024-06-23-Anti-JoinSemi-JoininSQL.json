{"pageProps":{"post":{"title":"SQL에서 Anti-Join과 Semi-Join 쉽게 이해하기","description":"","date":"2024-06-23 16:45","slug":"2024-06-23-Anti-JoinSemi-JoininSQL","content":"\n\n## Anti-Join 및 Semi-Join 이해하기 - 예제와 함께\n\n### Anti-Join\n\nAnti-Join은 테이블 A에 있는 행 중 테이블 B에 없는 행을 얻는 경우입니다.\n\n예를 들어, 주문을 한 번도 하지 않은 고객을 식별하려면 Anti-Join을 사용할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n여기서 테이블 A를 고객이고 테이블 B를 주문으로 고려해 봅시다.\n\n```js\nSELECT c.customer_id, c.customer_name\nFROM customers c\nLEFT JOIN orders o\non c.customer_id = o.customer_id\nWHERE o.customer_id IS NULL;\n```\n\n# Semi-Join\n\n세미 조인은 테이블 B에서 조건이 일치하는 경우에만 테이블 A에서 행을 반환합니다.\n\n<div class=\"content-ad\"></div>\n\n예를 들어, 주문을 한 고객만 식별하고 싶다면 이 세미 조인을 활용할 수 있습니다.\n\n```js\nSELECT customer_id\nFROM orders \nWHERE customer_id IN (SELECT customer_id FROM customers);\n```\n\n# 요약\n\n- Anti-Join: 두 번째 테이블에 일치하는 행이 없는 첫 번째 테이블의 행을 검색합니다.\n- Semi-Join: 두 번째 테이블에서 적어도 일치하는 행이 하나 이상 있는 첫 번째 테이블의 행을 검색합니다.\n\n<div class=\"content-ad\"></div>\n\n행복한 학습되세요! 화이팅!\n\n만약 제 글이 도움이 되셨다면, 클랩 버튼을 눌러서 지지를 보여주시고 나중을 위해 글을 저장하는 것을 잊지 마세요.","ogImage":{"url":"/assets/img/2024-06-23-Anti-JoinSemi-JoininSQL_0.png"},"coverImage":"/assets/img/2024-06-23-Anti-JoinSemi-JoininSQL_0.png","tag":["Tech"],"readingTime":1},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h2>Anti-Join 및 Semi-Join 이해하기 - 예제와 함께</h2>\n<h3>Anti-Join</h3>\n<p>Anti-Join은 테이블 A에 있는 행 중 테이블 B에 없는 행을 얻는 경우입니다.</p>\n<p>예를 들어, 주문을 한 번도 하지 않은 고객을 식별하려면 Anti-Join을 사용할 수 있습니다.</p>\n<div class=\"content-ad\"></div>\n<p>여기서 테이블 A를 고객이고 테이블 B를 주문으로 고려해 봅시다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-variable constant_\">SELECT</span> c.<span class=\"hljs-property\">customer_id</span>, c.<span class=\"hljs-property\">customer_name</span>\n<span class=\"hljs-variable constant_\">FROM</span> customers c\n<span class=\"hljs-variable constant_\">LEFT</span> <span class=\"hljs-variable constant_\">JOIN</span> orders o\non c.<span class=\"hljs-property\">customer_id</span> = o.<span class=\"hljs-property\">customer_id</span>\n<span class=\"hljs-variable constant_\">WHERE</span> o.<span class=\"hljs-property\">customer_id</span> <span class=\"hljs-variable constant_\">IS</span> <span class=\"hljs-variable constant_\">NULL</span>;\n</code></pre>\n<h1>Semi-Join</h1>\n<p>세미 조인은 테이블 B에서 조건이 일치하는 경우에만 테이블 A에서 행을 반환합니다.</p>\n<div class=\"content-ad\"></div>\n<p>예를 들어, 주문을 한 고객만 식별하고 싶다면 이 세미 조인을 활용할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-variable constant_\">SELECT</span> customer_id\n<span class=\"hljs-variable constant_\">FROM</span> orders \n<span class=\"hljs-variable constant_\">WHERE</span> customer_id <span class=\"hljs-variable constant_\">IN</span> (<span class=\"hljs-variable constant_\">SELECT</span> customer_id <span class=\"hljs-variable constant_\">FROM</span> customers);\n</code></pre>\n<h1>요약</h1>\n<ul>\n<li>Anti-Join: 두 번째 테이블에 일치하는 행이 없는 첫 번째 테이블의 행을 검색합니다.</li>\n<li>Semi-Join: 두 번째 테이블에서 적어도 일치하는 행이 하나 이상 있는 첫 번째 테이블의 행을 검색합니다.</li>\n</ul>\n<div class=\"content-ad\"></div>\n<p>행복한 학습되세요! 화이팅!</p>\n<p>만약 제 글이 도움이 되셨다면, 클랩 버튼을 눌러서 지지를 보여주시고 나중을 위해 글을 저장하는 것을 잊지 마세요.</p>\n</body>\n</html>\n"},"__N_SSG":true}