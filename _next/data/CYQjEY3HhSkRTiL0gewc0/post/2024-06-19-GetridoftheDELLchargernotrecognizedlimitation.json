{"pageProps":{"post":{"title":"디엘Dell 충전기 인식 제한을 해결하는 방법","description":"","date":"2024-06-19 17:51","slug":"2024-06-19-GetridoftheDELLchargernotrecognizedlimitation","content":"\n\n# 문제점\n\n내가 아주 만족스러운 DELL XPS13 9343 (2014) 노트북을 사용하고 있다. 모든 것이 잘 작동했지만 작년에 충전기가 이상하게 작동하기 시작했다.\n\n컴퓨터는 연결돼 있을 때 충전기 에너지를 사용하고 있었지만 배터리는 충전되지 않았다. \"휴대용\" 컴퓨터로 항상 연결돼 있어야 하는 것이 꽤 귀찮았다.\n\n인터넷에서 빠른 조사를 통해 오랫동안 이미 알려진 문제임을 알게 되었다 ([여기](링크), [여기](링크), [그리고 여기](링크)). 충전기에는 노트북에게 어떤 충전기인지 알려주는 작은 식별 칩이 들어있는데, 이 정보가 없으면 노트북은 에너지를 사용할 수는 있지만 배터리를 충전하지 않는다. 처음에는 안전장치처럼 보였지만, 이 칩이 큰 고장점이라는 문제가 있다.\n\n<div class=\"content-ad\"></div>\n\n- 칩이 작동을 멈출 수 있습니다.\n- 데이터를 전송하는 3번째 케이블은 더 얇고 뒤쪽으로 왔다갔다하면서 일찍 고장이 날 수도 있습니다. (제 경우)\n- 이 3번째 케이블은 칩을 손상시킬 수 있는 잡음을 잡을 수 있는 안테나처럼 작동합니다.\n\n모든 경우에 식별이 실패할 수 있지만 충전기는 여전히 작동하고 안전합니다.\n\n배터리를 강제로 충전시킬 수 있는 옵션과 같은 간단한 해결책은 없습니다. 기본적인 해결 방법은 DELL에서 새 충전기를 구입하는 것입니다. 물론, 그 가격이 상당히 높습니다.\n\n완전히 작동하는 충전기를 대체하기 위해 돈을 내야 하는 것에 분하게 생각하지만 그것이 무척 반친환경적이라고 생각했습니다. 나는 새로운 것을 사지 않고 해결책을 찾고 싶다고 결심했습니다. 다행히 일부 해커들이 길을 열어 놓았습니다.\n\n<div class=\"content-ad\"></div>\n\n# 컴퓨터 내부 칩을 이동하여 모든 충전기가 인식되게 하세요\n\n## 소개\n\n이 오래된 블로그 게시물은 한 가지 굉장한 속임수에 관련되어 있습니다: 충전기에서 작동하는 칩을 꺼내 컴퓨터에 직접 넣는 것이죠. 충전기가 인식되지 않는 문제를 결코 경험하지 않을 수 있는 그 아이디어를 사랑합니다.\n\n그렇다면 또 다른 게시물을 왜 작성하느냐고요?! 여기서 공유하는 일부 포스트는 상당히 오래되었고 일부는 이미 인터넷 보관소를 통해서만 사용할 수 있습니다. 그래서 저는 이 새로운 기사를 작성하여 그 지식을 유지하고자 합니다. 그리고 이를 더 많은 사람들이 공유하고 실행하도록 하는 데 다른 이들을 격려할 것이라고 기대합니다.\n\n<div class=\"content-ad\"></div>\n\n## 계획\n\n해결책은 다음과 같은 두 단계로 구성됩니다:\n\n- 충전기에서 칩 추출하기\n- 컴퓨터에 칩 넣기\n\n이 과정 사이에 칩이 여전히 작동하는지 테스트하는 선택적인 단계가 있습니다.\n\n<div class=\"content-ad\"></div>\n\n## 재료\n\n주변에서 쉽게 빌릴 수 있는 기본 재료만 필요해요:\n\n- 1 저항기 (또는 충전기에 있는 것을 재사용할 수도 있어요)\n- 1 다이오드 (또는 충전기에 있는 것을 재사용할 수도 있어요)\n- 납땜용 연로\n- 노트북을 열기 위한 스몰사이즈의 스크루드라이버 몇 개\n- 아두이노 (선택 사항인 테스트 용도로만 사용해요)\n\n## 안전 주의사항\n\n<div class=\"content-ad\"></div>\n\n위험이 발생하지 않습니다. 유효한 충전기를 계속 사용한다면 안전합니다. 유효하지 않은 충전기를 사용하면 컴퓨터 하드웨어, 배터리 또는 본인에게까지 손상을 입힐 수 있습니다.\n\n유효한 충전기의 특징:\n\n- 원래 충전기와 동일한 전압\n- 적어도 동일한 출력 (또는 1번을 확인한 경우 와트수). 컴퓨터는 더 많은 전력을 사용하지 않으므로 안전합니다. 적은 전력을 공급받으면 컴퓨터가 정상적으로 작동하지 않을 수 있고 하드웨어가 손상될 수 있습니다.\n\n# 충전기에서 칩을 제거하세요\n\n<div class=\"content-ad\"></div>\n\n## 소재\n\n- 스크류 드라이버\n- 망치\n- 솔더링 아이언\n\n## 충전기 케이스 열기\n\n그 형태에 따라 많은 차이가 있지만 대부분의 경우 케이스에 몇 가지 흔적을 남기게 될 때 굉장히 귀찮은 단계입니다. 그 결과로 열었다는 사실을 보이고 싶지 않다면 권하지 않겠습니다. 인터넷에는 많은 튜토리얼이 있습니다. 저는 다양한 스크류 드라이버, 때로는 망치, 그리고 내 손으로 이 작업을 수행합니다. 항상 케이스를 훼손하지 않은 채로 열었습니다.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_0.png\" />\n\n## 칩 찾기\n\n열고 나면, 칩을 찾아야 해요. 랩탑에 연결된 쪽의 2개 케이블에만 2개 핀으로 연결된 칩을 찾아야 해요:\n\n- 데이터 (3번째) 케이블\n- 그라운드 (검정)\n\n<div class=\"content-ad\"></div>\n\n내 충전기의 칩은 DS5201입니다. 이 보드에는 이렇게 연결되어 있어요:\n\n![Chip Connection](/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_1.png)\n\n데이터에서 GND로 전류가 흘러가게 하기 위해 2 핀 사이에 다이오드가 있습니다. 아마도 GND가 0V가 아닌 경우를 대비해 칩을 우회하는 보호장치인 것 같아요.\n\n칩을 보호하는 저항도 있어요. 여기서는 330옴입니다. 저는 저항 자체의 코드로 값이나 멀티미터로 값을 읽는 것을 추천해요.\n\n<div class=\"content-ad\"></div>\n\n## 스키마\n\n![이미지](/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_2.png)\n\n핀이 어떤 것에 연결되어 있는지 기억했다면, DS2501을 이제 솔더로 제거할 수 있습니다.\n\n![이미지](/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_3.png)\n\n<div class=\"content-ad\"></div>\n\n# 칩 확인 (선택 사항)\n\n이 단계는 칩이 작동하는지 확실하게 확인하려는 경우 유용합니다. 확인하려면 데이터 케이블이 고장났는지만 확인합니다. 아니면 전자 기기와 놀고 싶은 경우에도 사용할 수 있어요 =D.\n\n## 재료\n\n- 아두이노\n- 1 다이오드 (또는 충전기에 있는 것을 재사용할 수 있습니다)\n- 1 저항 (또는 충전기에 있는 것을 재사용할 수 있습니다)\n- 1 저항 5K\n- 1 브레드보드\n- 듀폰 케이블\n- DS5201 (칩)\n\n<div class=\"content-ad\"></div>\n\n## DS2501 칩\n\nDS2501은 OneWire 프로토콜과 통신합니다. Wikipedia, 해커 블로그 또는 Arduino OneWire 라이브러리 저장소에서 정보를 찾을 수 있습니다.\n\n데이터 시트는 [여기](datasheet_link_here)에서 확인할 수 있습니다. 자세한 사양이 필요한 경우 유용합니다.\n\n## 스키마\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_4.png\" />\n\n## 코드\n\n아두이노를 열고 아두이노용 OneWire 라이브러리에서 예제 코드를 복사하세요. 이 예제만으로도 충분합니다. 다만 두 가지 팁이 있어요:\n\n- 예제에서 사용된 올바른 핀에 칩을 연결했는지 확인하세요.\n- “Serial.print(data[i]);”에서 16진수 값 대신 문자를 출력하려면 63번째 줄을 “Serial.print((char)data[i]);”로 변경할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n코드를 실행하기 전에 \"OneWire\" 라이브러리를 다운로드해야 합니다.\n\n- \"도구\"를 열고 \"라이브러리 관리\"를 클릭하세요.\n- \"OneWire\"를 검색하세요.\n- \"Paul Stoffregen\"이라는 사람이 만든 \"OneWire\" 라이브러리를 설치하세요.\n\n재생 버튼을 클릭하고, \"D E L L 0 0 A C 0 9 0 1 9 5 0 4 6 C N 0 R F 6 7 3 7\"과 같은 내용이 표시되어야 합니다.\n\n## 데이터\n\n<div class=\"content-ad\"></div>\n\n이 주석을 기반으로 하면 다음을 의미합니다:\n\n- DELL: 충전기 브랜드\n- 00: 알 수 없음\n- AC: 교류로부터\n- 090: 와트 수\n- 1950: 19.5V\n- C N 0 R F 6 7 3 7…: 충전기 일련 번호\n\n# 랩톱에 칩을 넣으세요\n\n랩톱을 열어보세요. 자신과 재료를 위해 안전을 우선으로 생각해 배터리(커넥터)를 뽑는 것을 권장합니다. 전원 입력을 찾아 마더보드에 연결된 케이블을 분리하세요.\n\n<div class=\"content-ad\"></div>\n\n\n![Connector](/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_5.png)\n\n저는 납땜 과정을 간단하게 하기 위해 커넥터를 나사로 풀었습니다. 핀들은 노란색 투명 재료로 밀봉되어 있었어요. 이것을 부드럽게 플라이어로 조심스럽게 제거해야 했습니다. 부드럽게 말씀드리자면 밀봉된 케이블을 손상시키지 않고 이미 납땜된 것도 깨지지 않게 하려는 거예요.\n\n![Chip Components](/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_6.png)\n\n칩을 준비할 때, 다이오드와 저항을 납땜해야 합니다. 이를 위해 노트북 충전기에 있던 것처럼. 다이오드는 최대한 작은 것을 사용하는 것을 권장합니다. 다시 노트북을 닫는 작업을 간단하게 하기 위해서에요. 저는 상당히 큰 다이오드밖에 없었는데, 그럼에도 맞았지만 과정을 간단하게하지는 못했어요. -_-”\n\n\n<div class=\"content-ad\"></div>\n\n아래과 같이 표 태그를 Markdown 형식으로 변경해 주세요.\n\n\n<img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_7.png\" />\n\n마지막으로, 노트북 내부 구성 요소와 연결되지 않도록 모든 전선을 절연해주세요. 일부 히트 수축 튜브와 절연 테이프를 사용했어요.\n\n<img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_8.png\" />\n\n취소할 수 있는 해결책을 위해:\n\n\n<div class=\"content-ad\"></div>\n\n- 커넥터에있는 GND 핀을 GND에 직접 납땜하십시오. 마더보드로 들어가는 GND와 나란히 배치합니다.\n- 마더보드에서 전원 커넥터로 오는 데이터 케이블(하얀색)을 분리하십시오. 이를 칩의 데이터 핀에 납땜하십시오.\n\n노트북을 닫을 여유있게 칩을 배치하십시오. 핀을 너무 많이 굽히고 싶지 않았기 때문에 케이스와 WiFi 모듈 사이에 두었습니다. 테이프와 큰 다이오드 때문에 공간이 제한되었지만 맞았습니다. 케이스를 다시 닫은 후 납땜이 충분히 강하게 되어 있는지 주의깊게 확인하십시오.\n\n<img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_9.png\" />\n\n데이터 쪽의 납이 너무 약해서 처음에 하나 떨어진 것처럼 두 번의 작업을 해야했습니다. 정말 작고 섬세한 부품에 대한 납땜 전문가는 아니기 때문에요 ^^\n\n<div class=\"content-ad\"></div>\n\n테이블 태그를 마크다운 형식으로 변환하세요.","ogImage":{"url":"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_0.png"},"coverImage":"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_0.png","tag":["Tech"],"readingTime":6},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h1>문제점</h1>\n<p>내가 아주 만족스러운 DELL XPS13 9343 (2014) 노트북을 사용하고 있다. 모든 것이 잘 작동했지만 작년에 충전기가 이상하게 작동하기 시작했다.</p>\n<p>컴퓨터는 연결돼 있을 때 충전기 에너지를 사용하고 있었지만 배터리는 충전되지 않았다. \"휴대용\" 컴퓨터로 항상 연결돼 있어야 하는 것이 꽤 귀찮았다.</p>\n<p>인터넷에서 빠른 조사를 통해 오랫동안 이미 알려진 문제임을 알게 되었다 (<a href=\"%EB%A7%81%ED%81%AC\">여기</a>, <a href=\"%EB%A7%81%ED%81%AC\">여기</a>, <a href=\"%EB%A7%81%ED%81%AC\">그리고 여기</a>). 충전기에는 노트북에게 어떤 충전기인지 알려주는 작은 식별 칩이 들어있는데, 이 정보가 없으면 노트북은 에너지를 사용할 수는 있지만 배터리를 충전하지 않는다. 처음에는 안전장치처럼 보였지만, 이 칩이 큰 고장점이라는 문제가 있다.</p>\n<div class=\"content-ad\"></div>\n<ul>\n<li>칩이 작동을 멈출 수 있습니다.</li>\n<li>데이터를 전송하는 3번째 케이블은 더 얇고 뒤쪽으로 왔다갔다하면서 일찍 고장이 날 수도 있습니다. (제 경우)</li>\n<li>이 3번째 케이블은 칩을 손상시킬 수 있는 잡음을 잡을 수 있는 안테나처럼 작동합니다.</li>\n</ul>\n<p>모든 경우에 식별이 실패할 수 있지만 충전기는 여전히 작동하고 안전합니다.</p>\n<p>배터리를 강제로 충전시킬 수 있는 옵션과 같은 간단한 해결책은 없습니다. 기본적인 해결 방법은 DELL에서 새 충전기를 구입하는 것입니다. 물론, 그 가격이 상당히 높습니다.</p>\n<p>완전히 작동하는 충전기를 대체하기 위해 돈을 내야 하는 것에 분하게 생각하지만 그것이 무척 반친환경적이라고 생각했습니다. 나는 새로운 것을 사지 않고 해결책을 찾고 싶다고 결심했습니다. 다행히 일부 해커들이 길을 열어 놓았습니다.</p>\n<div class=\"content-ad\"></div>\n<h1>컴퓨터 내부 칩을 이동하여 모든 충전기가 인식되게 하세요</h1>\n<h2>소개</h2>\n<p>이 오래된 블로그 게시물은 한 가지 굉장한 속임수에 관련되어 있습니다: 충전기에서 작동하는 칩을 꺼내 컴퓨터에 직접 넣는 것이죠. 충전기가 인식되지 않는 문제를 결코 경험하지 않을 수 있는 그 아이디어를 사랑합니다.</p>\n<p>그렇다면 또 다른 게시물을 왜 작성하느냐고요?! 여기서 공유하는 일부 포스트는 상당히 오래되었고 일부는 이미 인터넷 보관소를 통해서만 사용할 수 있습니다. 그래서 저는 이 새로운 기사를 작성하여 그 지식을 유지하고자 합니다. 그리고 이를 더 많은 사람들이 공유하고 실행하도록 하는 데 다른 이들을 격려할 것이라고 기대합니다.</p>\n<div class=\"content-ad\"></div>\n<h2>계획</h2>\n<p>해결책은 다음과 같은 두 단계로 구성됩니다:</p>\n<ul>\n<li>충전기에서 칩 추출하기</li>\n<li>컴퓨터에 칩 넣기</li>\n</ul>\n<p>이 과정 사이에 칩이 여전히 작동하는지 테스트하는 선택적인 단계가 있습니다.</p>\n<div class=\"content-ad\"></div>\n<h2>재료</h2>\n<p>주변에서 쉽게 빌릴 수 있는 기본 재료만 필요해요:</p>\n<ul>\n<li>1 저항기 (또는 충전기에 있는 것을 재사용할 수도 있어요)</li>\n<li>1 다이오드 (또는 충전기에 있는 것을 재사용할 수도 있어요)</li>\n<li>납땜용 연로</li>\n<li>노트북을 열기 위한 스몰사이즈의 스크루드라이버 몇 개</li>\n<li>아두이노 (선택 사항인 테스트 용도로만 사용해요)</li>\n</ul>\n<h2>안전 주의사항</h2>\n<div class=\"content-ad\"></div>\n<p>위험이 발생하지 않습니다. 유효한 충전기를 계속 사용한다면 안전합니다. 유효하지 않은 충전기를 사용하면 컴퓨터 하드웨어, 배터리 또는 본인에게까지 손상을 입힐 수 있습니다.</p>\n<p>유효한 충전기의 특징:</p>\n<ul>\n<li>원래 충전기와 동일한 전압</li>\n<li>적어도 동일한 출력 (또는 1번을 확인한 경우 와트수). 컴퓨터는 더 많은 전력을 사용하지 않으므로 안전합니다. 적은 전력을 공급받으면 컴퓨터가 정상적으로 작동하지 않을 수 있고 하드웨어가 손상될 수 있습니다.</li>\n</ul>\n<h1>충전기에서 칩을 제거하세요</h1>\n<div class=\"content-ad\"></div>\n<h2>소재</h2>\n<ul>\n<li>스크류 드라이버</li>\n<li>망치</li>\n<li>솔더링 아이언</li>\n</ul>\n<h2>충전기 케이스 열기</h2>\n<p>그 형태에 따라 많은 차이가 있지만 대부분의 경우 케이스에 몇 가지 흔적을 남기게 될 때 굉장히 귀찮은 단계입니다. 그 결과로 열었다는 사실을 보이고 싶지 않다면 권하지 않겠습니다. 인터넷에는 많은 튜토리얼이 있습니다. 저는 다양한 스크류 드라이버, 때로는 망치, 그리고 내 손으로 이 작업을 수행합니다. 항상 케이스를 훼손하지 않은 채로 열었습니다.</p>\n<div class=\"content-ad\"></div>\n<img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_0.png\">\n<h2>칩 찾기</h2>\n<p>열고 나면, 칩을 찾아야 해요. 랩탑에 연결된 쪽의 2개 케이블에만 2개 핀으로 연결된 칩을 찾아야 해요:</p>\n<ul>\n<li>데이터 (3번째) 케이블</li>\n<li>그라운드 (검정)</li>\n</ul>\n<div class=\"content-ad\"></div>\n<p>내 충전기의 칩은 DS5201입니다. 이 보드에는 이렇게 연결되어 있어요:</p>\n<p><img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_1.png\" alt=\"Chip Connection\"></p>\n<p>데이터에서 GND로 전류가 흘러가게 하기 위해 2 핀 사이에 다이오드가 있습니다. 아마도 GND가 0V가 아닌 경우를 대비해 칩을 우회하는 보호장치인 것 같아요.</p>\n<p>칩을 보호하는 저항도 있어요. 여기서는 330옴입니다. 저는 저항 자체의 코드로 값이나 멀티미터로 값을 읽는 것을 추천해요.</p>\n<div class=\"content-ad\"></div>\n<h2>스키마</h2>\n<p><img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_2.png\" alt=\"이미지\"></p>\n<p>핀이 어떤 것에 연결되어 있는지 기억했다면, DS2501을 이제 솔더로 제거할 수 있습니다.</p>\n<p><img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_3.png\" alt=\"이미지\"></p>\n<div class=\"content-ad\"></div>\n<h1>칩 확인 (선택 사항)</h1>\n<p>이 단계는 칩이 작동하는지 확실하게 확인하려는 경우 유용합니다. 확인하려면 데이터 케이블이 고장났는지만 확인합니다. 아니면 전자 기기와 놀고 싶은 경우에도 사용할 수 있어요 =D.</p>\n<h2>재료</h2>\n<ul>\n<li>아두이노</li>\n<li>1 다이오드 (또는 충전기에 있는 것을 재사용할 수 있습니다)</li>\n<li>1 저항 (또는 충전기에 있는 것을 재사용할 수 있습니다)</li>\n<li>1 저항 5K</li>\n<li>1 브레드보드</li>\n<li>듀폰 케이블</li>\n<li>DS5201 (칩)</li>\n</ul>\n<div class=\"content-ad\"></div>\n<h2>DS2501 칩</h2>\n<p>DS2501은 OneWire 프로토콜과 통신합니다. Wikipedia, 해커 블로그 또는 Arduino OneWire 라이브러리 저장소에서 정보를 찾을 수 있습니다.</p>\n<p>데이터 시트는 <a href=\"datasheet_link_here\">여기</a>에서 확인할 수 있습니다. 자세한 사양이 필요한 경우 유용합니다.</p>\n<h2>스키마</h2>\n<div class=\"content-ad\"></div>\n<img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_4.png\">\n<h2>코드</h2>\n<p>아두이노를 열고 아두이노용 OneWire 라이브러리에서 예제 코드를 복사하세요. 이 예제만으로도 충분합니다. 다만 두 가지 팁이 있어요:</p>\n<ul>\n<li>예제에서 사용된 올바른 핀에 칩을 연결했는지 확인하세요.</li>\n<li>“Serial.print(data[i]);”에서 16진수 값 대신 문자를 출력하려면 63번째 줄을 “Serial.print((char)data[i]);”로 변경할 수 있습니다.</li>\n</ul>\n<div class=\"content-ad\"></div>\n<p>코드를 실행하기 전에 \"OneWire\" 라이브러리를 다운로드해야 합니다.</p>\n<ul>\n<li>\"도구\"를 열고 \"라이브러리 관리\"를 클릭하세요.</li>\n<li>\"OneWire\"를 검색하세요.</li>\n<li>\"Paul Stoffregen\"이라는 사람이 만든 \"OneWire\" 라이브러리를 설치하세요.</li>\n</ul>\n<p>재생 버튼을 클릭하고, \"D E L L 0 0 A C 0 9 0 1 9 5 0 4 6 C N 0 R F 6 7 3 7\"과 같은 내용이 표시되어야 합니다.</p>\n<h2>데이터</h2>\n<div class=\"content-ad\"></div>\n<p>이 주석을 기반으로 하면 다음을 의미합니다:</p>\n<ul>\n<li>DELL: 충전기 브랜드</li>\n<li>00: 알 수 없음</li>\n<li>AC: 교류로부터</li>\n<li>090: 와트 수</li>\n<li>1950: 19.5V</li>\n<li>C N 0 R F 6 7 3 7…: 충전기 일련 번호</li>\n</ul>\n<h1>랩톱에 칩을 넣으세요</h1>\n<p>랩톱을 열어보세요. 자신과 재료를 위해 안전을 우선으로 생각해 배터리(커넥터)를 뽑는 것을 권장합니다. 전원 입력을 찾아 마더보드에 연결된 케이블을 분리하세요.</p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_5.png\" alt=\"Connector\"></p>\n<p>저는 납땜 과정을 간단하게 하기 위해 커넥터를 나사로 풀었습니다. 핀들은 노란색 투명 재료로 밀봉되어 있었어요. 이것을 부드럽게 플라이어로 조심스럽게 제거해야 했습니다. 부드럽게 말씀드리자면 밀봉된 케이블을 손상시키지 않고 이미 납땜된 것도 깨지지 않게 하려는 거예요.</p>\n<p><img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_6.png\" alt=\"Chip Components\"></p>\n<p>칩을 준비할 때, 다이오드와 저항을 납땜해야 합니다. 이를 위해 노트북 충전기에 있던 것처럼. 다이오드는 최대한 작은 것을 사용하는 것을 권장합니다. 다시 노트북을 닫는 작업을 간단하게 하기 위해서에요. 저는 상당히 큰 다이오드밖에 없었는데, 그럼에도 맞았지만 과정을 간단하게하지는 못했어요. -_-”</p>\n<div class=\"content-ad\"></div>\n<p>아래과 같이 표 태그를 Markdown 형식으로 변경해 주세요.</p>\n<img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_7.png\">\n<p>마지막으로, 노트북 내부 구성 요소와 연결되지 않도록 모든 전선을 절연해주세요. 일부 히트 수축 튜브와 절연 테이프를 사용했어요.</p>\n<img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_8.png\">\n<p>취소할 수 있는 해결책을 위해:</p>\n<div class=\"content-ad\"></div>\n<ul>\n<li>커넥터에있는 GND 핀을 GND에 직접 납땜하십시오. 마더보드로 들어가는 GND와 나란히 배치합니다.</li>\n<li>마더보드에서 전원 커넥터로 오는 데이터 케이블(하얀색)을 분리하십시오. 이를 칩의 데이터 핀에 납땜하십시오.</li>\n</ul>\n<p>노트북을 닫을 여유있게 칩을 배치하십시오. 핀을 너무 많이 굽히고 싶지 않았기 때문에 케이스와 WiFi 모듈 사이에 두었습니다. 테이프와 큰 다이오드 때문에 공간이 제한되었지만 맞았습니다. 케이스를 다시 닫은 후 납땜이 충분히 강하게 되어 있는지 주의깊게 확인하십시오.</p>\n<img src=\"/assets/img/2024-06-19-GetridoftheDELLchargernotrecognizedlimitation_9.png\">\n<p>데이터 쪽의 납이 너무 약해서 처음에 하나 떨어진 것처럼 두 번의 작업을 해야했습니다. 정말 작고 섬세한 부품에 대한 납땜 전문가는 아니기 때문에요 ^^</p>\n<div class=\"content-ad\"></div>\n<p>테이블 태그를 마크다운 형식으로 변환하세요.</p>\n</body>\n</html>\n"},"__N_SSG":true}