{"pageProps":{"posts":[{"title":"리눅스 도구 Sed 40 기본 명령어 입문","description":"","date":"2024-06-27 18:59","slug":"2024-06-27-LinuxToolsSed40CommandsIntro","content":"\n\n이 노트 세트에서는 다양한 Sed 명령에 대해 논의를 시작하겠습니다. 그 명령들이 많기 때문에 명령에 대한 논의를 몇 개의 다른 게시물로 나눌 것입니다. 이 게시물에는 다음 내용이 포함됩니다:\n\n- Sed 명령 구문\n- Sed 스크립트 및 실행 방법\n- 명령 대상 지정, 구분자 및 그룹화\n\n명령 구문\n\n모든 다른 프로그래밍 언어와 마찬가지로 Sed에는 구문이 있습니다.\n\n<div class=\"content-ad\"></div>\n\n설명서에 따르면 Sed 명령의 구문은 다음과 같습니다:\n\n[주소]X[명령 옵션]\n\nX는 한 글자 명령입니다. 모든 Sed 명령은 한 글자로만 구성됩니다.\n\n[주소]는 명령 또는 명령 그룹 앞에 나오는 선택적 조건입니다. [주소]는 숫자, 정규 표현식 또는 이전에 설명한 둘 중 하나의 범위일 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n[command options]은 명령어 X를 제어하는 옵션입니다.\n\nSed 스크립트\n\n저에게 Sed 스크립트는 단순히 프로그래머가 설정한 순서대로 실행되는 하나 이상의 Sed 명령어 목록입니다. Sed는 호출될 때 하나 이상의 스크립트를 실행할 수 있습니다.\n\nSed 스크립트는 명령줄에 직접 제공하거나 하나 이상의 파일에 포함하여 Sed에 제공할 수 있습니다. 명령줄에서는 여러 스크립트를 -e 스크립트 또는 --expression=스크립트 명령줄 옵션으로 구분합니다. Sed는 -f 스크립트 | --file=스크립트 명령줄 옵션을 사용하여 파일에서 스크립트를 읽을 수도 있습니다.\n\n<div class=\"content-ad\"></div>\n\n한 행에 여러 명령을 사용하려면 스크립트 내에서 ; 문자를 사용하여 구분합니다. 스크립트가 파일에 저장된 경우 \\n도 명령 구분자로 작동합니다.\n\n간단한 예제 몇 가지를 보여드리겠습니다:\n\n```js\n$ ## A string\n$ declare s=\"L1\\nL2\\nL3\\n\"\n$ ## Here Sed executes multiple Sed commands.  A\n$ ## single script is entered on the command line.\n$ ## Since only 1 script is present, there isn't\n$ ## a need for the -e option.\n$ ## The script prints each line of the string\n$ ## 2 times.  The commands are separated\n$ ## with a ';' character.\n$ printf \"${s}\" | sed -n \"/L1/p; /L2/p; /L3/p\"\nL1\nL2\nL3\n$ ## You can also enter 1 or more commands \n$ ## as separate scripts using the -e option\n$ printf \"${s}\" | sed -n -e \"/L1/p\" -e \"/L2/p; /L3/p\"\nL1\nL2\nL3 \n```\n\nSed 스크립트가 들어 있는 파일도 만들 수 있습니다:\n\n<div class=\"content-ad\"></div>\n\n```js\n# 이것은 demo.sed라는 파일에 저장된 Sed 스크립트입니다.\n# # 부호는 주석의 시작을 나타냅니다.\n# 여기에 명령어가 있습니다.\n/L1/p\n/L2/p\n/L3/p\n# demo.sed의 끝\n```\n\n다음과 같이 명령 줄에서 호출할 수 있습니다.\n\n```js\n$ printf \"${s}\" | sed -nEf demo.sed\nL1\nL2\nL3\n```\n\n실행 가능한 Sed 스크립트 실행하기\n\n\n<div class=\"content-ad\"></div>\n\n표 태그를 Markdown 형식으로 변경할 수 있어요.\n\n```js\n#!/bin/sed -nEf\n##################\n# Sed 스크립트 파일: demo.sed\n# -n - 자동 출력 비활성화\n# -E - 확장 정규 표현식 사용 가능\n# -f - \n/L1/p\n/L2/p; /L3/p\n/L3/ { s/(.*)/\\1\\nThat's All Folks!!!/; p}\n### demo.sed 끝\n```\n\n아래와 같이 파일 내에 저장된 Sed 스크립트를 작성하고 실행할 수 있어요:\n\n```js\n$ ## 실행 가능하도록 변경\n$ chmod 755 ./demo.sed\n$ ## 문자열 선언\n$ declare s=\"L1\\nL2\\nL3\\n\"\n$ ## 실행\n$ printf \"${s}\" | ./demo.sed\nL1\nL2\nL3\nThat's All Folks!!!!\n$ ## 파일에 텍스트 저장\n$ printf \"${s}\" > ./f1.txt\n$ ## 이후 처리 가능\n$ cat ./f1.txt | ./demo.sed\nL1\nL2\nL3\nThat's All Folks!!!!\n$ ## 또는\n$ ./demo.sed ./f1.txt\nL1\nL2\nL3\nThat's All Folks!!!!\n$ ## 정말 그게 다에요\n```\n\n<div class=\"content-ad\"></div>\n\n조건문과 주소 지정\n\n만약 [주소]가 없다면, 명령 또는 명령 그룹이 무조건 실행됩니다. 만약 [주소]가 존재한다면, 해당 조건이 명령을 실행하기 위해 충족되어야 합니다. 조건은 숫자 주소나 정규 표현식으로 구성됩니다. 범위 및 기타 표현식도 포함될 수 있으며, 다른 곳에서 논의된 내용일 수 있습니다. 가끔 여기저기 \"not\"을 사용하기도 합니다.\n\n명령 그룹화\n\n다음 명명 방식을 사용하여 명령을 그룹화할 수 있습니다:\n\n<div class=\"content-ad\"></div>\n\n**address** ' **address1** X1; **address2** X2; ... **addressn** Xn '\n\n들어 가 있는 ''문자는 그룹을 구분하고, [address]는 전체 그룹을 선택합니다. 그룹은 다음과 같이 중첩될 수도 있습니다:\n\n**address_outer**' **address_inner**' **addr1**X1; **addr2**X2 '; **addr3**X3 '\n\n이렇게 함으로써 if-elseif-else 유형의 구조가 포함된 Sed 스크립트를 작성할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n유용한 명령줄 옵션과 별명\n\n```js\n$ ## -n|--silent|--quite - 자동 인쇄 비활성화\n$ ## -E|-r|--regexp-extended - 확장 정규 표현식 활성화\n$ ## 일반적으로 다음과 같은 별명을 사용합니다\n$ alias sed='sed -E'\n$ alias sedn='sed -E -n'\n```\n\n다음 자료의 예제를 이해하는 데 충분한 정보입니다.","ogImage":{"url":"/assets/img/2024-06-27-LinuxToolsSed40CommandsIntro_0.png"},"coverImage":"/assets/img/2024-06-27-LinuxToolsSed40CommandsIntro_0.png","tag":["Tech"],"readingTime":4},{"title":"Photoshop 및 InDesign 대체 프로그램 TOP 3 알아보기","description":"","date":"2024-06-27 18:58","slug":"2024-06-27-MyThreeFavoriteAlternativestoPhotoshopandInDesign","content":"\n\n![My Three Favorite Alternatives to Photoshop and InDesign](/assets/img/2024-06-27-MyThreeFavoriteAlternativestoPhotoshopandInDesign_0.png)\n\n가끔은 가벼운 사진 편집과 디자인을 해야 할 때가 있어요. 때로는 기자들을 위해 사용하며, 블로그 글을 작성하고 그에 맞는 텍스트 카드를 만들고 싶을 때가 있어요. 다른 때에는 제가 연주하는 밴드를 위해 공유 가능한 공연 카드를 만드는 경우가 있어요.\n\n여러 해 동안 Adobe 제품을 사용해왔어요. 90년대 후반에 한 번 컨퍼런스에 참가했을 때 고마운 선물로 Photoshop Elements의 무료 복사본이 든 선물 가방을 받았었죠! 그 이후로 계속해서 해당 제품을 사용해왔지만, 언젠가는 Windows Vista에서 작동하지 않게 되어 버렸죠. 그 이후로 수년 동안 Adobe 제품인 Photoshop이나 InDesign을 구독해보려고 생각해보기도 했지만, 그 가격표에 얼굴이 창백해졌어요. 연간 수백 달러가 되는 그 가격표에는 황당해지기 일쑤예요. 필요한 빈도가 그리 높지 않기 때문에, 필요한 능력보다 훨씬 많은 기능을 지불하고 있는 느낌이 들어요. 게다가 제가 하고 있는 것은 정말 간단한 편집과 디자인인데, 두 제품 모두 너무 강력한 레이저 검을 필요로 하는 것 같아요. 제가 필요로 하는 건 그저 칼집이면 충분한데 말이죠.\n\n<div class=\"content-ad\"></div>\n\n여러 해 동안 무료이거나 훨씬 저렴한 소수의 도구를 선택해왔어요. 지난 주말에 친구가 어떤 도구를 사용하는지 물어봐서 그것을 이용해서 다른 사람들에게 유용할 수 있다고 생각했어요.\n\n가벼운 사진 편집 및 디자인을 위한 내 세 가지 도구:\n\n## 1) Gimp\n\n<img src=\"/assets/img/2024-06-27-MyThreeFavoriteAlternativestoPhotoshopandInDesign_1.png\" />\n\n<div class=\"content-ad\"></div>\n\n대부분의 포토 편집 작업에 대해 말씀하신 것 같은데, Gimp는 Photoshop에 대한 훌륭한 대안입니다.\n\n기본적인 작업 - 이미지 크기 조정, 파일 크기 축소, 자르기 - 에는 정말 간단합니다. 조금 더 들어가면 색상, 채도, 대비 등을 조정할 수 있는 훌륭한 설정이 있습니다.\n\n좀 더 깊게 파고들면, 예술적 효과를 만드는 데 사용할 수 있는 수많은 필터가 있습니다. 이미지를 만화화하거나 아름다운 효과를 주거나 로우파이 올드스쿨 스타일의 노이즈를 적용하는 등 다양한 효과를 줄 수 있습니다. 또한 전체적으로 뛰어난 테두리 감지 알고리즘이 있어 인물을 분리하고 배경을 제거하는 데 활용할 수 있습니다. 이미지를 약간 조정할 때 주로 일주일에 몇 번씩 사용합니다.\n\n그 중에서도 가장 좋은 점은 무료이다. 실제로 오픈 소스인데요! 이것은 전 세계의 개발자들이 빈번하게 개선하고 있는 것을 의미합니다.\n\n<div class=\"content-ad\"></div>\n\n## 2) 캔바\n\n![이미지](/assets/img/2024-06-27-MyThreeFavoriteAlternativestoPhotoshopandInDesign_2.png)\n\n대부분의 경우, 제 디자인 작업은 a) 밴드 사진 촬영 및 b) 로고 및 공연 세부 정보를 설명하는 텍스트를 넣는 것입니다. 로켓 과학이 아닌 작업이죠, ㅋㅋ.\n\n따라서 필요한 것은 저렴하거나 무료로 사용할 수 있는 소프트웨어입니다. 이미지를 가져와 몇 개의 텍스트 레이어와 가져온 이미지를 추가해 내가 만족할 때까지 정렬할 수 있는 소프트웨어로요. InDesign은 이러한 작업을 아주 잘 수행하지만, 저에게는 너무 고효능이고 비쌉니다. 그래서...\n\n<div class=\"content-ad\"></div>\n\n... 요즘에는 Canva를 자주 사용하고 있어요. 몇 년 전에 처음 들었을 때는 주로 고등학생들이 과제를 위해 빠르게 슬라이드나 차트를 만들기 위해 사용하는 것이 대부분이었죠. 하지만 시간이 흐를수록 Canva는 정말 다양한 기능을 갖추고 사용하기 쉬워질 정도로 발전했어요.\n\n무료 버전만으로도 인상적이에요. 그러나 매월 약 $10에 이용할 수 있는 유료 \"프로\" 버전은 1,000여 가지가 넘는 폰트를 제공해서 정확히 제가 필요했던 것과 일치해요. 저번 주에는 기타를 치는 새로운 록 파워 트리오 '립스틱 드라이버'를 위한 쇼 카드를 만들었어요(위에 우리 사진 있어요!); 작가 샐리 럼블이 디자인해준 우리 로고에 사용된 폰트인 \"코벤\"을 Canva에서 발견했죠. 정말 편리했어요! 원한다면 로고와 일치하는 텍스트를 작성할 수 있죠.\n\n제가 결정했던 것은 Canva의 프로 버전을 사용하는 거예요. 인디자인을 사용하는데 필요한 비용의 절반 정도인데도 제가 필요로하는 모든 것과 더 많은 것을 해주니까요. 매년 추가 $30만 더 내면 우리 밴드 멤버들에게도 각자 \"프로\" 계정을 제공할 수 있어요.\n\n또한 Canva를 사용해서 블로그 게시물용 텍스트 카드를 빠르게 만들어냈어요. 이 게시물은 \"제대로 오타를 낸 적 없는 단어들\"과 \"인류세에 대해 이야기할 때, 새로운 단어가 필요하다\"라는 주제였어요. 이런 것들은 몇 분 내에 디자인할 수 있었는데, 블로그 게시물을 멋지게 꾸며줬죠.\n\n<div class=\"content-ad\"></div>\n\n## 3) Phonto\n\n![Phonto Image](/assets/img/2024-06-27-MyThreeFavoriteAlternativestoPhotoshopandInDesign_3.png)\n\n안녕하세요! 제가 몇 년 전에 안 드로이드 폰에서 처음으로 Phonto를 발견한 뒤, 아이폰을 사용할 때도 사용할 수 있다는 것을 알게 되어 기쁘게 생각했습니다.\n\nPhonto는 Canva의 더 간단하고 모바일 버전으로 생각할 수 있습니다. 주로 사진을 가져와 여러 층의 텍스트를 추가하여 플라이어를 디자인하는 데 사용합니다. Phonto를 내게 유용하게 만드는 것은 폰트의 다양성과 색상 팔레트 및 스타일 선택을 위한 간단한 도구, 텍스트 조각의 곡선 및 기울기 추가, 그리고 그 뒤에 투명한 그림자 상자를 추가하는 간단한 도구입니다. 특히 배경 사진이 다소 복잡할 때 텍스트를 보이게 만드는 데 매우 유용합니다; Delorean Sisters라는 다른 밴드에서 작년에 연주한 공연용 카드에서 그 나타난 것을 볼 수 있습니다...\n\n<div class=\"content-ad\"></div>\n\n![이미지](/assets/img/2024-06-27-MyThreeFavoriteAlternativestoPhotoshopandInDesign_4.png)\n\n칸바에 이와 같은 기능이 있는지 아직 찾아보고 있어요. 폰토에 이와 같은 기능을 찾아볼 수 있을까요?\n\n어쨌든, 신속한 모바일 디자인 작업을 위해 폰토를 사랑하고 자주 사용해요. 주요 앱은 무료이며, 이미지 팩을 구매하고 싶다면 비용이 적게 드는 인앱 구매 옵션이 있어요.\n\n(이 DIY 디자인 팁을 즐겼나요? 그럼 \"박수\" 버튼을 꾹 눌러보세요! 한 명당 최대 50번까지 클릭 가능해요.)\n\n<div class=\"content-ad\"></div>\n\n저는 매주 두 번 Medium에 글을 올리고 있어요. 제 이메일을 팔로우해서 매 포스트를 메일로 받아보세요. Medium 회원이 아니라면 제 링크를 통해 가입하면 매월 요금의 절반 이상이 직접 제 Medium 글을 지원하는 데 사용되며 사이트의 모든 콘텐츠에 액세스할 수 있어요.\n\n또한 제 'The Linkfest'라는 월요일마다 원하는 만큼 지불하는 뉴스레터를 즐길 수도 있어요. 그 안에는 온라인에서 찾은 최고의 콘텐츠들이 정성스럽게 모아져 있어요. \"둠스크롤링의 반대.\"\n\n저는 뉴욕 타임스 매거진 기고자이자 Wired 및 Smithsonian 매거진의 칼럼니스트이며, Mother Jones의 정기 기고 작가이기도 해요. 또한 'Coders: 새로운 부족의 형성과 세상의 재구성' 및 'Smarter Than You Think: 기술이 우리의 마음을 더 나은 방향으로 바꾸는 법'의 저자이기도 해요. 트위터와 인스타그램에서는 @pomeranian99로, Mastodon에서는 @clive@saturation.social로 활동하고 있어요.","ogImage":{"url":"/assets/img/2024-06-27-MyThreeFavoriteAlternativestoPhotoshopandInDesign_0.png"},"coverImage":"/assets/img/2024-06-27-MyThreeFavoriteAlternativestoPhotoshopandInDesign_0.png","tag":["Tech"],"readingTime":5},{"title":"임베디드 AI  배터리 충전 상태를 관리하는 방법","description":"","date":"2024-06-27 18:55","slug":"2024-06-27-EmbeddedAIBatteryStateofCharge","content":"\n\n저희 시리즈 중 임베디드 AI의 첫 번째 부분에서는 머신 러닝(ML) 프로세스를 설명하면서 선형 회귀를 예시로 사용했습니다. 이제 동일한 프로세스를 사용하여 아두이노와 룩업 테이블을 이용해 LiPo 배터리의 충전 상태를 계산할 것입니다. 선형 보간법을 사용하여 테이블 내의 각 점 사이의 값을 추정할 것입니다. 세 번째 부분에서는 룩업 테이블 대신 ML을 사용할 것입니다.\n\n![이미지](/assets/img/2024-06-27-EmbeddedAIBatteryStateofCharge_0.png)\n\n우리의 임베디드 프로젝트는 대부분 전원 공급원으로서 LiPo 배터리를 거의 전적으로 사용합니다. 이는 전류 전달, 크기, 무게 및 용량 측면에서 좋은 선택지입니다. 그러나 배터리 수명에 악영향을 미칠 수 있으므로 배터리를 과방전하지 않도록 주의해야 합니다.\n\n## 배터리 전압 모니터링\n\n<div class=\"content-ad\"></div>\n\n배터리 용량 대 전압의 대략적인 값은 그림 1에 나와 있습니다. 상단 행(1S, 2S 등)은 시리즈에 있는 LiPo 셀 수를 나타냅니다. 이는 배터리의 정격 전압이 지정되는 방식이며, 시리즈에 있는 각 셀의 전압이 합산되어 나타납니다. 이러한 값들은 충전 상태를 예측하는 ML 모델 구축 방법을 보여주기 위한 것입니다. 실제로는 사용 중인 배터리의 실제 값들을 측정하거나 배터리 데이터 시트의 방전 곡선에서 추출해야 합니다.\n\n![Figure 1](/assets/img/2024-06-27-EmbeddedAIBatteryStateofCharge_1.png)\n\n우리의 예시에서는 정격 전압이 11.1V이며 완전히 충전된 상태에서 12.6V를 내는 3S LiPo를 사용합니다. 3S LiPo 배터리에 대한 특성 곡선은 그림 2에 나와 있습니다. 3S 배터리의 경우 15% 용량(3S 배터리의 경우 약 11V 또는 셀 당 3.4V에서 3.6V 사이) 아래로 방전시키지 않는 것이 좋습니다. 그렇지 않으면 배터리가 급격히 손실되고 손상을 입힐 수 있습니다.\n\n![Figure 2](/assets/img/2024-06-27-EmbeddedAIBatteryStateofCharge_2.png)\n\n<div class=\"content-ad\"></div>\n\n배터리를 모니터링하기 위해 아두이노의 ADC(Analog to Digital Converter)와 간단한 전압 분배기를 사용할 것입니다. UNO의 요구 사항을 살펴보겠지만, 다른 보드에 대해서도 동일한 원리가 적용되지만, 마이크로프로세서 전압 허용치에 따라 측정 전압을 5V가 아닌 3V3으로 줄이기 위해 전압 분배기 저항을 조정해야할 수도 있습니다.\n\n## 아두이노 UNO 아날로그 디지털 변환기\n\nUNO의 아날로그 입력(AI)에 5V 이상을 적용할 수 없기 때문에 전압 분배기가 필요합니다. 전압 분배기 회로는 도 3에 나와 있습니다. 우리의 LiPo 배터리 (U2)는 최대 12.6V의 출력을 가지며, 이는 UNO의 Vin에 연결됩니다. 전압 분배기 출력(Vout)은 UNO의 A0에 연결되어 아날로그 전압을 읽는 곳입니다.\n\n![이미지](/assets/img/2024-06-27-EmbeddedAIBatteryStateofCharge_3.png)\n\n<div class=\"content-ad\"></div>\n\n전압 분배기 공식은 다음과 같이 정의됩니다:\n\n![Voltage Divider Formula](/assets/img/2024-06-27-EmbeddedAIBatteryStateofCharge_4.png)\n\nR1과 R2에 사용할 값은 어떻게 결정할까요? 하나의 값을 선택한 다음 전압을 얼마나 감소시키어야 하는지에 따라 다른 값을 계산할 수 있습니다. 또는 올바르게 작업하기 위해 분배기 값을 마이크로프로세서의 ADC에 맞추는 방법을 선택할 수도 있습니다. Arduino UNO R3는 ATMega328P를 사용하며, 10-bit ADC가 장착되어 있습니다. 이는 2^10 (즉, 0~1023) 값이 반환될 수 있다는 것을 의미합니다. UNO의 8개의 아날로그 입력은 동일한 ADC에 연결되어 있어 한 번에 1개의 입력만 샘플링할 수 있습니다 (Figure 4). ADC는 내부 온도 센서, GND 및 1.1V 밴드 갭 참조 전압을 측정하는 데도 사용할 수 있습니다.\n\n![Arduino UNO ADC](/assets/img/2024-06-27-EmbeddedAIBatteryStateofCharge_5.png)\n\n<div class=\"content-ad\"></div>\n\nADC는 내부 14pF 캐패시터를 충전하고 연속적인 근사치로 그 전압을 측정하여 전압을 측정합니다. 이는 입력 임피던스인 전압 분배기의 저항 R1이 너무 커서 캐패시터가 충전되기 충분히 빨리 하지 않는다는 것을 의미합니다. ADC 샘플 및 홀드는 약 12μs가 걸리며, 전체 변환 과정은 프리스케일러 선택에 따라 최대 260μs가 소요될 수 있습니다. R1이 너무 커서는 얼마나 커야할까요? 이를 계산하기 위해 샘플 및 홀드 캐패시터를 충전하는 데 걸리는 시간을 계산해야 합니다.\n\n[그림](/assets/img/2024-06-27-EmbeddedAIBatteryStateofCharge_6.png)\n\n샘플 및 홀드 캐패시터를 충전하는 데 걸리는 시간은 두 가지 요소에 영향을 받습니다:\n\n- 입력 신호의 주파수\n- 입력 신호의 총 임피던스\n\n<div class=\"content-ad\"></div>\n\n\n![Embedded AI Battery State of Charge](/assets/img/2024-06-27-EmbeddedAIBatteryStateofCharge_7.png)\n\n캐패시터는 5τ에서 완전히 충전되었다고 간주됩니다 (도표 5). 충전 회로의 전류는 캐패시터가 충전됨에 따라 지수적으로 감소합니다 (도표 6).\n\n타임 상수 (τ)는 충전 중 캐패시터 전압이 최종 값의 대략 63%에 도달하는 데 걸리는 시간을 나타내며, 방전 중 초기 값의 대략 37%로 감소하는 시간을 나타냅니다. τ는 캐패시터의 충전 또는 방전 속도를 측정하는 것으로, τ 값이 클수록 전압 변화가 느립니다. 다음과 같이 정의됩니다:\n\n```js\nτ = RC\n``` \n\n\n<div class=\"content-ad\"></div>\n\n그림 5와 그림 6에 나타난 곡선은 전압 및 전류 충전 방정식을 사용하여 생성됩니다:\n\n![image](/assets/img/2024-06-27-EmbeddedAIBatteryStateofCharge_8.png)\n\nATMega328P 데이터 시트에 따르면, 아날로그 입력 임피던스는 1에서 100k 사이입니다 (주파수에 따라 달라짐). 권장되는 R1 값은 10k이므로, 총 임피던스는 110k입니다.\n\n```js\n충전 시간 = 5RC = 110 x 10³ x 14 x 10^–12 = 7.7 μs\n```\n\n<div class=\"content-ad\"></div>\n\n샘플 및 홀드에는 12μs가 필요하므로 R1 = 10k가 작동하며, 역발상하여 계산하면 다음과 같습니다:\n\n```js\n최대 임피던스 = 12μs / 5C = 171 kΩ.\n따라서, 최대 R1 = 171k — 100k = 71 kΩ\n```\n\nR1 = 10 kΩ, Vout = 5V 및 Vin = 12.6V로 설정되었음을 고려하면, 위의 전압 분배식을 사용하여 R2를 계산할 수 있습니다.\n\n```js\nR2 = (R1 x Vout/Vin) / (1 — Vout/Vin) \n   = (10k x 5/12.6) / (1–5/12.6) = 6579 Ω\n```\n\n<div class=\"content-ad\"></div>\n\n가장 가까운 사용 가능한 저항기(허용 오차 5%)는 6.2 kΩ이며, 이것은 Vin = 12.6V 일 때 Vout = 4.8V를 제공합니다. 배터리 전압을 읽는 코드는 상당히 간단합니다.\n\n```js\nconst float dividerRatio = (float)(R1 + R2) / (float)R2; \n\n// ADC 하드웨어는 내림하여 반올림하므로 0.5를 추가합니다. \nfloat adcValue = (float)analogRead(VBAT) + 0.5; \nbatteryVoltage = (adcValue / 1024.0) * 5.0 * dividerRatio;\n```\n\n여기서 R1과 R2는 전압 분배기에 사용된 저항기의 값입니다. 우리의 프로토타입에서 R2로 6K2 대신 6K8을 사용하게 되었습니다. 저항기 값을 float로 캐스팅하는 것이 중요합니다. 그렇지 않으면 아두이노에서 정수 나눗셈을 수행하고 dividerRatio에 대한 잘못된 값을 얻게 될 것입니다. ADC(아날로그-디지털 변환기)에서 측정 중인 전압을 측정할 때 하드웨어가 내림하여 값을 반올림하기 때문에 ADC에서 읽은 값을 0.5를 추가해야 합니다.\n\nbatteryVoltage = (adcValue / 1024.0) * 5.0 * dividerRatio는 아두이노 Uno의 ADC에서 배터리 전압을 계산하는 데 사용됩니다. 아두이노 Uno에는 10비트 ADC가 있으므로 0부터 1023(2¹⁰ = 1024개의 레벨)까지의 디지털 값으로 아날로그 입력 신호를 나타낼 수 있습니다. 아두이노 Uno의 ADC에 대한 기본 참조 전압은 5V입니다. 이는 아날로그 입력이 0V인 경우 ADC 값이 0에 해당하고, 5V 인 경우 ADC 값이 1023에 해당한다는 것을 의미합니다. ADC 값은 참조 전압의 분수를 나타냅니다. ADC 값을 해당 전압으로 변환하려면 ADC 값을 최대 가능한 ADC 값(1023)의 비율로 나누고 참조 전압(참조 전압 = 5V)을 곱합니다. Figure 4는 이 프로세스가 작동하는 방식을 보여줍니다.\n\n<div class=\"content-ad\"></div>\n\n## 배터리 전압 샘플 주기\n\n아두이노 스케치에서의 루프 빈도는 프로세서 속도와 코드 내용에 따라 달라집니다. 일반적으로 수천 번 또는 수백만 번까지 초당 실행될 것입니다. 비행 컨트롤러로는 실행 주기가 귀중하며 비핵심 작업에는 시간을 낭비하고 싶지 않을 것입니다. 배터리 전압을 얼마나 자주 샘플링해야 할까요? 방전률(C)에 따라 다릅니다. 여기 전형적인 리포 배터리의 사양이 있습니다.\n\n```js\n최소 용량: 2200mAh\n구성: 3S1P / 11.1V / 3셀\n지속 방전: 25C\n최대 방전 (10초): 35C\n```\n\n안전한 지속 사용을 위한 하나의 방전 등급과 10초 미만의 폭발(예: 모터 시작)을 위한 다른 등급이 있습니다. 방전 등급을 전류로 변환하려면 용량에 곱하면 됩니다. 위 사양에 따르면 배터리 용량은 2200 mAh = 2.2 Ah입니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n방전 전류 = C × 용량\n```\n\n최악의 경우 방전 속도를 원하므로 피크 숫자를 사용하여 계산하겠습니다.\n\n```js\n피크 방전 속도 = 35 × 2.2 = 77 A\n```\n\n용량의 15% 미만으로 방전되지 않도록 하려고 합니다. (즉, 85% × 2.2 Ah = 1.87 Ah) 이를 피크 방전 속도에서 소모하는 데는다음과 같은 시간이 걸립니다:\n\n<div class=\"content-ad\"></div>\n\n```js\n방전 시간 (초) = (1.87 / 77) × 3600 = 87.4 초\n```\n\n이걸 시도하면 배터리가 파괴될 수 있다니까요. 배터리의 최대 안전 방전 속도는 다음과 같습니다:\n\n```js\n안전 방전 시간 (초) = (1.87 × 3600) / (25 × 2.2) = 6732 / 55 = 122.4 초\n```\n\n대부분의 임베디드 장치는 배터리 방전 용량의 100%에서 작동하도록 설계되지 않으므로, 방전 시간은 최대 안전 방전 시간보다 훨씬 더 길 것으로 예상됩니다.\n\n<div class=\"content-ad\"></div>\n\n그림 2를 참조하면, 배터리의 안전 작동 범위 내에서 방전 곡선이 꽤 선형임을 알 수 있습니다. 온도의 영향을 무시하더라도 우리가 감지한 전압은 사용과 함께 변동할 것입니다. 예를 들어, 모터를 100%로 구동하면 많은 전류가 소모되고 배터리 전압이 일시적으로 감소하거나 \"깊게 파고들\"할 수 있습니다. 이는 잘못된 저전압 경보를 일으킬 수 있습니다. 부하를 줄이면 배터리 전압은 다시 회복될 것입니다. 따라서 배터리 모니터링에는 어떤 종류의 히스테리시스가 포함되어야 합니다.\n\n모든 이를 고려할 때, 배터리 전압을 매 초마다 확인하는 것은 과도합니다. 그러나 고부하 하에서 전압 감소를 상쇄하기 위해 이동 평균을 취하고 싶다면, 매 초마다 샘플링하는 것이 작동할 것입니다.\n\n```js\n충전은 방전과 매우 다릅니다. LiPo 배터리의 전형적인 안전 충전률은 1C입니다.\n```\n\n## ReefwingTimer 라이브러리\n\n<div class=\"content-ad\"></div>\n\nReefwingTimer는 millis() 함수를 사용하여 블로킹되지 않는 스케줄러를 인스턴스화하는 래퍼 라이브러리입니다. 저희 라이브러리는 MillisTimer 및 ElapsedTimer 라이브러리를 결합한 것으로, 몇 가지 응용 프로그램 별 예제와 추가적인 Timeout 클래스가 포함되어 있습니다.\n\n라이브러리를 사용하려면 스케치에 포함해야 합니다.\n\n```js\n#include <ReefwingTimer.h>\n```\n\nReefwingTimer 개체를 인스턴스화하는 두 가지 접근 방식이 있습니다.\n\n<div class=\"content-ad\"></div>\n\n- 인터벌을 밀리초로 포함하고 만료 된 타이머 핸들러 함수의 이름을 포함하는 생성자를 사용하세요 [예시: ReefwingTimer timer = ReefwingTimer(1000, timerHandler);], 또는\n- 빈 생성자를 사용하고 이러한 변수를 setup함수에서 정의하세요 [예시: ReefwingTimer timer = ReefwingTimer();].\n\n첫 번째 방법을 사용하는 경우, timerHandler 함수를 ReefwingTimer 위에 정의해야 합니다. 타이머는 기본적으로 무한 반복되지만, setRepeats 메서드를 사용하여 특정 반복 횟수로 구성할 수 있습니다 [예시: timer.setRepeats(10);].\n\nsetup()에서 해야 할 마지막 작업은 타이머를 시작하는 것입니다.\n\n```js\ntimer.start();\n```\n\n<div class=\"content-ad\"></div>\n\n그럼 루프() 안에서 타이머가 업데이트되도록 호출해야 합니다:\n\n```js\ntimer.run();\n```\n\n## 배터리 전압 샘플링 예제\n\nReefwingTimer 라이브러리의 예제 스케치 중 하나인 batteryCheck()를 살펴보겠습니다. 이 스케치에서는 매 초마다 타이머가 만료되고, 만료된 타이머 핸들 함수에서 배터리 전압을 읽습니다. 인터럽트를 사용할 때 핸들러에서 너무 많은 작업을 수행하지 않는 것이 좋습니다. 이 타이머를 사용할 때 배터리가 너무 낮은 경우에는 플래그를 설정하고, 메인 루프에서 적절한 조치를 취합니다(예: 경고 메시지 전송 또는 LED 점등).\n\n<div class=\"content-ad\"></div>\n\n```js\r\n#include <ReefwingTimer.h>\n\n/******************************************************************\n *  배터리 전압 ADC 정의\n * \n *  이 스케치는 전압원(즉, 배터리)이 R1과 R2로 구성된 전압 분배기를 통해\n *  아날로그 입력 핀 A0(즉, 핀 14)에 연결되어 있다고 가정합니다.\n * \n *  표시된 값은 UNO에 대해 올바릅니다. 3V3 로직을 사용하는 아두이노\n *  (예: Nano 33 IoT)를 사용하는 경우 R1, R2 및 VLOGIC을 변경해야합니다.\n *  또한 전압 원이 다른 아날로그 입력에 연결되어 있는 경우 VBAT도 변경해야합니다.\n * \n ******************************************************************/\n\n#define VBAT      14                //  아날로그 핀 A0\n\nconst float VLOGIC = 5.0;           //  UNO는 5V 로직을 사용합니다.\nconst float R1 = 10000.0;           //  10K 저항\nconst float R2 = 6800.0;            //  6K8 저항\nconst float RATIO = (R1 + R2) / R2; //  전압 분배비\nconst float SCALE = VLOGIC * RATIO; //  전압 변환 계수\n\nfloat readADCValue(int pin) {\n  return (float)analogRead(pin) + 0.5;\n}\n\nfloat calculateVoltage(int pin) {\n  float adcValue = readADCValue(pin); \n  return (adcValue / 1024.0) * SCALE;\n}\n\nvoid voltageCheck(ReefwingTimer &nt) {\n  //  타이머가 만료되었을 때 호출되고 각 읽기마다 LED 상태를 토글합니다.\n  digitalWrite(LED_BUILTIN, !digitalRead(LED_BUILTIN));\n\n  //  배터리 전압을 읽고 시리얼로 전송합니다.\n  float batteryVoltage = calculateVoltage(VBAT);\n  Serial.print(\"전압: \");\n  Serial.println(batteryVoltage);\n}\n\nReefwingTimer rTimer = ReefwingTimer(1000, voltageCheck);\n\nvoid setup() {\n  pinMode(LED_BUILTIN, OUTPUT);\n  pinMode(VBAT, INPUT);\n  Serial.begin(115200);\n  rTimer.start();\n}\n\nvoid loop() {\n  rTimer.run();\n  delay(10);\n}\r\n```\n\n## 배터리 충전 상태 계산 — 룩업 테이블\n\n우리의 3S LiPo를 위해 상태 전차 룩업 테이블을 만들기 위해 Figure 1의 테이블을 사용할 수 있습니다.\n\n```js\r\n#define SOC_TABLE_SIZE    21\n\ntypedef struct { uint16_t v100; uint16_t soc; } soc_lookup_t;\n\n//  3S LiPo 용량 - 참고: Figure 1\nsoc_lookup_t capacity[SOC_TABLE_SIZE] = {\n    {982, 0},   {1098, 5},   {1106, 10},  {1112, 15},  {1118, 20},  {1124, 25},  {1128, 30},\n    {1136, 35}, {1139, 40},  {1146, 45},  {1151, 50},  {1156, 55},  {1163, 60},  {1174, 65},\n    {1186, 70}, {1196, 75},  {1207, 80},  {1225, 85},  {1233, 90},  {1245, 95},  {1260, 100}\n};\r\n```\n\n<div class=\"content-ad\"></div>\n\nv100 값은 uint16_t 범위 내에 맞게 조정되었습니다. 이는 테이블 내의 전압 값을 100으로 곱해 수행할 수 있습니다. 배터리 전압을 읽은 후 조회 테이블에서 해당하는 충전 계수를 얻을 수 있습니다.\n\n이 조회 테이블에 정의된 전압에 대해서는 괜찮지만, 9.9V에 대한 용량을 가져오려고 하면 어떻게 될까요? 찾을 수 없을 것입니다. 앞서 말했듯이 배터리 운전 범위 내의 용량 곡선은 상당히 선형적이므로 (도표 2 참조) 조회 테이블의 점들 사이에서 선형 보간을 사용할 수 있습니다.\n\n```js\nfloat constrain(float value, float min, float max) {\n    if (value < min) return min;\n    if (value > max) return max;\n    return value;\n}\n\nuint16_t interpolate(soc_lookup_t *capacity, float charge) {\n    // 최소값 및 최대값은 첫 번째와 마지막 요소 사용\n    uint16_t min_v100 = capacity[0].v100;\n    uint16_t max_v100 = capacity[SOC_TABLE_SIZE - 1].v100;\n\n    // 충전을 최소 및 최대 v100 값으로 제한\n    charge = constrain(charge, min_v100, max_v100);\n\n    // SoC 값 보간\n    for (int i = 0; i < SOC_TABLE_SIZE - 1; i++) {\n        if (capacity[i].v100 <= charge && capacity[i + 1].v100 >= charge) {\n            float diffx = charge - capacity[i].v100;\n            float diffn = capacity[i + 1].v100 - capacity[i].v100;\n\n            return (int)(capacity[i].soc + (capacity[i + 1].soc - capacity[i].soc) * diffx / diffn);\n        }\n    }\n\n    return 0; // 범위 내가 아님\n}\n```\n\n이 방식은 조회 테이블이 오름차순으로 정렬되어 있다고 가정하며, 최소값과 최대값을 결정하는 것을 단순화합니다. 다음 예제 스케치를 사용하여 Arduino UNO에서 이를 테스트할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```c\r\n#define VBAT      A0                //  아날로그 핀 A0\n\nconst float VLOGIC = 5.0;           //  UNO는 5V 논리를 사용합니다.\nconst float R1 = 10000.0;           //  10K 저항\nconst float R2 = 6800.0;            //  6K8 저항\nconst float RATIO = (R1 + R2) / R2; //  전압 분배 비율\nconst float SCALE = VLOGIC * RATIO; //  전압 변환 계수\n\n#define SOC_TABLE_SIZE 21\n\ntypedef struct {\n    uint16_t v100; // 백분의 일전압의 전압\n    uint16_t soc;  // 충전 상태 백분율\n} soc_lookup_t;\n\nsoc_lookup_t capacity[SOC_TABLE_SIZE] = {\n    {982, 0},   {1098, 5},   {1106, 10},  {1112, 15},  {1118, 20},  {1124, 25},  {1128, 30},\n    {1136, 35}, {1139, 40},  {1146, 45},  {1151, 50},  {1156, 55},  {1163, 60},  {1174, 65},\n    {1186, 70}, {1196, 75},  {1207, 80},  {1225, 85},  {1233, 90},  {1245, 95},  {1260, 100}\n};\n\nfloat constrain(float value, float min, float max) {\n    if (value < min) return min;\n    if (value > max) return max;\n    return value;\n}\n\nuint16_t interpolate(soc_lookup_t *capacity, float charge) {\n    // 최솟값과 최댓값을 위해 첫 번째 원소와 마지막 원소 사용\n    uint16_t min_v100 = capacity[0].v100;\n    uint16_t max_v100 = capacity[SOC_TABLE_SIZE - 1].v100;\n\n    // charge를 최솟값과 최댓값 v100 값으로 제한\n    charge = constrain(charge, min_v100, max_v100);\n\n    // SoC 값을 보간\n    for (int i = 0; i < SOC_TABLE_SIZE - 1; i++) {\n        if (capacity[i].v100 <= charge && capacity[i + 1].v100 >= charge) {\n            float diffx = charge - capacity[i].v100;\n            float diffn = capacity[i + 1].v100 - capacity[i].v100;\n\n            return (int)(capacity[i].soc + (capacity[i + 1].soc - capacity[i].soc) * diffx / diffn);\n        }\n    }\n\n    return 0; // 범위를 벗어남\n}\n\nfloat readADCValue(int pin) {\n    return (float)analogRead(pin) + 0.5;\n}\n\nfloat calculateVoltage(int pin) {\n    float adcValue = readADCValue(pin); \n    return (adcValue / 1024.0) * SCALE;\n}\n\nvoid setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    // 배터리로부터 전압 읽기\n    float voltage = calculateVoltage(VBAT);\n\n    // 검색 테이블과 interpolate 함수를 사용하여 충전 상태(SoC) 계산\n    float charge = voltage * 100;\n\n    // 전압을 백분의 일전압으로 변환하여 검색 테이블과 일치시킵니다\n    uint16_t soc = interpolate(capacity, charge);\n\n    // 전압과 충전 상태를 Serial Monitor에 출력\n    Serial.print(\"Voltage: \");\n    Serial.print(voltage); // 실제 전압 출력\n    Serial.print(\" V, SoC: \");\n    Serial.print(soc);\n    Serial.println(\" %\");\n\n    // 다음 측정을 위해 1초 대기\n    delay(1000);\n}\n```\n\n## Part 3 — 곧 공개됩니다!\n\n이 시리즈의 세 번째 파트에서는 검색 테이블과 interpolate를 기계 학습 모델로 대체할 것입니다.\n\n이 글을 즐겨 보셨고 작성을 지원하고 싶다면 팔로우하거나 박수(최대 50회), 강조 또는 댓글을 달아주시기 바랍니다! 또는 커피를 사주시거나 구독해주셔도 감사하겠습니다.","ogImage":{"url":"/assets/img/2024-06-27-EmbeddedAIBatteryStateofCharge_0.png"},"coverImage":"/assets/img/2024-06-27-EmbeddedAIBatteryStateofCharge_0.png","tag":["Tech"],"readingTime":14},{"title":"레이저, 펩타이드, 성장 호르몬, 줄기 세포를 이용한 생물학적 3D 프린터 만드는 방법","description":"","date":"2024-06-27 18:53","slug":"2024-06-27-HowtoCreateaBiological3DPrinterUsingLasersPeptidesGrowthHormonesandStemCells","content":"\n\n\n![Biological 3D Printer](/assets/img/2024-06-27-HowtoCreateaBiological3DPrinterUsingLasersPeptidesGrowthHormonesandStemCells_0.png)\n\n# 소개\n\n생물학적 3D 프린팅은 생물학, 공학, 컴퓨터 과학을 결합하여 생체 조직과 장기를 만드는 혁신적인 분야입니다. 이 기술은 조직 수리, 약물 시험 및 장기 이식을 위한 솔루션을 제공함으로써 의학을 혁신할 잠재력을 가지고 있습니다. 본문에서는 레이저, 펩타이드, 성장 호르몬 및 줄기 세포와 같은 고급 구성 요소를 활용하여 더 나은 생물학적 3D 프린터를 만드는 내 아이디어에 대해 탐구해 보겠습니다.\n\n# 생물학적 3D 프린팅의 기초\n\n\n<div class=\"content-ad\"></div>\n\n생물 3D 프린팅 또는 바이오프린팅은 생체 세포로 이루어진 3차원 구조물을 만드는 과정을 말합니다. 일반적인 3D 프린팅이 플라스틱이나 금속과 같은 물질을 사용하는 것과 달리, 바이오프린팅은 세포, 펩타이드, 성장 호르몬 및 기타 생물학적 구성 요소로 만든 생체 잉크를 사용합니다. 바이오프린터는 이러한 생체 잉크를 층층히 쌓아 복잡한 생물학적 구조물을 형성합니다.\n\n# 주요 구성 요소\n\n## 레이저\n\n- 레이저는 바이오프린팅에서 정밀성과 제어를 위해 사용됩니다. 레이저는 매우 작은 영역에 초점을 맞출 수 있어서 복잡한 세포 구조물의 고해상도 프린팅이 가능합니다. 게다가 레이저는 세포와 생체 잉크를 손상시키지 않고 다룰 수 있어서 인쇄된 조직의 생존 가능성을 보장합니다.\n\n<div class=\"content-ad\"></div>\n\n## 펩타이드\n\n- 펩타이드는 세포 신호 및 조직 형성에 중요한 역할을 하는 아미노산의 짧은 체인입니다. 생체인쇄 기술에서는 펩타이드를 사용하여 세포 부착, 분화 및 성장을 촉진하는 데 활용될 수 있습니다. 이들은 종종 바이오잉크에 첨가되어 인쇄된 조직의 생물학적 활동과 기능성을 향상시키는 데 사용됩니다.\n\n## 성장 호르몬\n\n- 성장 호르몬은 세포 증식과 분화를 촉진하는 데 중요합니다. 생체 잉크에 성장 호르몬을 첨가함으로써 인쇄된 조직의 성숙화와 발달을 가속화할 수 있습니다. 이는 기능적 조직 및 장기를 만들고 기존 구조체와 통합할 수 있는 중요한 과정입니다.\n\n<div class=\"content-ad\"></div>\n\n## 줄기 세포\n\n- 줄기 세포는 다양한 세포 유형으로 발달할 수 있는 미분화된 세포입니다. 줄기 세포는 생체 프린팅의 기본 구성 요소로, 다양한 조직을 만들기 위해 필요한 원료를 제공합니다. 줄기 세포는 몸의 여러 조직에서 나올 수 있거나 유도 다분화 줄기 세포(iPSCs)에서 유래될 수 있습니다.\n\n# 생체 3D 프린터 구축 단계별 안내서\n\n## 프린터 프레임워크 설계\n\n<div class=\"content-ad\"></div>\n\n- 프린터용 견고하고 정밀한 프레임워크를 설계하는 것부터 시작해보세요. 이 프레임워크는 프린팅 헤드의 이동을 세 가지 차원(X, Y, Z 축)에서 가능하게 해야 합니다. 정밀한 위치 조정을 위해 고정밀 모터와 액추에이터가 중요합니다.\n\n## 레이저 기술 통합\n\n- 미세 레이저 모듈을 통합해보세요. 이 레이저는 미세미터 크기 영역에 초점을 맞출 수 있어야 합니다. 레이저가 세포와 바이오잉크를 열적 손상 없이 다룰 수 있어야 합니다. 레이저 빔을 고정밀로 조작하기 위해 광학 렌즈와 거울을 사용해보세요.\n\n## 바이오잉크 개발\n\n<div class=\"content-ad\"></div>\n\n- 줄기 세포, 펩타이드 및 성장 호르몬을 결합하여 바이오잉크를 생성하세요. 바이오잉크의 조성은 인쇄하려는 조직의 유형에 따라 다양할 수 있습니다. 세포 성장과 분화를 지원하기 위해 바이오잉크의 점도와 생물학적 활성이 적절한지 확인하세요.\n\n## 보정 및 테스트\n\n- 프린터를 보정하여 바이오잉크의 정확한 투입을 보장하세요. 레이저 강도, 인쇄 속도 및 레이어 두께와 같은 매개변수를 미세 조정하기 위해 테스트 인쇄를 사용하세요. 인쇄 프로세스 중과 후에 출력된 조직의 생존율과 기능을 모니터링하세요.\n\n## 인쇄 및 후처리\n\n<div class=\"content-ad\"></div>\n\n- 원하는 조직 구조에 맞게 생체 잉크를 층층이 적층하여 인쇄 과정을 시작합니다. 인쇄 후에는 성장과 발달을 위해 조직을 통제된 환경에서 배양합니다. 조직 종류에 따라 영양 공급 및 기계적 가공과 같은 추가 후처리 단계가 필요할 수 있습니다.\n\n## 응용 및 전망\n\n생물학적 3D 프린팅의 잠재적인 응용 분야는 매우 다양합니다. 이 기술은 상처 치료용 맞춤형 조직 이식물, 약물 테스트용 장기모델 개발, 심지어 장기 이식을 위한 완전한 장기 프린트에 사용될 수 있습니다. 연구가 진전됨에 따라 더 정교한 생체 프린팅 기술과 소재가 등장할 것으로 기대되며, 우리는 완전히 기능적이고 이식 가능한 장기를 만드는 목표에 한 발 더 가까워질 것으로 기대됩니다.\n\n## 결론\n\n<div class=\"content-ad\"></div>\n\n레이저, 펩타이드, 성장 호르몬 및 줄기 세포를 사용하여 생물학적 3D 프린터를 구축하는 것은 야심찬 도전적이지만 달성할 수 있는 목표입니다. 이러한 첨단 기술을 결합함으로써 의학과 건강 상태 다양한 범위의 질병을 치료하는 새로운 가능성을 창출할 수 있습니다. 생체 프린팅의 여정은 시작에 불과하며, 미래에는 이 분야에서 혁신과 발견에 대한 흥미진진한 잠재력이 기다리고 있습니다.\n\n![image](/assets/img/2024-06-27-HowtoCreateaBiological3DPrinterUsingLasersPeptidesGrowthHormonesandStemCells_1.png)","ogImage":{"url":"/assets/img/2024-06-27-HowtoCreateaBiological3DPrinterUsingLasersPeptidesGrowthHormonesandStemCells_0.png"},"coverImage":"/assets/img/2024-06-27-HowtoCreateaBiological3DPrinterUsingLasersPeptidesGrowthHormonesandStemCells_0.png","tag":["Tech"],"readingTime":3},{"title":"안타레스 이지 제품 개발 비하인드 우수성을 창출하기 위한 도전 극복기","description":"","date":"2024-06-27 18:52","slug":"2024-06-27-BehindtheProductofAntaresEazyNavigatingChallengestoCreateExcellence","content":"\n\n# 안타레스를 알아보기\n\n안타레스 이지는 다양한 기기 모델, 제조업체 및 클라우드 서비스와 통합된 스마트 홈, 스마트 오피스 및 스마트 모빌리티 IoT 생태계의 필요를 지원하는 다기능 IoT 플랫폼입니다. 해당 플랫폼은 스마트 기기를 관리하는 데 있어 유연성, 편리성 및 편안함을 제공하여 일상을 더 연결되고 효율적으로 만듭니다.\n\n안타레스 이지는 단순하고 편리한 라이프스타일을 원하는 모든 사람들에게 최적의 해결책을 제공합니다. 우리의 고급 기능을 통해 정원 조명을 켜거나 한 번 클릭으로 영화 밤을 준비할 수 있습니다. 저희 혁신적인 기능은 투야의 동남아시아 지역 책임자 바르디, 아르비트, 아바로, T3와 같은 존경받는 파트너들로부터 상당한 관심을 받았습니다.\n\n# 도전 과제\n\n<div class=\"content-ad\"></div>\n\n우리의 삶을 진정으로 향상시키는 최고급 제품을 전달하는 것은 쉬운 일이 아닙니다; 무수한 도전과 지속적인 혁신으로 가득한 여정입니다. 여기에는 제품 뒤의 비밀에 대해 이야기해 줄 안타레스 이지의 UX 리드인 엠바 샤니살람 Wpp가 있습니다.\n\n우리가 선도할 수 있는 비밀과 장벽에 대해 궁금한가요? 우리의 여정의 매혹적인 심연으로 들어가 봅시다.\n\n처음부터 최고의 디지털 제품을 만드는 것은 도전적인 여정이었습니다. 계속 변화하는 요구 사항과 규제 요구 사항, 한정된 자원을 끊임없이 적응하는 것은 안타레스 이지의 시작부터 여정에 스며든 도전이었습니다. 2024년에 우리가 진입하면서 새로운 중요한 장애물이 나타났습니다. 이지 고즈 투 위텔 계획에 적극 참여하면서 개발 일정과 균형을 맞추는 것은 중요한 작업입니다. 이 계획은 팀원들이 베카시, 보고르, 동자카르타, 서밴둥 등 다양한 위텔 지역을 방문하여 피드백을 수집하고 필요한 향상을 구현하는 것을 포함합니다. 올해 기술적 제품 개발과 우리의 활동적인 위텔 활동이 교차되는 점에서 흥미로운 도전이 발생했습니다.\n\n# 우리 팀이 도전을 어떻게 극복했는지\n\n<div class=\"content-ad\"></div>\n\n어려움을 극복하는 일은 도전적일 수 있지만 걱정하지 마세요. 최고의 팀이 이 도전을 정복하기 위해 노력할 거에요. 팀 간의 원활한 커뮤니케이션을 확립하고 모든 이해관계자가 문제 상황을 정확히 이해하는 것이 중요합니다. 긴급도에 따라 작업을 우선순위에 따라 정하는 것이 매우 효과적인 전략임이 입증되었습니다. Telkom의 PDP Law 과제 팀과 밀접히 협력하여 규정을 완전히 준수하도록 하는 등의 부서들과의 긴밀한 협력은 팀이 문제를 효과적으로 관리하고 해결할 수 있도록 돕고 있습니다.\n\n# 안타레스의 미래 비전: 목표를 현실로 변환하기\n\n당신의 삶에 최상의 솔루션이 되기를 원할 뿐만 아니라 다양한 서비스와 IoT 장치를 연결하고 플랫폼으로 만들기를 원합니다. 현재로서는,\n\n# 최신 안타레스 혁신 소개!\n\n<div class=\"content-ad\"></div>\n\n안타레스에서 여러분의 만족도를 극대화하기 위한 흥미진진한 업데이트를 공개하게 되어 기쁩니다. 함께 살펴봅시다.\n\n![이미지](/assets/img/2024-06-27-BehindtheProductofAntaresEazyNavigatingChallengestoCreateExcellence_0.png)\n\n- 렌탈 서비스 제공: 안타레스는 인도네시아에서 IP 카메라를 Rp35,000에 제공하는 렌탈 옵션을 선도합니다.\n- 수익성 높은 제휴 프로그램: 안타레스 제품을 손쉽게 홍보하고 상당한 커미션을 벌 수 있는 제휴 프로그램에 가입하고, 헌신적인 팀으로부터 전문적인 지도를 받아보세요.\n- 설치 서비스 번들링 제공: 인도네시아 130곳에서 제공되는 설치 서비스가 포함된 번들링 구매 옵션으로 편리함을 경험해보세요.\n- Eazy가 지원하는 장치 지속적으로 추가: 안타레스는 최신 기능을 지속적으로 통합하여 여러분의 경험이 무척나도 탁월하게 유지되도록 합니다.\n\n![이미지](/assets/img/2024-06-27-BehindtheProductofAntaresEazyNavigatingChallengestoCreateExcellence_1.png)\n\n<div class=\"content-ad\"></div>\n\n새로운 편의성과 연결성을 재정의하는 이러한 획기적인 오퍼링을 소개합니다!\n\n# 안타레스 이지 업적\n\n안타레스 이지는 사용자의 편의성을 향상시키는 제품뿐만 아니라 혁신적인 IoT 플랫폼으로 두 가지 독특한 범주에서 존경받고 있는 제품으로, 2024년 제품 대상의 귀한 수상을 이끌었습니다. 연구된 제품 혁신 범주의 최도 탁월한 제품으로, 아주 좋은 평점을 받았으며, 혁신적인 혁신 범주입니다. 이러한 영예는 MIX Marcomm 잡지 (SWA 미디어 그룹)에서 선정했습니다. 이행사에서 브랜드들을 지난해의 혁신적인 제품 진보로 인정하고자 하는 3회 연례 이벤트에서 수여되었습니다. 혁신 전문가와 빅 데이터 크롤링 분석가들이 주도한 평가로 안타레스 이지의 인상적인 성과를 강조했으며 심사 패널에 오랫동안 인상을 남겼습니다.\n\n<img src=\"/assets/img/2024-06-27-BehindtheProductofAntaresEazyNavigatingChallengestoCreateExcellence_2.png\" />\n\n<div class=\"content-ad\"></div>\n\nIoT 제품 디자인에 관련된 더 많은 통찰력을 찾고 계신가요? 운좋게도! 텔콤 디자인(Telkom Design)에서 인도네시아를 위한 솔루션을 어떻게 만드는지 뒷이야기를 더 확인하려면 저희 웹사이트, Instagram, LinkedIn 또는 YouTube를 esearch하십시오. #TakeALeap를 이해하고 #DigitizeTheNation에 기여하여 디지털 변형을 가속화하는 방법을 지속적으로 업데이트하십시오!","ogImage":{"url":"/assets/img/2024-06-27-BehindtheProductofAntaresEazyNavigatingChallengestoCreateExcellence_0.png"},"coverImage":"/assets/img/2024-06-27-BehindtheProductofAntaresEazyNavigatingChallengestoCreateExcellence_0.png","tag":["Tech"],"readingTime":3},{"title":"아무도 보고 싶어 하지 않는 최악의 소셜 미디어 게시물 10가지","description":"","date":"2024-06-27 18:50","slug":"2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee","content":"\n\n## 이건 정말 이상해요\n\n18년 동안 소셜 미디어를 사용해 왔어요. 2006년에 MySpace에 처음으로 글을 올렸죠. 처음에는 영감을 주는 명언이나 밈을 올리는 게 답이라고 생각했어요. 그런데 그건 금방 지루해졌어요.\n\n내 귀여운 딸기르는 어쩔 수 없이 많은 사진을 올릴 수밖에 없어요. 웃긴 상태 업데이트와 밈을 올리는 쪽으로 바꾸니 많은 팔로워가 생겼어요. MySpace에는 18,000명이 넘는 팔로워가 있었고, 페이스북에는 거의 5000명이 팔로우했어요.\n\n소셜 미디어에 올라오는 글들을 많이 봐왔어요. 아직도 강아지와 고양이 사진을 즐기고 있어요. 웃긴 밈을 사랑해요. 귀여운 아이들의 첫 등교나 졸업식 사진 등을 보는 걸 좋아해요. 누군가가 승진을 하거나 목표를 위해 노력하거나 사회 정의를 지지하는 이야기를 듣는 걸 좋아해요.\n\n<div class=\"content-ad\"></div>\n\n그러나 뒷면도 있습니다. 몇 가지는 너무나 많이 본만큼 참을 수 없게 됩니다. 아래 항목에 대한 게시물을 볼 때마다 전편성이 되어버립니다. 다음은 날 미치게 만드는 종류의 소셜 미디어 게시물입니다.\n\n# 오리 입술 셀카\n\n![이미지](/assets/img/2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_0.png)\n\n우리 중 가장 오래된 것 중 하나일 것 같습니다. MySpace에서 오리입술 포즈를 본 기억이 납니다. 이 포즈는 귀엽거나 섹시할 게 없습니다. 이것은 2006년식인데, 이미 경의를 표하며 조용하게 사라지게 해주세요.\n\n<div class=\"content-ad\"></div>\n\n이거 쓰는 젊은 여자 아이들이 여전히 있는 게 웃겨요. 엄마들이 사용했던 게 이렇게 오랜 시간이 지났다는 걸 생각하면, 딸들은 어머니의 예전 소셜 미디어 게시물을 보고 볼 수 있어요. 제가 태어나기도 전에 엄마들이 이걸 하고 있었다는 게 좀 웃기죠. 저라면 과거에 부모님이 사용했던 유행을 되풀이하고 싶지 않아요. 그냥 이상하게 느껴져요.\n\n# \"축복 받았다\"라고 하는 부동산 중개인들\n\n![부동산중개](/assets/img/2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_1.png)\n\n저리 가라 참 별것 다 아냐. 근데 자신과 닮았다는 건 알겠다. 저는 20년 동안 면허를 가진 부동산 중개인이었어요. 소셜 미디어에서 몇 번 \"축복 받았다\"고 했냐구요? 제로 죠. 아무도 그런 걸 듣고 싶어하지 않아요.\n\n<div class=\"content-ad\"></div>\n\n특히 처음 집을 사려는 사람들이 두세 명의 친구와 함께 같은 부동산에 투자하지 않으면 주택을 사 볼 수 없는 과하게 높은 가격의 부동산 시장에서, 일부 중개업자들의 특혜 요구는 분명하게 드러나며 공개적으로 표출됩니다.\n\n근처 리조트 타운에 있는 오두막, 멋진 새 보트로 새롭게 올린 게시물에 대한 이중성이 발생합니다. 다수가 집세도 간신히 넉넉히 갚을때, 얼마나 훌륭하게 잘 지내는지에 대해 평범한 조 시민들은 신경 쓰지 않습니다. 뽑시다가 되풀이나지 마세요. 실력보다 외모와 인기에 더 중점을 둔 산업에서 허세 부리는 것보다 겸손해지세요. \n\n# 소셜 미디어에서 전 남자친구 비하\n\n![이미지](/assets/img/2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_2.png)\n\n<div class=\"content-ad\"></div>\n\n만약 지금까지 보았던 베이비마마/베이비대디 비난 게시물들에 대한 각각 1달러가 있다면, 누구의 어린이 지원금도 따라잡을 수 있을 텐데요. 이 부정적인 에너지로 인해 여러분의 아이들이 안타깝게도 영향을 받고, 그들도 언젠가는 십대 혹은 어른이 된 후 이런 게시물들을 볼 수도 있을 거예요.\n\n상황을 인지하고 책임을 질 때입니다. 여러분이 비난하는 사람과 함께 이 아름다운 아이를 만들었다는 것을 깨달으세요. 자신의 아이의 입장에 서서 다른 부모에 대해 지극히 불쾌한 내용을 읽을 때 얼마나 상처받을지를 느껴보세요. 특히 그것이 다른 부모가 올린 경우는 더 그렇습니다.\n\n클래스를 갖추고 더 높은 길을 택해보세요. 세상에 공개된 내용이 사실이라 할지라도, 사랑하는 자녀를 위해 큰 그림을 그리는 사람이 되어주세요. 하나님의 은혜를 바라봐도 그만이죠. 만약 이런 게시물을 그만 올릴 수 없다면, 적어도 맞게 철자 내기만은 해주세요.\n\n# “모든 생명 중요하다”에 대해 이야기하는 사람들\n\n<div class=\"content-ad\"></div>\n\n\n![2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_3.png](/assets/img/2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_3.png)\n\n만약 \"Black Lives Matter\" 운동에 괴로워하여 \"모든 생명이 소중하다\"라는 글을 올리려고 한다면 포기하세요. 과거 또는 현재의 인종 차별에 대한 느끼는 죄책감을 덜기 위해 합리적인 사회 정의 운동을 최소화하는 것은 혐오스럽습니다.\n\n\"모든 생명이 소중하다\"는 진실이지만, BLM 운동과는 아무 상관이 없습니다. 아프리카계 미국 시민들에 대한 경찰의 부당한 행위 및 무고한 흑인 시민들의 살해에 대한 도움이 필요합니다.\n\n그러한 주장은 혼자만 알아두고, 변화를 위한 동맹자가 되어 주세요. 진보와 사회 정의에 반대하는 적이 아니라 변화의 지지자가 되어 주세요.\n\n\n<div class=\"content-ad\"></div>\n\n# 도날드 트럼프와 그의 재선에 대한 찬양 게시물\n\n![2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_4](/assets/img/2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_4.png)\n\n가끔 제 고향인 아이다호 주에서 도날드 트럼프를 칭찬하는 사람들 때문에 상황이 너무 나빠져서, 이들과 친근하게 교육적인 토론을 하는 대신에 그냥 차단하는 쪽이 나을 것 같아요. 도널드 트럼프 지지자들을 깨닫게 되었을 때 얼마나 많은 시간을 쓰고 있는지 알았어요. 그가 왜 그토록 개새끼인지 설득하려고 하는 데 몇 분이나 몇 시간을 낭비했는지요.\n\n이제 도날드 트럼프의 지속적인 인종 차별적이고 편협한, 동성애 적인, 성차별적, 외화 적인 쓰레기를 지지하는 사람들은 제 적수가 되었어요. 제 딸은 게이이고, 혼혈 신부와 아이들이 있으며, 정의를 사랑하고 무지와 헛소리에 대한 인내심을 가지고 있어요. 어떤 플랫폼에서도 트럼프 지지 게시물을 볼 욕구가 없어요. 지난 8~10년 동안 이를 훨씬 너무 많이 보았거든요.\n\n<div class=\"content-ad\"></div>\n\n# 머리로 사냥한 동물을 든 사진\n\n![사냥 사진](/assets/img/2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_5.png)\n\n아이다호 주 출신으로 이것은 또 다른 인기 있는 사진입니다. 자신감 없는 사냥복을 입은, 얼굴에 웃음꽝 지은 멍청한 놈이 죽은 동물을들들고 있습니다. 코, 입이나 머리에서 피를 흘리고 있죠.\n\n사냥은 스포츠가 아닙니다. 당신이 그들의 서식지에서 살아가며 하루를 즐기고 삶을 즐기던 무방비한 동물에 총알을 맞춘다고 해서 '진정한 남자'가 되는 것은 아닙니다. 머리, 가슴, 폐 부위에 총알을 맞는 거죠.\n\n<div class=\"content-ad\"></div>\n\n 만약 당신이 가족을 먹이기 위해 이런 무방비한 동물들을 죽인다면, 괜찮아요. 그러나 카메라 앞에서 그들의 죽은 시체를 들고 바보 같이 웃고 있으면 그들의 죽음에 경례를 표하지 마세요. 이런 사진을 올린다고 해서 다른 도랑 같은 사람들 외에는 누구도 감탄하지 않아요.\n\n# 상처나 끔찍한 부상 사진\n\n![상처](/assets/img/2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_6.png)\n\n국물통을 열다가 엄지손가락에 상처를 내셨군요. 거대한 샴푸병이 발가락에 떨어져서 이젠 바니 엉덩이처럼 보라색이 되었어요. 수술로 남은 흉터가 프랑켄슈타인 머리랑 맞먹는 수준인가 봅니다. 스포일러 경보: 우리는 그것을 보고 싶어하지 않아요.\n\n<div class=\"content-ad\"></div>\n\n어떤 어려움이라도 있으면 말해줘. 내가 생각과 기도를 잠재워 놓았으니 언제든지 방아쇠를 당기라고. 다만, 혼자서 혈액, 뼈, 근육 같은 고통스러운 부상은 꼭 보고 싶지 않아.\n\n# 당신의 총 보관장을 사진으로\n\n![총 보관장 사진](/assets/img/2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_7.png)\n\n무기들이 한 장소에 모여있는 당신의 사진을 보면 두렵고 불안한 마음이 많이 드러나는 것 같아. 새로운 무기를 샀고 흥분되는 거야? 멋져. 하지만 여러 개의 무기를 같은 사진에 올리면 난 QAnon에 가입하려고 하고 있거나 와코와 루비 릿지의 사건을 이론으로 분석하고 있는 건 아닌지 궁금해져.\n\n<div class=\"content-ad\"></div>\n\n플리마켓에서 산 얼굴 마스크, 방탄조끼, 검 등은 하나도 인상적이지 않아. 이것들은 탱크, 미사일, 폭탄 또는 정부(국내 외)가 널 제거하려고 결정하면 실제 훈련받은 민병대를 막을 수 없어. 스타터 세트 무기에 열중하지 마, 람보야. 이건 천재 인도나 베트남이 아니야.\n\n# 비건, 글루텐 프리 식사 사진\n\n![이미지](/assets/img/2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_8.png)\n\n소셜 미디어에 공유되는 음식 사진들을 사랑해. 아침, 점심, 저녁을 올려봐. 칵테일, 와인 한 잔도 좋아. 술에 취한 삼촌이 맥주를 마시는 사진도 좋아. 그냥 건강식을 올리지 마. 지루하고 맛이 없어.\n\n<div class=\"content-ad\"></div>\n\n나는 당신의 음식이 글루텐프리인지는 신경 쓰지 않아요. 카로브 칩 쿠키는 진짜 싫어. 내 피드에 콜리플라워 와플이 나오면 즉시 차단할 거야.\n\n인생은 짧아요. 이미 달콤하고 지방이 많은 음식을 먹어요. 사진도 올려요. 그리고 더 뚱뚱해지는 모습도 올려줘요, 그건 존중해요. 당신의 최고의 삶을 사세요.\n\n# 매일 아침 6시 운동 동영상\n\n![2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_9.png](/assets/img/2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_9.png)\n\n<div class=\"content-ad\"></div>\n\n잘 이해해주세요. 운동을 즐기고 있어요. 많은 해 동안 운동을 해 왔어요. 건강과 피트니스에 신경을 쓰는 분들을 존경해요. 하지만 여러분이 한 허그 시간동안의 모든 운동 기록을 보고 싶지는 않아요. 다른 사람들이 벤치 프레스나 스쿼트를 하는 걸 이미 많이 봤거든요.\n\n여러분이 얼마나 열심히 일하고 있는지 자랑스럽다고 생각해요. 매일 올리시는 분들 대부분 몸매가 아주 좋아 보여요. 아마 그래서 매일 계속 올리는 거겠죠. 여러분은 아매로 삶의 좋은 본보기이고, 피트하지 않은 사람들에게는 영웅이자 영감, 동기가 되는 분들입니다. 그게 여러분이 듣고 싶은 이야기죠?\n\n단순히 운동만 하세요. 아마 6개월에 한 번씩 진전 사진을 올리세요. 이해했어요. 여러분은 운동을 하는거 알아요. 운동복도 귀여워요. TapOut 티셔츠를 입은 남자분, 여러분에게 이야기를 하고 있어요. 전에모 체이서 인상적이고, 삼각대에 자신의 폰을 세워두고 스쿼트를 하는 여성분입니다.\n\n# 그래서 소셜 미디어에 글 올리는 분들아...\n\n<div class=\"content-ad\"></div>\n\n![image](https://miro.medium.com/v2/resize:fit:1280/0*1NtfDY3bbpaZY0KW.gif)\n\n당신이 결정할 권리는 당신의 것입니다. 여러분의 페이지나 계정은 여러분이 원하는 대로 사용하실 수 있습니다. 저는 여러 팔로워 중 한 명의 시각을 제공하고 싶었습니다. 우리가 '닥터 리처드 극단팀'에서 본 것과 맞먹는 열차 사고를 지켜보고 있기 때문입니다.\n\n저는 소셜 미디어에 18년을 포스팅해온 과정에서 다른 사람들을 열나게 한 몇 가지를 했을지도 모릅니다. 우리는 우리가 원하는 게시물을 올릴 권리가 있고 누구를 짜증나게 할 의사를 가질 권리도 있습니다. 여러분도 당신이 싫어하는 온라인 활동을 보고는 분노할 때가 있지 않나요?\n\n© 2024 Jason Provencio. 판권 소유.","ogImage":{"url":"/assets/img/2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_0.png"},"coverImage":"/assets/img/2024-06-27-TheWorstSocialMediaPostsThatNobodyWantstoSee_0.png","tag":["Tech"],"readingTime":7},{"title":"Claude-Sonnet 35로 텍스트를 SQL로 변환하는 챗봇 만드는 방법","description":"","date":"2024-06-27 18:48","slug":"2024-06-27-BuildatexttoSQLchatbotwithClaude-Sonnet35","content":"\n\n## Claude Sonnet 3.5을 사용한 텍스트-SQL 및 GPT 모델과의 벤치마킹\n\n![image](/assets/img/2024-06-27-BuildatexttoSQLchatbotwithClaude-Sonnet35_0.png)\n\nAnthropic은 최신 주력 모델인 Claude 3.5를 공개했습니다. 이 광범위한 응용 분야에 이상적인 이 첨단 모델은 인간과 유사한 응답을 이해하고 생성하는 데 뛰어납니다. 이 게시물에서는 Claude 3.5와 Vanna AI를 사용하여 데이터베이스와 상호 작용하기 위한 텍스트-SQL 파이프라인을 구축하는 방법을 시연하겠습니다.\n\n마지막으로, Claude의 SQL 작업 성능을 OpenAI 모델과 비교한 결과를 보여드렸습니다.\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-06-27-BuildatexttoSQLchatbotwithClaude-Sonnet35_1.png)\n\n![image](/assets/img/2024-06-27-BuildatexttoSQLchatbotwithClaude-Sonnet35_2.png)\n\n# 시작하기\n\n```js\nfrom vanna.vannadb.vannadb_vector import VannaDB_VectorStore\nfrom vanna.base import VannaBase\nfrom vanna.anthropic.anthropic_chat import Anthropic_Chat\n\n\nclass MyVanna(VannaDB_VectorStore, Anthropic_Chat):\n    def __init__(self, config=None):\n        MY_VANNA_MODEL =  # https://vanna.ai/account/profile에서 가져온 모델 이름\n        VannaDB_VectorStore.__init__(self, vanna_model=MY_VANNA_MODEL, vanna_api_key= # Vanna_API 키를 여기에 입력, config=config)\n        Anthropic_Chat.__init__(self, config=config)\n\napi_key = # 여기에 API 키를 입력해 주세요\n# 모델을 원하는 Anthropic 모델로 변경할 수 있습니다\n# Sonnet와 Haiku를 사용할 수 있지만, 이 포스트에서는 Opus를 사용합니다\nmodel = \"claude-3.5-sonnet-20240620\"\nconfig = {'api_key':api_key, 'model':model}\n\n# 설정을 MyVanna 객체에 전달합니다\nvn = MyVanna(config=config)\r\n``` \n\n\n<div class=\"content-ad\"></div>\n\n# 데이터베이스 연결하기\n\nVanna에는 이러한 8개의 데이터베이스에 대한 내장 커넥터가 있습니다 (추가 몇 줄의 코드로 다른 데이터베이스에 연결할 수도 있습니다):\n\n- Postgres SQL\n- Oracle\n- DuckDB\n- MySQL\n- SQLite\n- Big Query\n- Snowflake\n- Microsoft SQL\n\n문서를 확인하면 특정 데이터베이스에 연결하는 방법을 이해할 수 있습니다. 이 게시물의 목적을 위해, 저는 DuckDB StackOverFlow 데이터베이스에 연결할 것입니다. 데이터베이스는 여기에서 찾을 수 있습니다!\n\n<div class=\"content-ad\"></div>\n\n```js\n# DuckDB 데이터베이스에 연결하는 방법입니다\nvn.connect_to_duckdb(url='motherduck:[<데이터베이스_이름>]?motherduck_token=<토큰>&saas_mode=true')\n```\n\n# 교육\n\n<img src=\"/assets/img/2024-06-27-BuildatexttoSQLchatbotwithClaude-Sonnet35_3.png\" />\n\n# 플랜(정보 스키마)에 대한 교육\n\n\n<div class=\"content-ad\"></div>\n\n```js\n# 데이터베이스에 따라 정보 스키마 조회 쿼리를 조정해야 할 수도 있습니다. 이것은 좋은 시작점입니다.\ndf_information_schema = vn.run_sql(\"SELECT * FROM INFORMATION_SCHEMA.COLUMNS\")\n```\n\n```js\n# 이 코드는 정보 스키마를 작은 조각으로 나누어서 LLM이 참조할 수 있도록 합니다.\nplan = vn.get_training_plan_generic(df_information_schema)\nplan\n```\n\n```js\n# Plan이 마음에 드시면 이 부분을 주석 해제하고 실행하여 학습시키세요.\nvn.train(plan=plan)\n```\n\n# DDL 학습하기\n\n<div class=\"content-ad\"></div>\n\n```js\n# DuckDB에서 describe 문을 사용하여 모든 테이블의 DDL을 가져올 수 있어요\nvn.train(ddl=\"DESCRIBE SELECT * FROM Stackoverflow.users;\")\n```\n\n# SQL 문장에 대한 학습\n\n```js\n# SQL 문장에 대한 학습 예시 입니다.\nvn.train(\nquestion=\"뱃지 수가 가장 많은 상위 10명의 사용자는 누구인가요?\"\n,sql=\"\"\"SELECT UserId, COUNT(*) AS badge_count\nFROM stackoverflow.main.badges\nGROUP BY UserId\nORDER BY badge_count DESC\nLIMIT 10\n\"\"\")\n# 또 다른 예시\nvn.train(\nquestion=\"가장 많은 답변을 낸 사용자와 가장 작은 질문을 낸 사용자 간의 총 답변 차이는 무엇인가요?\", \n,sql=\"SELECT MAX(answer_count) - MIN(answer_count) AS difference\nFROM (\n    SELECT OwnerUserId, COUNT(*) AS answer_count\n    FROM stackoverflow.main.posts\n    WHERE PostTypeId = 2\n    GROUP BY OwnerUserId\n) AS answer_counts;\n\")\n```\n\n# 문서에 대한 학습\n\n<div class=\"content-ad\"></div>\n\n```js\n# vn.train(documentation=\"We call the user with the highest answers in a year the Grand master\")을 사용하여 맥락 정보를 제공할 수 있습니다.\n```\n\nvn.get_training_data()를 사용하여 훈련 데이터를 확인할 수 있습니다.\n\n```js\n# vn.ask는 다음 함수들을 순차적으로 실행하는데, 각각을 개별적으로 실행할 수 있습니다\n# 1. vn.generate_ql\n# 2. vn.run_sql\n# 3. vn.generate_plotly_code\n# 4. vn.get_plotly_figure\n```\n\n```js\n# 훈련 후 Vanna에게 질문할 수 있는 방법\nvn.ask('가장 많은 배지를 보유한 상위 10명의 사용자를 찾아주세요?')\n```\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-27-BuildatexttoSQLchatbotwithClaude-Sonnet35_4.png\" />\n\n# Flask 앱 사용하기\n\nVanna에는 내장된 UI Flask 앱이 포함되어 있습니다. 이는 주피터 노트북이나 Python 스크립트 내에서 실행할 수 있습니다.\n\n```js\nfrom vanna.flask import VannaFlaskApp\napp = VannaFlaskApp(vn)\napp.run()\n```\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-06-27-BuildatexttoSQLchatbotwithClaude-Sonnet35_5.png)\n\n# 벤치마크\n\n클로드 소넷 3.5와 GPT 4o를 비교해보았습니다. 우리가 준비한 벤치마크를 사용하여 비교해보았습니다. (스키마 전용은 Vanna가 데이터 정의 언어(DDL)에만 훈련되었음을 나타내며, 스키마 및 참조 SQL은 SQL 질문 쌍에 대해 훈련되었음을 나타냅니다.)\n\n## 스키마 전용\n\n\n<div class=\"content-ad\"></div>\n\n\n<img src=\"/assets/img/2024-06-27-BuildatexttoSQLchatbotwithClaude-Sonnet35_6.png\" />\n\nClaude sonnet 3.5 performs rather poorly compared with other LLMs when only trained on schema information. Which is odd.\n\n## Schema-and-reference-SQL\n\n<img src=\"/assets/img/2024-06-27-BuildatexttoSQLchatbotwithClaude-Sonnet35_7.png\" />\n\n\n<div class=\"content-ad\"></div>\n\n상당히 놀라운 사실인데, 레퍼런스 SQL과 SQL 질문 쌍을 사용하여 훈련시킨 Claude-3.5가 모든 다른 LLM들보다 우수한 성능을 보이고 있습니다.\n\n# 평균\n\n![이미지](/assets/img/2024-06-27-BuildatexttoSQLchatbotwithClaude-Sonnet35_8.png)\n\n따라서, 두 점수의 평균을 내면, Claude-Sonnet 3.5는 GPT-4o와 비슷한 범위의 성능을 보여줍니다.\n\n<div class=\"content-ad\"></div>\n\n읽어 주셔서 감사합니다!","ogImage":{"url":"/assets/img/2024-06-27-BuildatexttoSQLchatbotwithClaude-Sonnet35_0.png"},"coverImage":"/assets/img/2024-06-27-BuildatexttoSQLchatbotwithClaude-Sonnet35_0.png","tag":["Tech"],"readingTime":5},{"title":"머신러닝 및 마케팅 인텔리전스를 위한 고도로 확장 가능한 데이터 수집 아키텍처 구축 방법","description":"","date":"2024-06-27 18:44","slug":"2024-06-27-BuildingHighlyScalableDataIngestionArchitectureforMachineLearningandMarketingIntelligence","content":"\n\n## 확장 가능하고 적응 가능한 데이터 파이프라인을 위한 AWS 생태계 및 데이터 크롤링 활용\n\n데이터가 없는 머신 러닝은 재료 없는 요리사와 같습니다. 모든 기술은 있지만 요리할 재료가 없죠.\n\n요즘은 모든 것이 데이터를 중심으로 돌아갑니다. 온라인에서 보는 맞춤형 광고부터 스트리밍 서비스의 추천까지 모든 것이 데이터에 의해 이끌립니다. 데이터는 비즈니스, 의료 및 심지어 스포츠에서 의사 결정을 이끌고 있습니다. 데이터가 없다면 우리의 앱은 당혹해지고, 스마트 기기는 멍청해지며, 우리의 예측은 단순히 추측 이상의 것이 되지 못할 것입니다. 디지털 시대에 있어서 데이터는 그저 새로운 석유가 아니라 혁신과 효율성의 생명수입니다.\n\n좋아요, 하지만 왜 또 다른 데이터 수집에 관한 글을 써야 할까요?\n\n<div class=\"content-ad\"></div>\n\n지금까지 새로 만들어진 많은 도구들 때문에, 최상의 도구를 선택하는 일이 어렵다는 것을 잘 알고 있습니다. 대부분의 경우, 가장 적합한 도구는 프로젝트의 특정 요구 사항에 따라 다릅니다.\n\n이 기사에서는 특정 영역, 마케팅 인텔리전스를 위해 맞춤형으로 구축된 종단간 솔루션을 탐색해볼 것입니다. AWS의 통합된 서비스 생태계를 활용하여 고도로 확장 가능한 데이터 수집 파이프라인을 구축할 수 있으며, 이것을 사용하여 웹을 탐색하고 데이터를 수집하여 영업, 경쟁사 분석, 시장 분석, 고객 인사이트 등 다양한 분석 프로세스에 연결할 수 있습니다.\n\n또한 이 솔루션 구축 과정에서 마주한 일련의 도전 과제를 소개하고 싶습니다. 대부분의 답변은 인터넷 상에 흩어져 있어 완벽한 작동 솔루션을 찾기가 어려울 수 있습니다... 전체 솔루션 코드는 GitHub에서 확인하실 수 있습니다.\n\n중요 사항: 이 솔루션에 뛰어들기 전에, 소셜 미디어 페이지와 같은 일부 데이터 소스로부터 데이터를 수집하는 것의 법적 영향에 대해 인식해야 합니다. 무분별한 데이터 수집으로 인해 아무도 옥살이 가진 않도록 주의해야 합니다. 각 주요 플랫폼의 이용약관을 꼭 읽어보십시오; 이것들은 사용자 프로필과 비공개 페이지의 수집을 제한할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n# 목차\n\n- 아키텍처 개요\n- 구현\n- 도전과 함정\n- 로컬 테스트\n- 배포\n\n# 1. 아키텍처 개요\n\n우리가 구축하려는 것입니다:\n\n<div class=\"content-ad\"></div>\n\n다음은이 아키텍처로 달성하려고하는 일부 비기능 요구 사항입니다.\n\n- 확장성: 이 솔루션을 최대한 많은 페이지를 동시에 처리하고 추가 페이지를 신경 쓰지 않고 추가할 수 있도록 하여 언제든지 시스템이 성장량을 처리할 수 있도록했습니다.\n- 유지 보수 및 적응성:이 시스템의 각 구성 요소를 개발 시간을 많이 소비하지 않고 쉽게 변경하고 확장할 수 있도록 설계했습니다.\n\n## 구성 요소 개요:\n\n스케줄러: 이름에서도 알 수 있듯이 여러 역할을 수행하지만 가장 중요한 역할은 가지고있는 각 페이지 링크에 대해 크롤러 lambdas를 트리거하는 것입니다.\n\n<div class=\"content-ad\"></div>\n\n크롤러: 이름만 봐도 목적이 명확하죠. '크롤링' 이 용어가 익숙하지 않다면, 계속 진행하기 전에 이 기사를 멈추고 한 번 살펴보세요. 이 구성 요소는 페이지 링크를 가져와 다양한 게시물 및 관련 정보를 추출하는 역할을 합니다. 구현 부분에서 자세한 내용이 소개될 거예요.\n\n데이터베이스: 데이터 레이크 저장소 인스턴스에는 추후 사용할 게시물이 저장됩니다. 이를 위해 저는 MongoDB를 선택했어요. 대부분의 게시물은 구조화되지 않은 텍스트 데이터지만, 그 중에서도 유용한 정보를 추출할 수 있고 Mongo는 반구조화된 데이터를 처리하는 데 뛰어납니다.\n\n그래서 당신의 솔루션의 전체 흐름을 표시하려면, 스케줄러가 각 페이지마다 크롤러 람다 인스턴스를 트리거하여 페이지 이름과 링크를 보냅니다. 크롤러는 지난 주에 발행된 게시물을 추출하고, 원시 콘텐츠와 게시물 생성 날짜, 링크 자체, 그리고 이름을 저장합니다. 이 멈추지 않아요. 플랫폼이 제공하는 내용에 따라 더 많은 정보를 추출할 수 있어요.\n\n그런 다음 스케줄러는 모든 람다 인스턴스가 실행을 완료할 때까지 기다렸다가 데이터베이스에서 추출된 게시물을 집계하고, 일부 프롬프트 템플릿을 사용하여 게시물과 함께 이를 ChatGPT에 전송하여 몇 가지 보고서를 생성합니다.\n\n<div class=\"content-ad\"></div>\n\n## 도구 및 라이브러리:\n\n- Selenium: 웹 브라우저 자동화 도구입니다. 직접 사용한 적은 없지만 이 솔루션에 포함된 크롤링 라이브러리에서 사용됩니다.\n- AWS Lambda: 뛰어난 동시성 능력을 제공해줍니다. 기본 할당량은 1000개의 동시 lambda 함수이며, 필요에 따라 수십만으로 증가할 수 있습니다.\n- Eventbridge: 서버리스 이벤트 버스로 여러 애플리케이션을 AWS 생태계에서 연결할 수 있습니다. 저는 cron 규칙을 통해 스케줄러를 자동으로 트리거하는 데 사용했습니다.\n- CloudWatch: 로그 모니터링과 알람 서비스로 사용됩니다.\n- Instaloader: Instagram에서 메타데이터를 추출하기 위한 오픈 소스 도구입니다.\n- Langchain: Large Language Models 주변에 애플리케이션을 만들 수 있게 해주는 강력한 프레임워크입니다.\n- Pulumi: 인프라를 코드로 작성할 수 있게 해주는 도구로, 여러 언어로 인프라를 코드로 작성할 수 있습니다. Terraform과 CDK가 합쳐진 것으로 이해하시면 됩니다.\n\n# 2. 구현\n\n이 섹션에서는 주요 구성 요소에 대한 상세한 개요를 제공하고, 코드 샘플과 설명으로 내용을 분해해 드리겠습니다.\n\n<div class=\"content-ad\"></div>\n\n## 2.1 스케줄러\n\n이 문서에 공유된 모든 코드와 함께 여기에서 찾을 수 있는 보고 부분에 너무 많은 초점을 두지는 않겠습니다. 여기의 주요 역할은 스케줄링 부분이며, 전체 흐름이 시작되고 조절되는 시스템의 주요 진입점입니다:\n\n```js\nimport json\nimport os\nimport time\nfrom datetime import datetime, timedelta\n\nimport boto3\nfrom aws_lambda_powertools import Logger\nfrom aws_lambda_powertools.utilities.typing import LambdaContext\n\nfrom src.constants import PAGE_LINK\nfrom src.db import database\nfrom src.utils import monitor\n\nlogger = Logger(service=\"decodingml/scheduler\")\n\n_client = boto3.client(\"lambda\")\n\ndef lambda_handler(event, context: LambdaContext):\n    correlation_ids = []\n\n    for link in PAGE_LINK:\n        response = _client.invoke(\n            FunctionName=\"lambda\",\n            InvocationType=\"Event\",\n            Payload=json.dumps({\"link\": link}),\n        )\n        logger.info(f\"Triggered crawler for: {link}\")\n\n        correlation_ids.append(response[\"ResponseMetadata\"][\"RequestId\"])\n\n    logger.info(f\"Monitoring: {len(correlation_ids)} crawler processes\")\n\n    while True:\n        time.sleep(15)\n        completed = monitor(correlation_ids)\n\n        correlation_ids = [c for c in correlation_ids if c not in completed]\n\n        if not correlation_ids:\n            break\n\n        logger.info(f\"Still waiting for {len(correlation_ids)} crawlers to complete\")\n\n    now = datetime.now()\n    posts = list(\n        database.profiles.find(\n            {\n                \"date\": {\"$gte\": (now - timedelta(days=7)), \"$lte\": now},\n            }\n        )\n    )\n\n    logger.info(f\"Gathered {len(posts)} posts\")\n\n    if not posts:\n        logger.info(\"Cannot generate report, no new posts available\")\n        return\n\n    reports = generate_profiles_report(posts)\n\n    logger.info(\"Generated new report!\")\n```\n\n보시다시피, 스케줄러는 산발자 역할을 합니다. 페이지 링크 목록을 반복하며 InvocationType 매개변수를 Event로 설정하여 크롤러를 비동기적으로 호출합니다. 이렇게 함으로써 스케줄러가 단일 페이지를 기다리기 위해 전체 프로세스를 차단하지 않도록 합니다.\n\n<div class=\"content-ad\"></div>\n\n그럼, 각 람다의 상관 ID를 목록에 저장하고 모든 람다가 실행을 완료할 때까지 기다립니다. 저는 15초의 대기 시간을 정의했어요; 여러분이 크롤러가 작업을 완료하는 데 걸리는 평균 시간에 따라 조절하셔서 Cloudwatch를 그렇게 자주 호출하지 않도록 하세요.\n\n마지막으로, 이 페이지에서 모든 크롤된 게시물을 찾아서 보고서 생성 단계로 보냅니다.\n\n## 2.2 크롤러\n\n여기서 실제 크롤링 프로세스를 세분화해서 설명할 거예요. 좋은 소프트웨어 관행이 적용되어 있어서 이를 쉽게 따라갈 수 있어요 [계속하기]\n\n\n<div class=\"content-ad\"></div>\n\n```js\r\nimport abc\nimport os\nfrom datetime import datetime, timedelta\nfrom itertools import takewhile, dropwhile\nfrom typing import List, Dict, Any\n\nimport instaloader\n\nfrom src.crawlers.base import BaseAbstractCrawler\n\nclass BaseAbstractCrawler(abc.ABC):\n\n    @abc.abstractmethod\n    def extract(self, link: str, **kwargs) -> None: ...\n\n\nclass InstagramCrawler(BaseAbstractCrawler):\n\n    def __init__(self, link: str, proxy=None):\n        self.link = link\n        self.loader = instaloader.Instaloader()\n        self._until = datetime.now()\n        self._since = self._until - timedelta(days=7)\n        self._proxy = proxy\n\n    def extract(self, **kwargs) -> List[Dict[str, str | Any]]:\n        parsed_url = urlparse(self.link)\n\n        if self._proxy:\n            os.environ['https_proxy'] = self._proxy.__dict__().get('http')\n        profile = instaloader.Profile.from_username(self.loader.context, parsed_url.path.strip('/').split('/')[0])\n        posts = takewhile(lambda p: p.date > self._since, dropwhile(lambda p: p.date > self._until, profile.get_posts()))\n\n        return [\n            {'content': post.caption, 'date': post.date, 'link': self.link}\n            for post in posts\n        ]\r\n```\n\n여기에는 모든 유형의 크롤러를 위한 주요 추상화 지점을 정의했습니다. 모든 파생된 크롤러가 구현해야 하는 공통 인터페이스를 정의하고 모든 하위 클래스는 extract() 메서드에 대한 자체 구현을 제공해야 합니다. 따라서 새로운 크롤러를 작성해야 할 때마다 이 추상화에서 재사용성과 일관성을 많이 얻을 수 있습니다. 더 나아가, 그 아래에 나타나는 귀중한 이점을 제시하겠습니다:\n\n```js\r\nimport re\n\nfrom src.crawlers.base import BaseAbstractCrawler\nfrom src.crawlers.instagram import InstagramCrawler\n\n\nclass CrawlerDispatcher:\n\n    def __init__(self) -> None:\n        self._crawlers = {}\n\n    def register(self, domain: str, crawler: type[BaseAbstractCrawler]) -> None:\n        self._crawlers[r\"https://(www\\.)?{}.com/*\".format(re.escape(domain))] = crawler\n\n    def get_crawler(self, url: str) -> BaseAbstractCrawler:\n        for pattern, crawler in self._crawlers.items():\n            if re.match(pattern, url):\n                return crawler()\n        else:\n            raise ValueError(\"No crawler found for the provided link\")\n\n\ndispatcher = CrawlerDispatcher()\ndispatcher.register('instagram', InstagramCrawler)\r\n```\n\n각 크롤러를 쉽게 홍보하고 자동으로 호출할 수 있도록 만들고 싶었습니다. 이 경우, 제공된 링크를 기반으로 올바른 크롤러 클래스를 선택하고 인스턴스화하는 역할을 하는 디스패처를 구축했습니다. 이는 실제로 크롤러에 대한 레지스트리 및 팩토리로 작동하며 우리가 이들을 위해 생성한 통일된 인터페이스와 구조 아래에서 이를 관리합니다. 이에는 특정한 이점이 있습니다. 여기서 소개하겠습니다:\n\n<div class=\"content-ad\"></div>\n\n- 유연성 및 확장성: 이 구성 요소는 기존 코드베이스를 수정하지 않고 더 쉽게 추가할 수 있는 가능성을 제공합니다. 이를 통해 시스템을 쉽게 확장할 수 있어 더 많은 도메인과 특수 크롤러를 포함시키고자 하는 경우, 그냥 연결하고 작동시킬 수 있습니다.\n- 캡슐화 및 모듈화: 디스패처는 링크에 기반한 어떤 크롤러를 사용할지 결정하는 로직을 캡슐화합니다. 이를 통해 시스템을 더 모듈식으로 만들고 각 크롤러가 핵심 비즈니스 로직에 집중할 수 있도록 패턴 매칭에 대해 걱정하지 않고 작동할 수 있습니다.\n\n```python\nfrom datetime import datetime, timedelta\n\nfrom aws_lambda_powertools import Logger\nfrom aws_lambda_powertools.utilities.typing import LambdaContext\n\nfrom src.crawlers import dispatcher\nfrom src.db import database\n\nlogger = Logger(service=\"decodingml/crawler\")\n\n\ndef lambda_handler(event, context: LambdaContext):\n\n    link = event.get('link')\n\n    logger.info(f\"{link}에 대한 포스트 추출 시작\")\n\n    crawler = dispatcher.get_crawler(event.get('link'))\n\n    posts = [{**page, 'correlation_id': context.aws_request_id} for page in crawler.extract()]\n\n    now = datetime.now()\n    existing_posts = database.profiles.find({\n        \"date\": {\"$gte\": (now - timedelta(days=7)), \"$lte\": now},\n        \"name\": link\n    }, projection={'date': 1})\n\n    existing_posts = [post.get('date') for post in list(existing_posts)]\n\n    posts = [post for post in posts if post.get('date') not in existing_posts]\n\n    if not posts:\n        logger.info(\"페이지에 새로운 포스트가 없습니다\")\n        return\n\n    logger.info(f\"{len(posts)}개의 포스트를 성공적으로 추출했습니다\")\n    database.profiles.insert_many(posts)\n    logger.info(\"데이터를 성공적으로 데이터베이스에 추가했습니다\")\n```\n\n여기서 이벤트 본문에서 링크를 가져와 올바른 크롤러를 선택하고 추출 작업을 시작하는 주요 진입점을 조립했습니다. 작업이 완료되면 데이터베이스에 이미 추가된 포스트가 있는지 확인하여 불필요한 중복을 추가하지 않도록하고, 그런 다음 포스트를 추가합니다.\n\n# 3. 도전과 위험부분\n\n<div class=\"content-ad\"></div>\n\n## 3.1 람다 런타임 환경에서 세레니움을 사용하여 무인 브라우저 인스턴스 실행하기\n\n가장 열등함과 악몽을 주었던 부분이라고 생각합니다. 람다 실행 환경은 읽기 전용이기 때문에 디스크에 쓰기를 원하는 모든 작업은 일시적인 파일에 수행해야 합니다. 이는 이진 드라이버를 자동으로 설치하는 꿈을 망할 것입니다. 따라서 도커 이미지에서 직접 설치하고 Selenium의 드라이버 옵션에서 수동으로 참조해야 합니다. 이 설정에 사용할 수 있는 유일한 드라이버는 Google의 이진 드라이버였습니다.\n\n```js\nFROM  public.ecr.aws/lambda/python:3.11 as build\n\n# 크롬 드라이버 및 브라우저를 다운로드하고 수동으로 해당 폴더에 풀기\nRUN yum install -y unzip && \\\n    curl -Lo \"/tmp/chromedriver-linux64.zip\" \"https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/119.0.6045.105/linux64/chromedriver-linux64.zip\" && \\\n    curl -Lo \"/tmp/chrome-linux64.zip\" \"https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/119.0.6045.105/linux64/chrome-linux64.zip\" && \\\n    unzip /tmp/chromedriver-linux64.zip -d /opt/ && \\\n    unzip /tmp/chrome-linux64.zip -d /opt/\n\nFROM  public.ecr.aws/lambda/python:3.11\n\n# yum을 사용하여 함수의 OS 종속성 설치\nRUN yum install -y \\\n    atk \\\n    cups-libs \\\n    gtk3 \\\n    libXcomposite \\\n    alsa-lib \\\n    libXcursor \\\n    libXdamage \\\n    libXext \\\n    libXi \\\n    libXrandr \\\n    libXScrnSaver \\\n    libXtst \\\n    pango \\\n    at-spi2-atk \\\n    libXt \\\n    xorg-x11-server-Xvfb \\\n    xorg-x11-xauth \\\n    dbus-glib \\\n    dbus-glib-devel \\\n    nss \\\n    mesa-libgbm \\\n    ffmpeg \\\n    libxext6 \\\n    libssl-dev \\\n    libcurl4-openssl-dev \\\n    libpq-dev\n\nCOPY --from=build /opt/chrome-linux64 /opt/chrome\nCOPY --from=build /opt/chromedriver-linux64 /opt/\n\nCOPY ./pyproject.toml ./poetry.lock ./\n\n# Poetry 설치, 종속성을 requirements.txt로 내보내고 Lambda 작업 디렉토리에 종속성 설치, 최종적으로 manifest 파일 정리\nRUN python3 -m pip install --upgrade pip && pip install poetry\nRUN poetry export -f requirements.txt > requirements.txt && \\\n    pip3 install  --no-cache-dir -r requirements.txt --target \"${LAMBDA_TASK_ROOT}\" && \\\n    rm requirements.txt pyproject.toml poetry.lock\n\n# 함수 코드 복사\nCOPY ./src ${LAMBDA_TASK_ROOT}/src\r\n```\n\n이 Dockerfile의 주요 아이디어는 Chrome 드라이버와 브라우저를 수동으로 다운로드하고 Selenium에서 액세스할 수 있는 위치에 푼 것입니다. 일반적으로는 이를 직접 수행했을 것입니다.\n\n<div class=\"content-ad\"></div>\n\n람다 환경에서 필수적인 단계입니다. 모든 것이 읽기 전용이기 때문에 다음 코드 샘플에서 Selenium을 올바른 드라이버 및 브라우저 위치로 연결하는 방법을 보여드리겠습니다:\n\n```js\nfrom tempfile import mkdtemp\n\ndef init_driver(self):\n    options = Options()\n    # 드라이버 이진 파일 위치 수동으로 설정\n    options.binary_location = '/opt/chrome/chrome'\n    # 브라우저를 헤드리스 모드로 실행\n    options.add_argument('--headless=new')\n    options.add_argument('--no-sandbox')\n    options.add_argument('--single-process')\n    options.add_argument('--window-size=1420,1080')\n    options.add_argument('--disable-dev-shm-usage')\n    options.add_argument('--disable-gpu')\n    options.add_argument('--disable-popup-blocking')\n    options.add_argument('--disable-notifications')\n    options.add_argument('--disable-dev-tools')\n    options.add_argument('--log-level=3')\n    options.add_argument('--ignore-certificate-errors')\n    options.add_argument(\"--no-zygote\")\n    options.add_argument(f\"--user-data-dir={mkdtemp()}\")\n    options.add_argument(f\"--data-path={mkdtemp()}\")\n    options.add_argument(f\"--disk-cache-dir={mkdtemp()}\")\n    options.add_argument('--remote-debugging-port=9222')\n\n    self._driver = webdriver.Chrome(\n        service=Service(\"/opt/chromedriver\"),\n        options=options,\n    )\n```\n\n여기서 Dockerfile에 설치한 드라이버 및 브라우저 위치를 하드코딩했습니다.\n\n일부 임시 디렉토리 위치로 몇 가지 폴더를 지정했음을 볼 수 있습니다. user-data-dir, disk-cache-dir 및 disk-cache-dir를 참조합니다. Selenium은 이러한 디렉토리를 자동으로 생성할 것이며, 람다의 디스크 제한으로 인해 수동으로 설정하지 않으면 오류가 발생할 수 있기 때문에 이러한 설정을 수동으로 지정하려고 합니다.\n\n<div class=\"content-ad\"></div>\n\n## 3.2 빈 페이지를 집계합니다\n\n첫 번째 모니터링 알고리즘은 꽤 기본적이었습니다. 각 람다 호출의 상관 ID를 루프로 돌며, 생성된 게시물을 데이터베이스에서 확인했습니다. 그런데 어떤 페이지에서는 내가 검색한 시간 범위 내에 새로운 게시물이 생성되지 않은 경우가 발생하여 알고리즘이 무한 루프에 빠졌습니다.\n\n그 후 CloudWatch 로그를 활용하기 위한 아이디어를 떠올렸습니다: \n\n```js\nimport datetime\nimport re\nfrom typing import List\n\nimport boto3\n\n_client = boto3.client('logs')\n\n\ndef monitor(correlation_ids: List[str]):\n    finished = []\n\n    now = int((datetime.datetime.now() - datetime.timedelta(days=1)).timestamp() * 1000)\n\n    response = _client.filter_log_events(\n        logGroupName='/aws/lambda/crawler',\n        startTime=now,\n        filterPattern=\"REPORT RequestId\"\n    )\n\n    for event in response['events']:\n        match = re.search(r'REPORT RequestId: ([^\\s]+)', event.get('message'))\n        if match:\n            correlation_id = match.group(1)\n            if correlation_id in correlation_ids:\n                finished.append(correlation_id)\n\n    return finished\n```\n\n<div class=\"content-ad\"></div>\n\n현재 날짜에 생성된 각 람다의 모든 로그 스트림을 검색하고 일반적으로 다음 형식을 갖는 메시지를 찾습니다: REPORT RequestId: `correlation_id`. 이는 람다가 실행의 끝에 도달했음을 나타내며, 나는 어떤 correlation ID가 완료되었는지 표시할 수 있습니다.\n\n## 3.3 소셜 미디어 플랫폼에서 차단되지 않도록 방지\n\n이것은 안타까운 오류였습니다 - 여러 날을 썼을 가능성이 있는 종류의 오류였고, 해결책은 다른 관점에서 문제를 관찰하는 것이었습니다. 인기 있는 소셜 미디어 플랫폼은 크롤링을 방지하기 위해 다양한 안티-봇 보호 메커니즘을 구현합니다. 요청 헤더 분석부터 속도 제한, IP 차단까지 다양한 방법을 사용합니다.\n\n그리고 현실적인 사용자-브라우저 상호작용을 모방하기 위해 브라우저를 헤드리스 모드로 실행하고 모든 크롤러가 동일한 IP 주소로 여러 페이지에 동시에 반복적으로 요청을 보내는 경우, 이는 '제발 차단해 주세요' 라고 소리칩니다.\n\n<div class=\"content-ad\"></div>\n\n이 문제에 대처하려면 IP 주소 및 위치를 가리기 위해 프록시를 사용했습니다:\n\n```js\nimport os\n\n\nclass ProxyConnection:\n\n    def __init__(\n        self,\n        host: str = None,\n        port: str = None,\n        username: str = None,\n        password: str = None,\n        verify_ssl: bool = False\n    ):\n        self.host = host or os.getenv('PROXY_HOST')\n        self.port = port or os.getenv('PROXY_PORT')\n        self.username = username or os.getenv('PROXY_USERNAME')\n        self.password = password or os.getenv('PROXY_PASSWORD')\n        self.verify_ssl = verify_ssl\n        self._url = f\"{self.username}:{self.password}@{self.host}:{self.port}\"\n\n    def __dict__(self):\n        return {\n            'https': 'https://{}'.format(self._url.replace(\" \", \"\")),\n            'http': 'http://{}'.format(self._url.replace(\" \", \"\")),\n            'no_proxy': 'localhost, 127.0.0.1',\n            'verify_ssl': self.verify_ssl\n        }\n```\n\n좋은 프록시 솔루션이 많이 있습니다. 그러나 SmartProxy와 같은 유료 프록시를 추천해드릴게요. 이 솔루션은 회전하는 프록시 IP 풀을 제공하여 각 크롤러에 대해 다른 IP를 할당할 수 있습니다.\n\n이렇게 하면 다른 위치에서 페이지에 액세스하려는 일반 사용자처럼 보일 것입니다.\n\n<div class=\"content-ad\"></div>\n\n여기 한가지 주의할 점이 있어요: 많은 소셜 미디어 플랫폼은 로그인하지 않은 사용자들에게 심지어 공개 페이지에 접근을 제한하는 경우가 많아요. 그래서 프록시를 사용하여 이 제한이 없는 나라를 찾아 해당 국가의 IP 주소를 얻을 수 있어요.\n\n# 4. 로컬 테스트\n\n이 작업이 작동하는지 증명하기 위해, 크롤러와 람다에 대한 간단한 명령어를 포함한 메이크파일을 작성했어요. 문제는 크롤러만 로컬로 테스트했을 뿐이에요. 스케줄러는 크롤러를 활성화하기 때문에 이미 AWS에 배포되어 있어야 해요.\n\n```js\n로컬테스트-크롤러: # 람다를 테스트하기 위해 로컬에서 테스트 명령어를 전송해요\n curl -X POST \"http://localhost:9000/2015-03-31/functions/function/invocations\" \\\n  -d '{\"link\": \"https://www.instagram.com/mcdonalds\"}'\n\n로컬테스트-스케줄러: # 람다를 테스트하기 위해 로컬에서 테스트 명령어를 전송해요\n curl -X POST \"http://localhost:9000/2015-03-31/functions/function/invocations\" -d '{}'\n```\n\n<div class=\"content-ad\"></div>\n\n대부분의 사람들이 로컬 환경에서 람다 함수를 테스트할 때 AWS Lambda RIE (Runtime Interface Emulator)를 사용합니다. 이 도구는 람다 함수 패키지를 컨테이너에서 테스트할 수 있게 해줍니다. 기본적으로 로컬 머신에서 람다 실행 환경을 흉내냅니다. 제가 에뮬레이터를 사용하지 않고도 이것을 해낸 것을 보실 수 있습니다. 이것으로 제 환경이 약간 더 간편해졌습니다.\n\n각 구성 요소를 테스트하기 위해 이 명령어를 사용할 수 있습니다. 예를 들어, 크롤러를 테스트하고 싶다면 터미널에 다음 명령어를 입력하세요:\n\n```js\n> make local-test-crawler\n```\n\n크롤링 프로세스가 시작되었음을 확인하실 수 있습니다. 이 페이지에서는 지난 일주일 동안 세 개의 새로운 포스트를 찾았습니다:\n\n<div class=\"content-ad\"></div>\n\n# 5. 배포\n\n배포 프로세스는 ops 폴더 아래의 GitHub 저장소에서 정의되어 있습니다. 여기서 Pulumi로 작성된 전체 솔루션을 살펴볼 수 있습니다.\n\nMakefile을 활용할 수 있습니다. 인프라를 구축하고 실행하는 데 필요한 모든 명령어가 포함되어 있습니다.\n\n# 결론\n\n<div class=\"content-ad\"></div>\n\n이 기사에서는 여러 크롤 가능한 소스에서 기존 데이터를 활용하여 ML 트레이닝, 데이터 분석 등 다양한 프로세스를 위한 고도로 확장 가능한 데이터 수집 파이프라인을 구축하는 완전한 엔드 투 엔드 견고한 솔루션을 탐색했습니다.\n\n이 프로세스에서 마주칠 수 있는 구체적인 도전 과제와 이를 극복하는 방법을 살펴보았습니다.\n\n| 🔗 GitHub에서 코드를 확인하고 ⭐️로 지원해주세요\n\n이 기사를 쓰는 데 즐거움을 느꼈듯이 여러분도 이 기사를 즐겨주셨으면 좋겠습니다. 만약 그렇다면...\n\n<div class=\"content-ad\"></div>\n\n↓↓↓\n\n7.5천 명 이상의 엔지니어와 함께  𝗗𝗲𝗰𝗼𝗱𝗶𝗻𝗴 𝗠𝗟 𝗡𝗲𝘄𝘀𝗹𝗲𝘁𝘁𝗲𝗿의 전투 검증된 콘텐츠를 경험해보세요. 매주 업데이트되는 내용들을 놓치지 마세요:\n\n# 참고 자료\n\n[1] 파이썬으로 웹 스크래핑: 닌자처럼 감지 피하기\n\n<div class=\"content-ad\"></div>\n\n# 이미지\n\n그 외 명시되지 않은 경우, 모든 이미지는 저자가 제작한 것입니다.","ogImage":{"url":"/assets/img/2024-06-27-BuildingHighlyScalableDataIngestionArchitectureforMachineLearningandMarketingIntelligence_0.png"},"coverImage":"/assets/img/2024-06-27-BuildingHighlyScalableDataIngestionArchitectureforMachineLearningandMarketingIntelligence_0.png","tag":["Tech"],"readingTime":17},{"title":"- 데이터 시각화 과학 2023 방법과 트렌드- 데이터 시각화의 과학 시각화를 제대로 활용하는 법- 데이터 시각화의 최신 과학적 접근 방법- 최고의 데이터 시각화 기술과 과학적 원칙- 2024 데이터 시각화 과학 트렌드 및 사용 사례","description":"","date":"2024-06-27 18:42","slug":"2024-06-27-TheScienceofDataVisualization","content":"\n\n로히트 카르나타크의 글\n\n![데이터 시각화 과학](/assets/img/2024-06-27-TheScienceofDataVisualization_0.png)\n\n요즘의 디지털 시대에서 데이터는 단순히 스프레드시트에 제한되어 있는 숫자와 수치가 아니라, 밝혀지기를 기다리는 다양한 정보의 거대한 풍경이다. 데이터 시각화는 이 보물 창고를 열어보는 통로 역할을 하며, 복잡한 데이터셋을 매력적인 시각화로 변환하여 이야기, 트렌드 및 통찰을 전달합니다. 화려한 인포그래픽부터 상호작용형 대시보드까지, 데이터 시각화는 복잡한 정보를 해석하는 강력한 도구로 자리매깁니다.\n\n본 글에서는 예술성과 과학적 원칙이 어떻게 협력하여 효과적인 데이터 시각화를 형성하는지에 대해 논의합니다. 디자이너들은 감정을 일으키고 정보를 직관적으로 전달하기 위해 색상, 모양 및 시각적 요소를 신중하게 선택합니다. Information is Beautiful의 멋진 시각화를 고려해보세요. 여기서는 미적 우아함과 데이터 주도적인 이야기가 결합되어 원시 정보를 매력적인 예술 작품으로 바꾸어냅니다.\n\n<div class=\"content-ad\"></div>\n\n효과적인 데이터 시각화의 핵심은 과학적 엄격성에 있습니다. 데이터를 단순히 예쁘게 만드는 것뿐만 아니라 인지 심리학 및 인간-컴퓨터 상호작용 원칙을 적용하여 정확성, 명확성 및 의미 있는 표현을 보장하는 것을 의미합니다. 이 분야에서 흥미로운 작업 중 하나는 데이터 시각화 연구자 Fernanda Viégas와 Martin Wattenberg가 하는 작업입니다. 그들은 그들의 작업에서 예술, 과학 및 기술의 교차점을 탐구합니다. 그들은 탐구와 발견을 유도하는 대화형이고 매력적인 시각화를 만드는 데 집중합니다. 그들의 작품 중 하나인 \"풍력지도\"는 미국 전역의 풍속과 풍향을 애니메이션된 선과 색상을 사용하여 실시간으로 시각화하는데, 이것은 관람자들을 사로잡으며 날씨 패턴에 대한 유용한 통찰을 제공합니다.\n\n![Image](/assets/img/2024-06-27-TheScienceofDataVisualization_1.png)\n\n# 시각 지각\n\n연구자들은 사람들이 시각적 디자인으로부터 어떻게 지각하고 추론하는지 연구해왔습니다. 이 분야에서 매우 중요한 작업 중 하나는 겔트 원리입니다. 겔트 원리는 전체가 부분의 합보다 중요하다는 전체론의 철학에 기반하여 개발된 것입니다. 이러한 원리는 디자이너가 데이터 시각화를 조직화하고 구조화하여 이해를 용이하게 하고 전체 사용자 경험을 향상시킬 수 있도록 도와줍니다. 아래에서 겔트 원리의 몇 가지 예시를 소개합니다.\n\n<div class=\"content-ad\"></div>\n\n1. 근접성: 물체가 서로 가까우면 논리적으로 해당 물체가 동일한 그룹에 속한다고 생각합니다. 다음 예시는 기본 막대 차트를 사용하여 이 법칙을 설명합니다. 막대의 근접성 때문에 두 막대를 하나의 그룹으로 관련시킵니다. 또한, 이러한 막대와 라벨의 근접성이 논리적인 그룹화를 만듭니다.\n\n![Basic Bar Chart](/assets/img/2024-06-27-TheScienceofDataVisualization_2.png)\n\n2. 유사성: 요소들이 색상, 모양, 크기 등의 외적 특성을 공유하면 관련이 있다고 인식하거나 동일한 그룹의 일부로 여깁니다. 브라우저 시장 점유율의 다중 수준 파이 차트를 살펴보세요. 다중 수준 파이 차트가 색상을 사용하여 관련된 엔티티를 그룹화하고 다른 그룹과 구분하는 방법을 확인할 수 있습니다.\n\n![Multi-level Pie Chart](/assets/img/2024-06-27-TheScienceofDataVisualization_3.png)\n\n<div class=\"content-ad\"></div>\n\n3. 폐쇄: 인간은 완전한 모양을 선호합니다. 따라서 불완전한 시각 정보가 제시될 때 우리의 뇌는 누락된 갭을 채우기 위해 빠진 부분을 채우려고 합니다. 다음 도표는 몇 년간의 인구 변화를 나타냅니다. 이 도표에서는 1970년의 데이터가 누락되어 있습니다. 그러나 이 도표를 보면 우리의 마음이 자동으로 2개의 꺾인 선을 연결하는 라인을 상상합니다.\n\n![인구 변화](/assets/img/2024-06-27-TheScienceofDataVisualization_4.png)\n\n4. 연속성: 이 법칙은 우리의 눈이 서로 정렬된 것을 본능적으로 그룹화한다고 설명합니다. 인간의 눈은 선, 곡선 또는 모양의 일련의 순서를 따라 경로를 만듭니다. 막대 차트의 다음 예시를 살펴보면, 우리의 눈은 연속적인 경로를 따라가며 전체 차트를 더 읽기 쉽게 만듭니다. 자세히 살펴보면, 이 차트에서는 X축 라인을 사용하지 않았습니다. 그러나 우리는 연속성의 법칙으로 인해 이 막대들이 공통된 기준선을 공유하는 것으로 보입니다. \n\n![막대 차트](/assets/img/2024-06-27-TheScienceofDataVisualization_5.png)\n\n<div class=\"content-ad\"></div>\n\n# 인지 처리\n\n데이터 시각화는 사람들이 데이터와 상호작용할 때 관여되는 인지 처리를 이해함으로써 가장 효과적일 수 있습니다. 사람들이 데이터 시각화를 소비할 때 세 가지 인지 과정이 작용합니다 — 지각, 기억, 그리고 주의.\n\n- 지각: 이것은 인지 처리의 첫 번째 단계로, 시각 정보를 어떻게 해석하는지를 의미합니다. 맥락 설정은 데이터 시각화를 어떻게 인식하는지에 큰 역할을 합니다.\n- 기억: 이것은 데이터 시각화에 있는 정보를 어떻게 저장하고 검색하는지를 나타냅니다. 기억은 단기 기억이나 장기 기억이 될 수 있으며, 우리가 기존 지식에 기반해 데이터 시각화를 해석하는 데 도움을 줍니다.\n- 주의: 이것은 우리가 전체 데이터 스토리에서 일부 정보에 주의를 집중하거나 우선 순위를 정하는 방식을 나타냅니다.\n\n맥락과 이야기를 설정하고 전개함으로써 데이터 시각화에서 이러한 인지 과정을 가장 잘 활용하는 데 중요한 역할을 할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n- 배경정보는 데이터에 대한 정보를 제공하여 데이터를 이해하는 기준을 확립하는 것을 의미합니다. 배경정보는 이야기를 듣는 대상이 누구인지, 그리고 그들에게 이야기에서 무엇을 기대하는지를 확인하여 형성됩니다.\n- 반면에 서술은 데이터 비주얼을 활용하여 개발된 이야기를 의미합니다. 이는 데이터 비주얼로부터 일관된 메시지를 만들어냅니다.\n\n한 가지 예를 들어, 다양한 제품 카테고리로부터 회사의 월별 수익 데이터를 보여주는 막대 그래프를 살펴봅시다.\n\n![월별 수익 막대 그래프](/assets/img/2024-06-27-TheScienceofDataVisualization_6.png)\n\n이제 이 차트를 배경정보와 서술적 관점에서 살펴보겠습니다.\n\n<div class=\"content-ad\"></div>\n\n여러분을 배려해 테이블 태그를 마크다운 형식으로 변경했습니다.\n\n<div class=\"content-ad\"></div>\n\n- 소개: 그래프는 두 카테고리 모두에 대한 매월 총 수익을 보여주는 포괄적인 개요로 시작합니다.\n- 가운데: 구체적인 주석을 통해 수익의 증감을 설명한 상세한 월별 수익이 강조되어 있습니다. 예를 들어, 4월의 봄 컬렉션 런칭과 7월의 여름 세일은 수익 흐름의 변화와 직접적으로 연관이 있습니다.\n- 결론: 수익의 성과를 요약하고 실행 가능한 다음 단계를 제안하는 주요 통찰과 권고사항이 제공됩니다. 예를 들면, 연휴 시즌에 마케팅 노력을 더 집중하여 수익을 증대시키는 등의 조치가 포함됩니다.\n\n본 설명은 데이터를 통해 시청자를 안내하여 이야기를 더 잘 이해하고 주요 포인트를 파악하며 제공된 통찰력을 기반으로 적절한 조치를 취할 수 있도록 돕습니다.\n\n# 색이론\n\n색은 매우 주관적인 측면입니다. 서로 다른 색 구성표는 서로 다른 사용자에게 적합합니다. 그러나 연구자와 실전가들은 증거 기반의 색 이론을 개발하는 데 상당한 노력을 기울이고 있습니다. 색 이론은 데이터 시각화에서 색을 전략적으로 활용하는 데 중요한 역할을 하며 시각적 표현이 시청자에게 통찰과 패턴을 효과적으로 전달하도록 보장합니다.\n\n<div class=\"content-ad\"></div>\n\n한번 속성을 색상을 이용해 나타낼 결정했다면, 중요한 것 중 하나는 데이터에 필요한 색상 스케일 유형을 선택하는 것입니다. 데이터는 일반적으로 3가지 유형의 스케일에 속하며 각 스케일마다 색상 팔레트에서 다른 색조 집합을 요구합니다:\n\n순차적 색상 스케일은 낮은 값부터 높은 값까지 진행하는 데이터에 사용됩니다. 이러한 스케일은 값의 진행이 중요한 순서를 나타내는 데 이상적입니다. 일반적으로 순차 스케일은 색조를 단일한 색조로 사용하며 그 강도나 밝기가 변할 수 있습니다. 예를 들어 국가 전역에서 월별로 평균 온도를 보여주는 달력 열 지도에서 더 밝은 색상은 더 낮은 온도를, 더 어두운 색상은 더 높은 온도를 나타낼 수 있습니다.\n\n![이미지](/assets/img/2024-06-27-TheScienceofDataVisualization_7.png)\n\n분기 색상 스케일은 중요한 중간점 또는 중요한 값(예: 제로) 주위에 데이터가 발산하는 경우에 사용됩니다. 이 스케일은 데이터가 중심점에서 어떻게 벗어나는지 보여주기에 유용합니다. 일반적으로 중립색 중간점에서 발산하는 두 개의 대조적인 색조를 사용합니다. 예를 들어 아래 그래프에서는 손익을 발산 스케일을 활용하여 손실은 빨간색, 손익 균등은 파란색, 이익은 녹색으로 나타냈습니다.\n\n<div class=\"content-ad\"></div>\n\n\n![Qualitative Color Scales](/assets/img/2024-06-27-TheScienceofDataVisualization_8.png)\n\n범주 자료에 사용하는 질적 색상 척도는 내재적인 순서가 없는 경우에 사용됩니다. 이 척도의 색상은 서로 다르고 쉽게 구별할 수 있어야 합니다. 각 범주가 동등하게 중요하기 때문에 밝기나 강도에 대한 진행이 없습니다. 예를 들어, 다음 지도는 서로 다른 색상으로 다른 국가를 나타내기 위해 질적 척도를 사용합니다.\n\n![Qualitative Color Scales](/assets/img/2024-06-27-TheScienceofDataVisualization_9.png)\n\n# 인지 부하와 정보 과잉\n\n\n<div class=\"content-ad\"></div>\n\n우리 두뇌는 한 번에 처리할 수 있는 정보에 한계가 있어요. 큰 규모이고 복잡한 정보가 제시되면 쉽게 고도로 바뀔 수 있어요. 이는 이해도가 낮아지고 기억력도 줄어들게 됩니다. 그 결과 kognityf 부하는 데이터 시각화에 있어 중요한 고려 사항입니다. 인지 심리학의 통찰력은 kognityf 부하를 효과적으로 관리하기 위한 가치 있는 전략을 제시하며, 시청자가 지침을 받지 않고 복잡한 데이터 집합을 탐색할 수 있도록 보장합니다.\n\n시각적 혼잡은 kognityf 부하의 큰 요인 중 하나입니다. 우리가 이전에 논의한 접근성, 유사성, 경계와 같은 게슈탈트 원리들이 시각적 혼잡을 줄이고, 따라서 kognityf 부하를 감소하는 데 매우 효과적임이 입증되었습니다.\n\n선행주의 속성은 사람들이 관심 있는 정보에 집중하는 데 도움이 되는 또 다른 유망한 수단을 제공해요. 우리의 두뇌는 선행주의 속성이라고 불리는 특정 속성 집합을 감지하고 처리하는 데 조절되어 있어요. 선행주의 처리는 우리의 의식 없이 매우 빠른 속도로 발생해요. 따라서 선행주의 속성을 사용하여 청중의 즉각적인 주의를 끌고 시각적 계층 구조를 확립할 수 있습니다. 선행주의 속성은 형태, 색상, 공간 위치 및 움직임 네 가지 주요 범주로 넓게 분류할 수 있어요.\n\n아래 나타난 매출 성과 계량기판을 살펴보면서 kognityf 부하를 이해하고 이를 극복하는 방법을 알아봐요.\n\n<div class=\"content-ad\"></div>\n\n\n![Data Visualization Before](/assets/img/2024-06-27-TheScienceofDataVisualization_10.png)\n\nThe interface looks cluttered, with inconsistent spacing between elements and chaotic use of colors. It’s hard to tell which visualizations or metrics are the most important, and the graphs are not labeled properly.\n\nNow let’s simplify this dashboard UI.\n\n![Data Visualization After](/assets/img/2024-06-27-TheScienceofDataVisualization_11.png)\n\n\n<div class=\"content-ad\"></div>\n\n먼저 인터페이스를 정리하여 단순화하고 불필요한 요소를 제거하여 인터페이스를 깔끔하게 유지합니다. 그런 다음 중요한 요소를 먼저 표시하고 유사한 요소를 그룹화하여 정보를 우선순위로 지정합니다. 마지막으로 명확하고 간결한 레이블을 사용하여 사용자가 대시보드를 쉽게 이해할 수 있도록합니다.\n\n대시보드에이 수정 사항을 적용함으로써, 우리는 인간의 눈이 따르는 패턴에 따라 요소를 전략적으로 구성했습니다. 즉 왼쪽에서 오른쪽으로, 위에서 아래로 이동하여 페이지를 스캔하는 Z 패턴을 만들어 가장 중요한 요소를 왼쪽 상단 모서리에 배치했습니다.\n\n# 마무리하며\n\n데이터 시각화의 복잡한 풍경을 탐험하면서, 인식 과학과의 상호작용과 데이터 시각화의 원칙을 활용하여, 디자이너는 의사소통, 탐구 및 옹호를 위한 도구로서 데이터 시각화의 변혁적 잠재력을 발휘합니다. 인간 마음의 복잡성을 계속해서 탐구함으로써, 데이터 시각화의 새로운 가능성을 발견하여, 정보가 단순히 보이는 것이 아니라 실제로 이해되고 내재화되도록 보장합니다.\n\n<div class=\"content-ad\"></div>\n\n# 저자 소개\n\n로히트 카르나탁은 Digitate의 제품 디자이너입니다. 시각적인 이야기를 전하는 데 큰 흥미를 두고 혁신적인 디자인 실천을 통해 사용자 상호작용을 향상시키는 데 중점을 두고 있습니다. 그는 사용자의 요구를 충족하면서도 다양한 플랫폼과 장치 전반에 걸쳐 일관성 및 확장성을 보장하는 데 전문 지식을 갖추고 있습니다.","ogImage":{"url":"/assets/img/2024-06-27-TheScienceofDataVisualization_0.png"},"coverImage":"/assets/img/2024-06-27-TheScienceofDataVisualization_0.png","tag":["Tech"],"readingTime":8},{"title":"Windows Active Directory 기초 101 초보자를 위한 가이드 및 홈 랩 설정 방법","description":"","date":"2024-06-27 18:39","slug":"2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup","content":"\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_0.png)\n\nWindows Active Directory의 힘을 해제하세요! 초보자를 위한 가이드로 Windows Active Directory의 기본을 배우고, 홈 랩에서 AD를 구성하는 포괄적인 안내서로 네트워크 자원을 원활하게 관리하고 중앙화된 운영으로 보안을 강화하세요.\n\n이 단계별 자습서는 설치부터 고급 구성까지 모든 것을 다루어 네트워크 관리를 숙달하는 데 도움이 될 것입니다.\n\nActive Directory는 마이크로소프트에서 개발한 디렉터리 서비스로, 대부분의 Windows Server 운영 체제에 포함되어 있습니다. 관리자는 네트워크 자원의 권한과 접근을 관리하여 사용자와 컴퓨터가 도메인 네트워크 내에서 안전하게 상호 작용할 수 있도록 합니다.\n\n<div class=\"content-ad\"></div>\n\nAD는 Windows 도메인 네트워크를 관리하고 컴퓨터, 프린터, 사용자 등과 관련된 정보를 저장하는 데 사용됩니다.\n\n리눅스, 방화벽 등과 같은 비 Windows 장치들도 LDAP 또는 RADIUS를 통해 AD에 인증할 수 있습니다.\n\nActive Directory(AD)에서 어떤 종류의 인증이 사용되나요?\n\nActive Directory(AD) 인증은 주로 사용자가 자격 증명으로 한 번만 로그인하여 다양한 리소스에 액세스할 수 있는 Kerberos 프로토콜을 사용합니다. 사용자 자격 증명을 네트워크를 통해 전송하는 대신, Kerberos는 사용자를 위해 특정 기간 동안 유효한 세션 키를 생성하여 안전하고 유연한 인증을 제공합니다. 또한 사용자의 액세스 권한과 정책을 포함하는 토큰이 생성되어 사용자가 사용 권한이 있는 리소스에만 액세스할 수 있도록 보장합니다.\n\n<div class=\"content-ad\"></div>\n\n목적 — AD를 사용해야 하는 이유\n\nActive Directory는 네트워크 자원의 관리와 관리를 간단하게 합니다. 일부 사용 사례는 다음과 같습니다:\n\n- 중앙 집중식 자원 관리: AD를 통해 관리자는 모든 네트워크 자원을 중앙 위치에서 관리할 수 있어 네트워크를 유지하고 안전하게 하는 것이 쉬워집니다.\n- 향상된 보안: AD는 Kerberos와 같은 강력한 인증 프로토콜을 통해 네트워크 보안을 강화하며, 특정 자원에 대한 액세스 권한이 있는 사용자만 액세스할 수 있도록 보장합니다.\n- 그룹 정책 관리: AD를 사용하면 그룹 정책 개체(GPO)를 사용하여 전체 네트워크에 보안 설정 및 운영 정책을 강제로 적용하여 조직 기준을 준수합니다.\n- 단일 로그인(SSO): 사용자는 하나의 자격 증명 세트로 네트워크 전체에서 여러 서비스 및 자원에 액세스할 수 있어 사용자 경험을 간편하게 만들 수 있습니다.\n- 전 세계에서 가장 일반적으로 사용되는 ID 관리 서비스입니다.\n\nAD가 조직의 IT 인프라에 미치는 영향은 무엇인가요?\n\n<div class=\"content-ad\"></div>\n\n- 작업 간소화: AD는 복잡한 네트워크 환경을 간소화하여 오류 가능성을 줄이고 응용 프로그램 및 서비스를 쉽게 배포하고 관리할 수 있도록 도와줍니다.\n- 강화된 보안 방어체계: AD의 포괄적인 보안 기능은 무단 액세스로부터 보호하고 조직이 규정 준수를 도와 데이터 침해 위험을 줄입니다.\n- 생산성 향상: 네트워크 자원의 관리를 자동화하고 중앙화함으로써, AD는 IT 직원이 루틴 작업에 소요되는 시간을 단축시켜 전략적인 계획에 집중할 수 있도록 돕습니다.\n\n도메인 컨트롤러 – AD의 핵심:\n\n도메인 컨트롤러는 특히 도메인 컨트롤러로 승격된 AD DS 서버 역할이 설치된 서버입니다. 다음과 같은 기능을 수행합니다:\n\n- AD DS 디렉터리 저장소의 사본을 호스팅합니다.\n- 인증 및 권한 부여 서비스를 제공합니다.\n- 도메인 및 포리스트의 다른 도메인 컨트롤러로 업데이트를 복제합니다.\n- 사용자 계정 및 네트워크 자원 관리를 위한 관리 액세스를 허용합니다.\n\n<div class=\"content-ad\"></div>\n\nAD DS 데이터 저장소:\n\n이것은 사용자, 서비스 및 응용 프로그램의 디렉터리 정보를 저장하고 관리하는 데이터베이스 파일 및 프로세스를 포함합니다. 다음과 같은 것들로 구성되어 있습니다:\n\n- NTDS.dit (NT 디렉토리 서비스 디렉토리 정보 트리) 파일은 Active Directory에서 모든 디렉터리 정보를 저장하는 데이터베이스 파일로서 다음을 포함합니다: 사용자 계정 및 암호, 그룹 및 그들의 멤버십, 조직 단위 (OUs), 컴퓨터 계정, 보안 정책 및 권한, 스키마와 구성 데이터, 다른 디렉터리 객체들.\n- 이것은 기본적으로 모든 도메인 컨트롤러의 %SystemRoot%\\NTDS 폴더에 저장됩니다.\n- 도메인 컨트롤러 프로세스와 프로토콜을 통해서만 접근할 수 있습니다.\n\nAD에서의 공통 용어들\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_1.png\" />\n\n- **AD Objects**: 이는 Active Directory의 가장 작은 기본 단위입니다. 객체는 사용자, 그룹, 컴퓨터, 라우터, 방화벽, 프린터 등 모든 것이 될 수 있습니다.\n- **사용자**: 사용자는 AD 객체의 한 유형입니다. 대부분의 사용자 계정은 개인에게 할당되지만, 일부는 서비스 계정이라고 알려진 애플리케이션 사용을 위해 지정됩니다.\n- **그룹**: 그룹 객체는 사용자 계정, 컴퓨터 계정 등을 모아 엑세스 제어를 간단하게 하는 데 사용됩니다 (예: 보안 그룹).\n- **조직 단위(OU)**: 관리자는 종종 OUs를 기능이나 부서에 따라 사용자를 그룹화하는 데 사용합니다. OUs는 컴퓨터와 같은 장치를 그룹화하는 데도 사용될 수 있으며, 각 그룹에 관련 정책을 쉽게 적용하기 위해 조직 구조를 반영합니다.\n- **도메인**: 사용자, 컴퓨터, 그룹, OUs와 같은 AD 객체의 모음이 저장된 공유 데이터베이스입니다.\n- **포레스트**: 포레스트는 하나 이상의 도메인으로 구성된 집합입니다. 조직은 요구 사항과 복잡성에 따라 단일 포레스트 또는 다중 포레스트를 가질 수 있습니다.\n\n# 홈 랩 구축\n\n선결 조건:\n\n<div class=\"content-ad\"></div>\n\n- 1 개의 Windows Server VM\n- 1 개의 Windows Workstation VM\n- 50-60 GB의 디스크 공간\n- 8GB 이상의 메모리\n\nISO 다운로드:\n\n여기 Windows Server 및 Windows 10 Enterprise의 다운로드 링크가 있습니다. 두 ISO를 다운로드하고 시작해 주세요.\n\nISO 다운로드를 클릭한 후, 등록 프로세스를 위해 임의의 데이터를 입력하고 다운로드 프로세스가 곧 시작될 것입니다.\n\n<div class=\"content-ad\"></div>\n\nVirtualBox 단계:\n\n- New를 클릭하여 자신의 컴퓨터 용량에 맞게 프로세서 성능과 저장공간을 선택하고 Windows Workstation-1, Windows Server 등과 같이 기계를 식별할 수 있는 이름을 입력하세요.\n- Skip Unattended Installation을 선택하고 컴퓨터 용량에 맞게 프로세서 성능과 저장공간을 선택하세요.\n- 단계를 완료한 후, VM을 시작하세요.\n\n- 처음 부팅 후, 지역 및 시간대와 같은 세부 정보를 입력하세요.\n- 어떤 유형의 설치를 원하십니까? 사용자 정의: Microsoft Server OS만 설치\n- 설치하려는 운영 체제를 선택하세요: Windows Server 2022 Standard Evaluation (데스크톱 환경)\n\n다음을 클릭하면 설치 프로세스가 곧 시작됩니다. 창이 다시 부팅되고, 관리자 계정의 비밀번호를 입력하라는 메시지가 나올 것입니다.\n\n<div class=\"content-ad\"></div>\n\n이번 랩에서는 Root@123이라는 비밀번호를 사용했습니다.\n\n로그인하려면 ALT+CTRL+DEL을 눌러주세요. 키를 보내지 못하면 VirtualBox의 툴바로 이동하여 입력 -` 키보드 -` ALT+CTRL+DEL 삽입을 열어주세요.\n\n## 도메인 컨트롤러 설정\n\n우선, 기본 이름이 아닌 다른 이름으로 머신의 이름을 지정할 것입니다.\n\n<div class=\"content-ad\"></div>\n\n시작 메뉴 - `PC 이름보기`: PC 이름 변경하기\n\n아래에서 볼 수 있듯이, 랩을 위한 DC (도메인 컨트롤러)로 사용할 것이므로 PC 이름을 Yogesh-DC로 변경했습니다.\n\n이름을 변경한 후에는 컴퓨터를 재시작하세요.\n\n![PC 이름 변경](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_2.png)\n\n<div class=\"content-ad\"></div>\n\n## 기능 설치 — Active Directory 도메인 서비스 (AD DS)\n\nActive Directory 도메인 서비스 (AD DS)는 사용자 및 컴퓨터를 관리하고 데이터를 논리적 계층 구조로 구성할 수 있는 Active Directory의 핵심 기능입니다.\n\nAD DS는 보안 인증서, 단일 로그인(SSO), LDAP 및 권한 관리를 제공합니다.\n\n- Server Manager를 엽니다.\n- 창의 오른쪽 상단에 있는 Manage 옵션을 클릭합니다.\n- Roles 및 기능 추가를 선택합니다.\n- 추가할 역할 및 기능 마법사라는 이름의 마법사가 나타납니다. Next를 클릭합니다.\n- 설치 유형: 역할 기반 또는 기능 기반 설치.\n- 서버 선택: 목록에서 자신의 컴퓨터 이름을 선택합니다.\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_3.png)\n\n- 서버 역할: 도메인 서비스가 필요하므로 Active Directory Domain Services (AD DS)라는 옵션을 선택하고 아래에 표시된 팝업이 표시됩니다.\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_4.png)\n\n- 기능 추가: 추가 기능을 클릭한 후 다음을 선택합니다.\n- 기능: 이 단계에서 추가 조치가 필요하지 않으므로 다음을 클릭합니다.\n- AD DS: 다음을 클릭합니다.\n- 확인: 필요한 경우 대상 서버를 자동으로 다시 시작하는 옵션을 확인합니다.\n\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_5.png)\n\n설치를 완료한 후, 위자드와 명령 표시줄의 알림, 그리고 작업 세부정보를 닫을 수 있습니다.\n\n- 도메인 컨트롤러로 이 서버를 승격하려면 클릭하세요.\n- 배포 구성: 기존의 포리스트나 도메인이 없기 때문에 '새 포리스트 추가'를 선택하세요.\n- 원하는 도메인 이름을 입력하고 '다음'을 클릭하세요. 이 랩에서의 도메인 이름은 다음과 같습니다: Yogesh.local\n\n![image](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_6.png)\n\n\n<div class=\"content-ad\"></div>\n\n- 이전에 사용한 동일한 암호를 입력할 수 있습니다; Root@123. 다음을 클릭하세요.\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_7.png)\n\n- DNS 위임: 그대로 유지하세요.\n- 추가 옵션: NetBIOS 도메인 이름은 자동으로 채워지고 다음을 클릭하세요.\n- 경로와 옵션 검토: 기본값으로 유지하세요. 다음을 클릭하세요.\n- 사전 요구 사항 확인: 설치를 클릭하세요.\n\n설치 후 시스템이 다시 한 번 재부팅됩니다.\n\n<div class=\"content-ad\"></div>\n\n이제 이전에 설정한 비밀번호로 만든 새 계정으로 로그인하겠습니다. 제 경우에는 도메인 사용자 이름이 Yogesh\\Administrator였습니다.\n\n## 라우팅 및 원격 액세스 — DC에서 RAS/NAT 구현\n\n역할 추가:\n\n여기서, 우리는 클라이언트 기기가 호스트 OS에서 직접이 아닌 도메인 컨트롤러 서버를 통해 인터넷 액세스를 받을 수 있는 종류의 사설 네트워크를 구성할 것입니다. 이를 위해 DC에 다른 서비스/역할을 추가해야 합니다.\n\n<div class=\"content-ad\"></div>\n\n서버 관리자를 열고 'Roles 및 기능 추가 마법사'를 클릭한 후, 다음을 클릭합니다. 서버를 선택한 다음,\n\n- 서버 역할: 원격 액세스\n- 특징 및 역할 서비스: 라우팅 확인\n- 다른 설정은 기본 설정을 유지하고 역할을 설치합니다.\n\n네트워크 변경 후 라우팅 구성을 되돌아올 것입니다.\n\nVM에서 네트워크 어댑터 설정\n\n<div class=\"content-ad\"></div>\n\n네트워크 다이어그램을 보면 VM 인프라 내에서 작동할 내부 네트워크를 설정해야한다는 것을 알 수 있습니다.\n\n첫 번째 단계는 네트워크 어댑터를 추가하는 것입니다. DC가 설치된 Windows Server에서 NAT(기본) 및 내부 네트워크를 추가했습니다. 동일한 작업을 진행해보세요.\n\n<div class=\"content-ad\"></div>\n\n만약 필요하다면 재부팅 후에 \"네트워크 및 인터넷\" 설정을 찾아보세요. 아래 이미지와 같이 \"네트워크 어댑터 옵션 변경\"을 클릭하세요.\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_10.png)\n\n- 아래 이미지처럼 두 가지 다른 이름으로 된 인터페이스를 볼 수 있을 겁니다. 하나는 NAT를 위한 것이고, 다른 하나는 내부 네트워크를 위한 것입니다. 이제 할 일은 어떤 것이 어떤 것인지 구별하는 것입니다.\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_11.png)\n\n<div class=\"content-ad\"></div>\n\n- 네트워크 어댑터를 식별한 후, Internal (DHCP 및 RAS를 구성할 예정인) 및 Internet (NAT를 통해 연결된) 등으로 이름을 변경해주세요.\n- Internal이라는 인터페이스를 마우스 오른쪽 버튼으로 클릭한 다음 속성을 클릭하세요. 그리고 아래에 표시된 대로 Internet Protocol Version 4 (TCP/IPv4)을 두 번 클릭하세요.\n\n![IPv4 Properties](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_12.png)\n\n- IPv4 속성을 열고, 아래에 표시된 대로 다음 IP 주소 사용을 선택하고 구성하세요.\n\n![IP Address Configuration](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_13.png)\n\n<div class=\"content-ad\"></div>\n\n- 여기서 DNS 서버의 IP 주소를 클라이언트 기기에 할당되는 IP 주소가 DC에서 구현한 DHCP 서비스를 통해 127.0.0.1 (루프백)로 설정했습니다.\n- 구성이 완료되면 확인을 클릭하세요.\n\nRouting 및 원격 액세스 서비스 구성\n\n- 설치 후에 도구 - `Routing 및 원격 액세스로 이동합니다.\n- DC를 마우스 오른쪽 버튼으로 클릭하고 \"라우팅 및 원격 액세스 구성 및 활성화\"를 클릭합니다.\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_14.png)\n\n<div class=\"content-ad\"></div>\n\n- 위자드를 열고 \"다음\"을 클릭하세요. 설정에서 NAT 옵션을 선택하세요.\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_15.png)\n\n다음을 클릭한 후 완료를 클릭하세요.\n\n이제 다음 단계는 클라이언트 기기가 인터넷에 연결하기 위해 사용할 DC에서 IP 주소를 받게 해줄 DHCP 서비스를 추가하는 것입니다.\n\n<div class=\"content-ad\"></div>\n\nDHCP 설정\n\n- Manage -` Add Role or Feature -` DHCP으로 다시 이동하세요.\n- 기본 설정을 유지한 채로 서비스를 설치하세요.\n\n<img src=\"/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_16.png\" />\n\n- 설치가 완료되면 Tools -` DHCP로 이동하여 열어보세요.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_17.png\" />\n\n- 이제 IPv4를 마우스 오른쪽 버튼으로 클릭하고 도메인 아래에서 새 범위를 클릭합니다.\n- 아래 그림과 같이 원하는 범위 이름을 입력하십시오. 가능한 한 설명적인 이름을 유지하였습니다. 이전에 DC의 내부 네트워크 설정에서 동일한 네트워크 범위를 구성했기 때문에 172.16.0.100–200/24 네트워크 범위를 사용할 것입니다.\n\n<img src=\"/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_18.png\" />\n\n- 이제 시작 및 끝 IP 주소 범위를 아래와 같이 추가하십시오.\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_19.png)\n\n- 클릭 다음 및 \"예, 이제 이러한 옵션을 구성하고 싶습니다.\"를 선택합니다.\n\n![image](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_20.png)\n\n- 임대 기간: 이 랩의 목적으로, 시스템에 할당된 IP 주소의 임대 기간을 10일로 설정했습니다. 이후에 IP가 변경될 것입니다.\n\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_21.png)\n\n- 라우터: 이전에 설명한 대로, DC가 클라이언트 기기를 위한 라우터 역할을 할 것이므로 DC의 라우터 IP 주소를 172.16.0.1로 설정할 것입니다.\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_22.png)\n\n- 도메인 이름과 DNS 서버는 기본값으로 유지하십시오.\n\n\n<div class=\"content-ad\"></div>\n\n\n![Image 23](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_23.png)\n\n- Lastly, select “Yes, Activate this scope now.”\n\n![Image 24](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_24.png)\n\nPost DHCP Install Configuration\n\n\n<div class=\"content-ad\"></div>\n\n- 서버 관리자의 알림 패널에서 Post DHCP 설치 구성 옵션을 볼 수 있다면, 그냥 승인해 주세요.\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_25.png)\n\n## OU 및 사용자 추가\n\n여기에서는 Network Admins라는 OU 하나와 John Doe라는 사용자 하나를 만들 것입니다. 이 사용자를 통해 워크스테이션 컴퓨터에 로그인하게 될 것이며, 사용자에게 관리자 권한을 할당할 것입니다.\n\n<div class=\"content-ad\"></div>\n\n- 윈도우 키를 눌러 'Windows 관리 도구'를 검색한 후, 'Active Directory 사용자 및 컴퓨터'를 열어주세요.\n- 이제, 도메인 이름을 우클릭하여 `새로 만들기 -` 조직 단위를 선택해주세요.\n\n![이미지 1](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_26.png)\n\n![이미지 2](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_27.png)\n\n- 조직 단위를 추가한 후, 해당 단위에 사용자를 추가하겠습니다.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_28.png\" />\n\n- 다음 페이지에서 사용자 세부 정보와 비밀번호를 입력하고 원하는 정책을 적용한 후 완료를 클릭하세요.\n\n<img src=\"/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_29.png\" />\n\n## 클라이언트 머신 설정\n\n<div class=\"content-ad\"></div>\n\n이제, 클라이언트 윈도우 머신을 설정해야 합니다. Windows 10 Enterprise ISO를 다운로드할 수 있는 링크를 여기에 제공합니다.\n\n- 다운로드 후 원하는 설정으로 Virtual에 새로운 VM을 추가하고 작업을 완료하면 이 블로그로 계속 진행하세요.\n\n- 설치가 완료되면 내부 네트워크에 성공적으로 연결되었는지 확인합니다.\n- 네트워크 및 인터넷 설정으로 이동 - ` 어댑터 옵션 변경 - ` 이더넷에서 마우스 오른쪽 클릭 - ` 속성 클릭\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_30.png)\n\n<div class=\"content-ad\"></div>\n\n- 이제 IPv4 설정을 두 번 클릭하고 \"다음 DNS 서버 주소 사용\" 옵션을 선택하여 DNS IP 주소를 입력하세요.\n- DNS IP 주소는 DC에서 설정한 것과 동일하게 설정해야 합니다.\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_31.png)\n\n- 이제 서버 기기와 같은 방식으로 워크스테이션의 이름을 바꿀 수 있습니다.하지만 작은 변화를 줄게요.\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_32.png)\n\n<div class=\"content-ad\"></div>\n\n이제 \"시스템 속성\"이라는 제목의 마법 상자가 나타날 것입니다. 아래에 표시된대로 '변경' 버튼을 클릭하세요.\n\n![System Properties](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_33.png)\n\n- 도메인 컨트롤러에 연결을 시도해 보겠습니다. 도메인 이름을 추가하면 됩니다.\n- 원하는 컴퓨터 이름을 입력하고, '멤버: 도메인'을 선택한 후 도메인 이름을 입력하세요.\n\n![Connect to Domain Controller](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_34.png)\n\n<div class=\"content-ad\"></div>\n\n- 이전에 만든 DC에서 사용자 이름을 입력하세요. 제 경우에는 John@Yogesh.local 이었습니다.\n\n![image1](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_35.png)\n\n- 설정을 변경한 후, 컴퓨터를 재시작하고 새 자격 증명으로 로그인하세요.\n\n![image2](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_36.png)\n\n<div class=\"content-ad\"></div>\n\n인터넷 연결 테스트\n\n모든 단계를 완료한 후에는 인터넷에 연결할 수 있어야 합니다.\n\n다음은 그를 위한 간단한 테스트입니다. 구글 핑을 보내고 나서 길을 확인하기 위해 tracert 명령어를 사용했습니다. 여기에서 확인할 수 있습니다.\n\n![이미지](/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_37.png)\n\n<div class=\"content-ad\"></div>\n\n요약하면,이 안내서는 Windows Active Directory (AD) 홈 랩을 설정하는 포괄적인 안내를 제공합니다. AD의 기본 사항, 중요성 및 VirtualBox를 사용하여 도메인 컨트롤러, DHCP 및 클라이언트 기기를 구성하기 위한 단계별 지침을 다룹니다. 이 상세한 단계를 따라가면 사용자는 네트워크 자원을 관리하고 보안을 강화하며 IT 운영을 간소화할 수 있는 기능적인 AD 환경을 만들어 실제 기업 환경을 시뮬레이션하여 학습 및 테스트 목적으로 사용할 수 있습니다.\n\n참고 자료:\n\nJosh Madakor의 훌륭한 자료 (How to Setup a Basic Home Lab Running Active Directory (Oracle VirtualBox) | Add Users w/PowerShell)","ogImage":{"url":"/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_0.png"},"coverImage":"/assets/img/2024-06-27-WindowsActiveDirectory101ABeginnersGuideandHomeLabSetup_0.png","tag":["Tech"],"readingTime":14}],"page":"5","totalPageCount":113,"totalPageGroupCount":6,"lastPageGroup":20,"currentPageGroup":0},"__N_SSG":true}