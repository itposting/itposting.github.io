{"pageProps":{"posts":[{"title":"아두이노에서 머신 러닝 시작하기  아두이노 나노 33 BLE 센스","description":"","date":"2024-06-19 05:54","slug":"2024-06-19-GetStartedwithMachineLearningonArduinoArduinoNano33BLESense","content":"\n\n![image](/assets/img/2024-06-19-GetStartedwithMachineLearningonArduinoArduinoNano33BLESense_0.png)\n\n이 포괄적인 자습서에서는 Arduino Nano 33 BLE Sense를 중점으로 한 Arduino 장치에 머신러닝 모델을 배치하는 흥미로운 세계에 대해 살펴볼 것입니다.\n\n다음은 Arduino Nano 33 BLE Sense에 머신러닝 모델을 배포하는 단계 목록입니다:\n\n- Arduino IDE 설치\n- Mbed OS Core for Nano Boards 설치\n- Harvard_TinyMLx 라이브러리 설치\n- Google Colab에서 TensorFlow를 사용하여 머신러닝 모델 생성\n- 훈련된 모델을 TensorFlow Lite로 변환\n- Arduino 헤더 파일에 모델 인코딩\n- Arduino에 ML 모델 배포\n\n<div class=\"content-ad\"></div>\n\n![이미지](/assets/img/2024-06-19-GetStartedwithMachineLearningonArduinoArduinoNano33BLESense_1.png)\n\n1. 아두이노 IDE 설치\n\n다음 가이드를 따라 주세요: [아두이노 IDE 다운로드 및 설치](https://support.arduino.cc/hc/en-us/articles/360019833020-Download-and-install-Arduino-IDE).\n\n2. 나노 보드용 Mbed OS 코어 설치\n\n<div class=\"content-ad\"></div>\n\n아두이노로 이동해서 Tools → Board → Board Manager로 이동해 주세요.\n\n\"Arduino Mbed OS Nano Boards\"를 설치해 주세요.\n\n![이미지](/assets/img/2024-06-19-GetStartedwithMachineLearningonArduinoArduinoNano33BLESense_2.png)\n\n3. Harvard_TinyMLx 라이브러리 설치\n\n<div class=\"content-ad\"></div>\n\nTools -> Manage Libraries 로 이동해주세요.\n\n\"Harvard_TinyMLx\" 라이브러리를 설치하세요.\n\n![이미지](/assets/img/2024-06-19-GetStartedwithMachineLearningonArduinoArduinoNano33BLESense_3.png)\n\n4. Google Colab에서 TensorFlow를 사용하여 머신러닝 모델을 생성하세요.\n\n<div class=\"content-ad\"></div>\n\n여기서는 TensorFlow에서 선형 회귀를 사용하여 간단한 날씨 예측 기계 학습 모델을 만들고 있어요. 입력 특성은 온도와 습도이며, 날씨 요약은 예상 출력입니다. 이 모델은 IoT에서 기계 학습 통합을 보여주기 위한 것이며, 정확한 날씨 예측을 최적화한 것이 아니라는 점을 유의해 주세요.\n\n```js\nfrom sklearn.model_selection import train_test_split\nimport pandas as pd\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras\n\n# 데이터셋 불러오기\nweather_df = pd.read_csv('weatherHistory.csv')\n\nweather_df.head()\n\nweather_df.info()\n\nweather_df.keys()\n\nweather_df['Summary'].unique()\n\n#weather_df['Summary'].unique()\nfactorized_mapping = dict(enumerate(weather_df['Summary'].unique()))\nweather_df['Summary'] = pd.factorize(weather_df['Summary'])[0]\nprint(factorized_mapping)\n\n# 특성과 레이블 정의\nfeatures = weather_df[['Temperature (C)','Humidity']]\nlabels = weather_df[['Summary']]\n\n# 훈련 및 테스트 데이터 분할\nfeatures_train, features_test, labels_train, labels_test = train_test_split(features, labels, test_size=0.3, random_state=0)\n\n# Keras를 사용하여 선형 회귀 모델 만들기\nmodel = keras.Sequential([\n    keras.layers.Dense(units=1, input_shape=(2,))  # 두 개의 입력 특성, 하나의 출력 유닛\n])\n\n# 모델 컴파일\nmodel.compile(optimizer='Adam', loss='mean_squared_error')  # 확률적 경사 하강법 (SGD) 옵티마이저 사용\n\n# 모델 훈련\nmodel.fit(\n    features_train,labels_train,\n    epochs=6,\n    validation_data=(features_test, labels_test)\n    )\n\npredictions = model.predict(features_test)\nprint(predictions)\n\nrounded_predictions = [round(prediction[0]) for prediction in predictions]\noriginal_predictions = [factorized_mapping[prediction] for prediction in rounded_predictions]\noriginal_predictions\n\nrmse = np.sqrt(((labels_test - predictions) ** 2).mean())\nprint(\"Root Mean Squared Error (RMSE):\", rmse)\r\n```\n\n5. 훈련된 모델을 TensorFlow Lite로 변환하기\n\n<div class=\"content-ad\"></div>\n\n```js\n\"\"\"# 훈련된 모델을 텐서 플로 Lite로 변환하기\"\"\"\n\nimport tensorflow as tf\n\n# 양자화 없이 모델을 TensorFlow Lite 형식으로 변환\nconverter = tf.lite.TFLiteConverter.from_keras_model(model)\ntflite_model = converter.convert()\n\n# 모델을 디스크에 저장\nopen(\"weather_model.tflite\", \"wb\").write(tflite_model)\n\nimport os\nbasic_model_size = os.path.getsize(\"weather_model.tflite\")\nprint(\"모델 크기는 %d바이트입니다\" % basic_model_size)\n```\n\n6. 아두이노 헤더 파일에 모델 인코딩\n\n\"아두이노 헤더 파일에 모델 인코딩\"은 일반적으로 TensorFlow Lite와 같은 형식의 머신 러닝 모델을 아두이노 스케치 내에 포함할 수 있는 특정 형식으로 변환하는 과정을 의미합니다. 이 과정은 모델의 수치적 가중치와 아키텍처를 아두이노 코드의 헤더 파일(.h)로 쉽게 포함할 수 있도록 변환하는 것을 포함합니다.\n\n이 헤더 파일은 아두이노 스케치가 외부 종속성이나 별도의 모델 파일 없이 추론에 사용할 수 있도록 모델 데이터를 포함하도록 되어 있습니다. 이 형식으로 모델을 인코딩함으로써 자원 제한적인 기기인 아두이노 같은 장치에 머신 러닝 모델을 배포할 때 아두이노 프로젝트가 외부 자원에 의존하지 않고 아두이노 보드에서 머신 러닝 모델을 직접 사용하여 예측하거나 작업을 수행할 수 있도록 할 수 있습니다. 아두이노와 같은 자원에 제한된 기기에 머신 러닝 모델을 배포할 때 중요한 단계입니다.\n\n\n<div class=\"content-ad\"></div>\n\n```js\r\n\"\"\"# 아두이노 헤더 파일에 모델 인코딩하기\"\"\"\n\n!echo \"const unsigned char model[] = {\" > /content/model.h\n!cat weather_model.tflite | xxd -i      >> /content/model.h\n!echo \"};\"                              >> /content/model.h\n\nimport os\nmodel_h_size = os.path.getsize(\"model.h\")\nprint(f\"헤더 파일인 model.h의 크기는 {model_h_size:,} 바이트입니다.\")\nprint(\"\\n사이드 패널을 열어보세요 (필요시 새로고침). 모델 파일인 model.h를 더블 클릭하여 다운로드하세요.\")\r\n```\n\n7. 아두이노에 ML 모델 배포하기\n\n‘model.h’ 파일을 다운로드하고 또한 아두이노 스케치와 동일한 디렉토리에 저장하세요. 이 코드에서는 예측을 위해 샘플 온도 및 습도 값을 제공했습니다. 또한 센서에서 이러한 값을 읽어 실시간 예측을 할 수도 있습니다.\n\n```js\n/*\n  날씨 예측\n  회로:\n  - 아두이노 나노 33 BLE 또는 아두이노 나노 33 BLE Sense 보드.\n  작성자: Jobin J\n*/\n\n\n#include <TensorFlowLite.h>\n#include <tensorflow/lite/micro/all_ops_resolver.h>\n#include <tensorflow/lite/micro/micro_error_reporter.h>\n#include <tensorflow/lite/micro/micro_interpreter.h>\n#include <tensorflow/lite/schema/schema_generated.h>\n#include <tensorflow/lite/version.h>\n\n#include \"model.h\"\n\n\n// TensorFlow Lite (Micro)에 사용되는 전역 변수\ntflite::MicroErrorReporter tflErrorReporter;\n\n// 모든 TFLM 오퍼레이션을 가져옵니다. 필요한 오퍼레이션만 가져와\n// 스케치의 컴파일 크기를 줄이고자 한다면 이 줄을 제거하고\n// 필요한 TFLM 오퍼레이션만 가져오실 수 있습니다.\ntflite::AllOpsResolver tflOpsResolver;\n\nconst tflite::Model* tflModel = nullptr;\ntflite::MicroInterpreter* tflInterpreter = nullptr;\nTfLiteTensor* tflInputTensor = nullptr;\nTfLiteTensor* tflOutputTensor = nullptr;\n\n// TFLM을 위한 정적 메모리 버퍼를 생성합니다. 모델의 크기에 따라\n// 조정이 필요할 수 있습니다.\nconstexpr int tensorArenaSize = 8 * 1024;\nbyte tensorArena[tensorArenaSize] __attribute__((aligned(16)));\n\n// 제스처 인덱스를 이름에 매핑하는 배열\nconst char* LABELS[] = {\n  \"부분적으로 흐림\", \"대체로 흐림\", \"흐리고 흐림\", \"안개\",\n  \"바람 부는 대체로 흐림\", \"맑음\", \"바람 부는 부분적으로 흐림\",\n  \"바람 부는 흐리고 흐림\", \"습하고 대체로 흐림\",\n  \"습하고 부분적으로 흐림\", \"바람 부는 안개 낀날\", \"바람 부는 흐리고 흐림\",\n  \"바람 부는 안개\", \"바람 부는 부분적으로 흐림\", \"바람\",\n  \"건조하고 부분적으로 흐림\", \"바람 부는 대체로 흐림\",\n  \"위험한 바람 부는 부분적으로 흐림\", \"건조함\", \"바람\",\n  \"습하고 흐리고 흐림\", \"가벼운 비\", \"이슬비\", \"바람 부는 건조한\",\n  \"건조하고 대체로 흐림\", \"바람 부는 건조한\", \"비\"\n};\n\n#define NUM_LABELS (sizeof(LABELS) / sizeof(LABELS[0]))\n\nvoid setup() {\n  Serial.begin(9600);\n  while (!Serial);\n\n\n  // 모델 바이트 배열의 TFL 표현을 가져옵니다.\n  tflModel = tflite::GetModel(model);\n  if (tflModel->version() != TFLITE_SCHEMA_VERSION) {\n    Serial.println(\"모델 스키마 불일치!\");\n    while (1);\n  }\n\n  // 모델 실행을 위한 인터프리터 생성\n  tflInterpreter = new tflite::MicroInterpreter(tflModel, tflOpsResolver, tensorArena, tensorArenaSize, &tflErrorReporter);\n\n  // 모델의 입력 및 출력 텐서를 위한 메모리 할당\n  tflInterpreter->AllocateTensors();\n\n  // 모델의 입력 및 출력 텐서를 위한 포인터 가져오기\n  tflInputTensor = tflInterpreter->input(0);\n  tflOutputTensor = tflInterpreter->output(0);\n}\n\nvoid loop() {\n  float temperature = 28.0, humidity = 50.0;\n\n  // 입력 텐서\n  tflInputTensor->data.f[0] = temperature;\n  tflInputTensor->data.f[1] = humidity;\n\n\n  TfLiteStatus invokeStatus = tflInterpreter->Invoke();\n  if (invokeStatus != kTfLiteOk) {\n    Serial.println(\"실행 실패!\");\n    while (1);\n    return;\n  }\n\n  // 모델의 출력 텐서 값 순회\n  for (int i = 0; i < NUM_LABELS; i++) {\n    Serial.print(LABELS[i]);\n    Serial.print(\": \");\n    Serial.println(tflOutputTensor->data.f[i], 6);\n  }\n\n  delay(5000);\n}\r\n```\n\n<div class=\"content-ad\"></div>\n\nGitHub - Machine_Learning_Weather_Prediction\n\n이제 시리얼 모니터에서 이렇게 출력을 볼 수 있습니다.\n\n![이미지](/assets/img/2024-06-19-GetStartedwithMachineLearningonArduinoArduinoNano33BLESense_4.png)\n\n아두이노 나노 33 BLE Sense에서 기계 학습의 세계를 탐험하고 오늘부터 자신만의 흥미로운 프로젝트를 시작해보세요. 즐거운 코딩되세요!","ogImage":{"url":"/assets/img/2024-06-19-GetStartedwithMachineLearningonArduinoArduinoNano33BLESense_0.png"},"coverImage":"/assets/img/2024-06-19-GetStartedwithMachineLearningonArduinoArduinoNano33BLESense_0.png","tag":["Tech"],"readingTime":8},{"title":"ESP32와 BME280을 이용한 웹 서버","description":"","date":"2024-06-19 05:53","slug":"2024-06-19-ESP32WebServerwithBME280","content":"\n\n이 튜토리얼에서는 ESP32를 사용하여 BME280 센서 모듈의 측정 값을 표시하기 위한 웹 서버를 만드는 방법을 배울 것입니다. BME280 센서는 온도, 습도 및 기압을 측정하여 소형 기상 관측소를 구축하고 이러한 측정 값을 웹 서버를 통해 실시간으로 모니터링할 수 있게 합니다.\n\n## 필요한 부품\n\n- ESP32 DOIT DEVKIT V1 보드\n- BME280 센서 모듈\n- 브레드보드\n- 점퍼 와이어\n\n## BME280 센서 배선\n\n<div class=\"content-ad\"></div>\n\nBME280 센서는 I2C 또는 SPI 통신 프로토콜을 사용할 수 있습니다. 간편하게 I2C를 사용하겠습니다. 다음과 같이 센서를 ESP32에 연결해 주세요:\n\n- BME280 SCL을 ESP32 GPIO 22에 연결\n- BME280 SDA를 ESP32 GPIO 21에 연결\n- BME280 VCC를 ESP32 3.3V에 연결\n- BME280 GND를 ESP32 GND에 연결\n\n![image](/assets/img/2024-06-19-ESP32WebServerwithBME280_0.png)\n\n## 필요한 라이브러리 설치\n\n<div class=\"content-ad\"></div>\n\nBME280 센서에서 데이터를 읽으려면 Arduino IDE에 Adafruit_BME280 및 Adafruit_Sensor 라이브러리를 설치해야 합니다.\n\n- Arduino IDE를 열고 스케치 `Include Library` Manage Libraries로 이동합니다.\n- \"Adafruit BME280\"를 검색하여 라이브러리를 설치합니다.\n- \"Adafruit Unified Sensor\"를 검색하여 라이브러리를 설치합니다.\n\n![image](/assets/img/2024-06-19-ESP32WebServerwithBME280_1.png)\n\n## BME280 센서 테스트\n\n<div class=\"content-ad\"></div>\n\n센서가 올바르게 작동하는지 확인하기 위해 예제 스케치를 로드해주세요. 파일로 이동해서 `Examples` -> `Adafruit BME280 Library` -> `bme280test`로 이동해주세요.\n\n```cpp\n#include <Wire.h>\n#include <Adafruit_Sensor.h>\n#include <Adafruit_BME280.h>\n\n#define SEALEVELPRESSURE_HPA (1013.25)\nAdafruit_BME280 bme; // I2C\n\nvoid setup() {\n    Serial.begin(9600);\n    if (!bme.begin(0x76)) {\n        Serial.println(\"유효한 BME280 센서를 찾을 수 없습니다. 연결을 확인해주세요!\");\n        while (1);\n    }\n}\n\nvoid loop() {\n    Serial.print(\"Temperature = \");\n    Serial.print(bme.readTemperature());\n    Serial.println(\" *C\");\n    Serial.print(\"Pressure = \");\n    Serial.print(bme.readPressure() / 100.0F);\n    Serial.println(\" hPa\");\n    Serial.print(\"Approx. Altitude = \");\n    Serial.print(bme.readAltitude(SEALEVELPRESSURE_HPA));\n    Serial.println(\" m\");\n    Serial.print(\"Humidity = \");\n    Serial.print(bme.readHumidity());\n    Serial.println(\" %\");\n    delay(1000);\n}\n```\n\n코드를 업로드하고 센서의 값을 확인하려면 9600 보드로 속성 설정된 시리얼 모니터를 열어주세요.\n\n## 웹 서버 생성\n\n<div class=\"content-ad\"></div>\n\n이제 웹 서버를 만들어 센서 읽기를 테이블 형식으로 표시해 보겠습니다.\n\n라이브러리 추가 및 변수 정의 포함\n\n```js\ncpp\n\n#include <WiFi.h>\n#include <Wire.h>\n#include <Adafruit_BME280.h>\n#include <Adafruit_Sensor.h>\n\n#define SEALEVELPRESSURE_HPA (1013.25)\nconst char* ssid = \"여러분의 SSID\";\nconst char* password = \"여러분의 비밀번호\";\nWiFiServer server(80);\nAdafruit_BME280 bme; // I2C\nvoid setup() {\n  Serial.begin(115200);\n  if (!bme.begin(0x76)) {\n    Serial.println(\"유효한 BME280 센서를 찾을 수 없습니다. 연결을 확인하세요!\");\n    while (1);\n  }\n  WiFi.begin(ssid, password);\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(500);\n    Serial.print(\".\");\n  }\n  Serial.println(\"WiFi 연결됨.\");\n  Serial.println(\"IP 주소:\");\n  Serial.println(WiFi.localIP());\n  server.begin();\n}\nvoid loop() {\n  WiFiClient client = server.available();\n  if (client) {\n    String currentLine = \"\";\n    while (client.connected()) {\n      if (client.available()) {\n        char c = client.read();\n        if (c == '\\n') {\n          if (currentLine.length() == 0) {\n            client.println(\"HTTP/1.1 200 OK\");\n            client.println(\"Content-type:text/html\");\n            client.println(\"Connection: close\");\n            client.println();\n            client.println(\"<!DOCTYPE html><html>\");\n            client.println(\"<head><meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\");\n            client.println(\"<link rel=\\\"icon\\\" href=\\\"data:,\\\">\");\n            client.println(\"<style>body { font-family: \\\"Trebuchet MS\\\", Arial; text-align: center; }\");\n            client.println(\"table { margin-left:auto; margin-right:auto; border-collapse: collapse; width:35%; }\");\n            client.println(\"th, td { padding: 12px; border: 1px solid #ddd; }\");\n            client.println(\"th { background-color: #0043af; color: white; }\");\n            client.println(\"tr:hover { background-color: #bcbcbc; }\");\n            client.println(\"</style></head>\");\n            client.println(\"<body><h1>ESP32 with BME280</h1>\");\n            client.println(\"<table><tr><th>측정 항목</th><th>값</th></tr>\");\n            client.println(\"<tr><td>온도 섭씨</td><td>\" + String(bme.readTemperature()) + \" *C</td></tr>\");\n            client.println(\"<tr><td>온도 화씨</td><td>\" + String(1.8 * bme.readTemperature() + 32) + \" *F</td></tr>\");\n            client.println(\"<tr><td>압력</td><td>\" + String(bme.readPressure() / 100.0F) + \" hPa</td></tr>\");\n            client.println(\"<tr><td>대략적 고도</td><td>\" + String(bme.readAltitude(SEALEVELPRESSURE_HPA)) + \" m</td></tr>\");\n            client.println(\"<tr><td>습도</td><td>\" + String(bme.readHumidity()) + \" %</td></tr>\");\n            client.println(\"</table></body></html>\");\n            client.println();\n            break;\n          } else {\n            currentLine = \"\";\n          }\n        } else if (c != '\\r') {\n          currentLine += c;\n        }\n      }\n    }\n    client.stop();\n    Serial.println(\"클라이언트 연결 해제됨.\");\n  }\n}\n```\n\n코드를 업로드하고 실행해 주세요.\n\n<div class=\"content-ad\"></div>\n\nESP32에 코드를 업로드하고, 시리얼 모니터를 115200의 보레이트로 열어주세요. 표시된 IP 주소를 메모해주세요.\n\n웹 서버에 액세스하기\n\n브라우저를 열고 시리얼 모니터에 표시된 IP 주소를 입력해주세요. 표 형식의 웹 페이지에서 온도, 습도, 기압, 고도 정보가 표시될 것입니다. \n\n![ESP32 Web Server](/assets/img/2024-06-19-ESP32WebServerwithBME280_2.png)\n\n<div class=\"content-ad\"></div>\n\n## 결론\n\nESP32를 사용하여 실시간 기상 데이터를 표시하는 웹 서버를 성공적으로 만들었습니다. 이 미니 기상 관측소는 홈 자동화, 환경 모니터링 및 교육 목적을 포함한 다양한 응용 프로그램에 사용할 수 있습니다. 웹 페이지의 모양과 기능을 향상시키기 위해 HTML 및 CSS를 자유롭게 사용해보세요. 즐거운 빌딩하세요!","ogImage":{"url":"/assets/img/2024-06-19-ESP32WebServerwithBME280_0.png"},"coverImage":"/assets/img/2024-06-19-ESP32WebServerwithBME280_0.png","tag":["Tech"],"readingTime":6},{"title":"3D 프린트를 밤에 멈추고 나중에 재개할 수 있을까 2024년","description":"","date":"2024-06-19 05:52","slug":"2024-06-19-CanIPausea3DPrintOvernightandResumeLaterin2024","content":"\n\n\n![3D printing](/assets/img/2024-06-19-CanIPausea3DPrintOvernightandResumeLaterin2024_0.png)\n\n3D 프린팅 세계에서 시간 관리가 중요합니다. 몇 시간 또는 몇 일이 걸릴 수있는 인쇄물이 있지만 인쇄 품질을 희생하지 않고 효율성을 극대화하는 방법을 찾는 것이 중요합니다.\n\n가장 흔한 질문 중 하나는 3D 프린트를 밤에 멈추고 나중에 다시 시작할 수 있는지 여부입니다.\n\n이 블로그 포스트에서는 이 주제에 대해 자세히 살펴보고 3D 프린트를 밤에 멈추고 다시 시작하는 안전한 방법을 제공할 것입니다.\n\n\n<div class=\"content-ad\"></div>\n\n프로세스 이해: 밤새 3D 프린트를 일시 중지하고 재개하는 로직에 뛰어들기 전에, 근본적인 프로세스를 이해하는 것이 중요합니다.\n\n대부분의 3D 프린터는 일시 중지/재개 기능을 제공하여 사용자가 인쇄를 일시 중지하고 나중에 재개할 수 있도록 합니다.\n\n그러나 원활한 전환과 인쇄 품질을 유지하려면 고려해야 할 사항이 몇 가지 있습니다.\n\n더 읽어보기: 밤새 3D 프린트를 일시 중지하고 나중에 재개할 수 있을까?\n\n<div class=\"content-ad\"></div>\n\n성공을 확신하기 위해: 밤에 3D 프린트를 일시 중지하고 성공적으로 다시 시작하려면 다음 필수 팁을 따르세요:\n\n- 시점 선택이 중요합니다: 프린트를 일시 중지할 전략적 시점을 선택하세요. 이상적으로는 레이어 변경이나 프린트 중요 단계가 아닌 시기에 일시 중지하세요. 노즐이 움직이는 중에 일시 중지하지 마세요. 이렇게 하면 최종 출력물에 눈에 띄는 결함이 생길 수 있습니다.\n- 출력 플랫폼 고정: 프린트가 이동하거나 변형되는 것을 방지하기 위해 일시 중지된 상태에서 잉크 카트리지 대추가 플랫폼에 안전하게 고정되어 있는지 확인하세요. 프린트를 확실히 위치로 고정하기 위해 접착제나 클립을 사용하는 것을 고려해보세요.\n- 최적의 조건 유지: 일시 중지 기간 동안 온도 변동으로 인해 출력 품질에 영향을 줄 수 있으니 안정적인 출력 환경을 유지하세요. 바람이 들어오거나 습도가 변할 수 있는 창문이나 문을 열지 말도록 주의하세요.\n- 필라멘트 소비량 확인: 프린트를 일시 중지하기 전에 스풀에 남아 있는 필라멘트가 작업을 완료할 만큼 충분히 남아 있는지 확인하세요. 프린트 중에 필라멘트가 부족해지면 완전하지 않거나 불완전한 출력물이 될 수 있습니다.\n- 정밀도 있게 재개: 프린트를 다시 시작할 때, 프린트가 일시 중지된 정확한 위치로 프린트 헤드를 신중하게 위치시키세요. 일부 프린터는 수동 개입이 필요할 수 있으므로 제조사의 지침을 참조하여 인쇄를 재개하세요.\n\n더 읽기: 3D 프린트를 밤에 일시 중지하고 나중에 다시 시작할 수 있을까요?","ogImage":{"url":"/assets/img/2024-06-19-CanIPausea3DPrintOvernightandResumeLaterin2024_0.png"},"coverImage":"/assets/img/2024-06-19-CanIPausea3DPrintOvernightandResumeLaterin2024_0.png","tag":["Tech"],"readingTime":2},{"title":"제1부 저렴하게 집에서 필라멘트 제작하기","description":"","date":"2024-06-19 05:50","slug":"2024-06-19-Part1Makeyourfilamentathomeforcheap","content":"\n\n플라스틱은 어디에나 있고 저렴한데도 우리는 1kg 필라멘트 스풀에 $20을 지불하고 있습니다. 하지만 이 스풀에는 750그램의 필라멘트만 들어있고 나머지는 빈 스풀의 무게입니다. 제 차고에서 싼 필라멘트를 만드는 방법을 찾기 시작했지만 최근 코로나바이러스로 인해 제 도시의 모든 지역 상점이 필라멘트를 다 팔아치웠고, 아마존과 같은 전자 상거래 웹 사이트들은 정부의 제한으로 인해 필라멘트 스풀을 포함하지 않는 중요한 상품만 배송할 수 있어 필라멘트를 배달해주지 않았습니다. 그래서 저는 생각하기 시작했습니다...\n\n# 많은 노동이 필요할까요!?\n\n사실 아닙니다. 한 번 부품을 조립하면 — 3D 프린터와 정확히 같이 작동합니다. 사실, 3D 프린터보다 조작하기가 훨씬 쉽습니다. 왜냐하면 여기서는 계속해서 동일한 것을 만들기 때문에 3D 프린팅과 달리 슬라이서 조정이나 디자인 변경 또는 지지물을 올바른 위치에 전략적으로 배치해야 하는 다른 모델을 인쇄하려고 할 때 필요한 것이 없습니다. 여기서는 출력 문제, 베드 레벨링, 지지물 요구사항이 없습니다.\n\n조립하는 것은 3D 프린터보다 쉽습니다. 왜냐하면 정밀 조정 및 정렬이 필요한 이동 축이 없기 때문입니다.\n\n<div class=\"content-ad\"></div>\n\n3D 프린터는 균일한 폭/높이의 필라멘트를 누르기 위해 필라멘트를 사용합니다. 반면, 익스트루더는 플라스틱 펠렛을 사용하여 필라멘트를 압출합니다.\n\n기계를 만들면 초기 압출 공정을 조정하는 데 4-8분이 걸립니다. 그 후에는 일괄 크기에 따라 한 번에 10-20 kg의 필라멘트를 얻게 됩니다.\n\n# 필라멘트 익스트루더의 투자 수익률\n\n대부분의 사람들은 필라멘트 익스트루더의 투자 수익률을 계산할 때 실수를 저지르므로, 필라멘트 익스트루더의 투자 수익률을 계산한다면 다음을 염두에 두세요:\n\n<div class=\"content-ad\"></div>\n\n- 대부분의 사람들은 3D 프린터나 필라멘트 구입에 대한 긍정적인 투자 수익을 보지 못할 것입니다.\n- 1kg 스풀은 실제 필라멘트 750그램만 포함하고 있습니다.\n- 나일론12와 같은 강한 소재는 1kg 스풀 당 35-45달러이며, 펠릿은 25kg 봉지에 3-4달러에 팔 수 있습니다.\n- Ekstruder는 전기 모터, 기어박스, 온도 조절기, 열전대와 같은 표준 부품으로 만들어졌으며 이러한 부품들은 중고 가치가 있습니다. Ekstruder를 쉽게 분해하여 부품을 판매하거나 전체 장치를 판매하거나 다른 프로젝트에 부품을 활용할 수 있습니다.\n- 이미 사용한 필라멘트의 중고 가치는 얼마나 될까요? 아마도 제로 또는 음의 가치일 것입니다. 반면, Ekstruder는 중고 가치가 좋은 부품들로 구성되어 있습니다.\n\n이러한 사항을 염두에 두면 ROI간격이 빠르게 좁아지고 투자 금액을 상환하는 속도가 실제보다 빨라질 것입니다.\n\n# 압출 스크류는 어떻게 작동합니까?\n\n이해를 돕기 위해 위에 링크된 동영상을 시청하는 것이 매우 중요합니다. 만약 나사 상단에서 일정한 물 흐름을 유지하고 싶다면, 어떻게 이를 달성할 수 있을까요? 당연히 나사의 회전 속도를 일정하게 유지합니다. 예를 들어, 만약 나사가 정확히 5RPM으로 회전한다면, 시간당 정확히 5리터의 물을 얻을 것입니다. 그러나 RPM이 5RPM에서 6RPM으로 변경된 다음 다시 5RPM으로 변경된다면, 시간당 다른 5리터의 물, 그리고 6리터의 물, 그리고 다시 5리터의 물이 흐를 것입니다.\n\n<div class=\"content-ad\"></div>\n\n필라멘트에 대해서도 마찬가지에요! 스크류가 플라스틱을 노즐을 통해 밀어내는 동안 필라멘트가 일정한 양으로 나와야 한다면, 스크류 회전 속도도 일정해야 합니다.\n\n그렇죠, 용융 필라멘트는 껌처럼입니다. 만약 필라멘트가 노즐로 일정한 양으로 나오면, 용융 필라멘트를 일정한 RPM으로 끌어내기 위해 핀치 롤러를 설정해야 합니다. 그렇게 하면 일정한 신축이 가능해져 일정한 지름이 유지될 거예요.\n\n# 하지만 제 필라멘트를 1.75mm로 정확히 원해요. 전문 회사 제품을 구입하는데 집착하겠습니다.\n\n상용 필라멘트를 사용하려고 하시지만 1.75mm와 정확히 일치하는 필라멘트는 없다는 걸 명심하세요. 이베이나 아마존에 올라온 대부분의 필라멘트는 ± 0.02mm 허용치가 표기돼 있습니다. 즉, 지름은 (-0.02mm) 1.73mm부터 (+0.02mm) 1.77mm까지 변동할 수 있다는 뜻이죠. 하지만 이게 필라멘트 라벨이나 상품 설명에 표기된 내용이며, 실제로는 허용치가 훨씬 나쁠 수 있어요.\n\n<div class=\"content-ad\"></div>\n\nPID(Proportional Integral Derivative) 직경 제어 없이도 제작한 ekstruder로 ±0.03mm의 정밀도를 얻었습니다. 이로 인해 완벽한 출력물을 얻으면서 뚜렷한 결함은 거의 발견되지 않았습니다.\n\n# 그렇다면 왜 좋은 가격대의 필라멘트 ekstruder가 없을까요?\n\n네, 다른 사람들로부터 필라멘트를 짜내는 것이 어렵다는 이야기를 무수히 많이 들었습니다. 그들이 자주 인용하는 이유는 유튜브에서 소형 데스크톱 ekstruder를 구매하고 일정한 직경으로 필라멘트를 짜내지 못한 사람들 때문입니다.\n\n그러한 ekstruder의 일반적인 문제는 충분한 역동력(마력/토크)이 부족하다는 점입니다. 따라서 움직임이 불규칙해지면 모터가 부분적으로나 완전히 멈추게 되어 역동력이 일정하지 않아 용융 플라스틱이 다른 속도로 나오게 되어 직경의 불일치가 발생합니다.\n\n<div class=\"content-ad\"></div>\n\n# 왜 그들은 기계에 강력한 모터를 포함시키지 않는 걸까요?\n\n우선 1마력의 인덕션 모터는 8-10kg를 중량하며 기어박스도 비슷한 무게입니다. 그러니까, 강력한 모터와 기어박스를 추가하면 총 중량은 20kg가 될 것입니다. 나사와 배럴은 추가로 10kg입니다.\n\n이제, 30kg 중량이 포함된 압출기를 판매하려면 이미 국제 배송비로 $300이 소요됩니다($100 당 10kg의 항공 운송료를 사용).\n\n만약 나와 똑같은 압출기를 $600에 만드는 회사가 있다고 해봅시다. 이에 $300의 배송료를 더해도 가격은 이미 $900이 되어 버립니다 — 이렇게 하면 얼마나 많은 취미로 개인이 그걸 사겠어요? 또한 새로운 압출기에 사용된 모터/기어박스/교류 드라이브를 넣을 수 없습니다 — 얼마나 많은 사람이 그것을 사겠어요? $900은 회사 이윤 마진과 노동비를 포함하기 전 가격입니다.\n\n<div class=\"content-ad\"></div>\n\n그 모든 것을 추가하면 동일한 압출기의 최종 비용이 $1500 이 넘어가서 더 이상 경제적이지 않아집니다.\n\n이것은 DIY 경로가 훨씬 더 저렴한 것 중 하나입니다!\n\n오해하지 마세요, 프런트로드 세탁기는 무게가 150kg이지만 소비자에게 배송되는 총 비용은 150kg 미니밀링기의 비용에 비해 훨씬 적습니다. 왜냐하면 근처 이웃 중 대부분의 사람들이 세탁기가 필요하지만 많은 사람들이 밀링기가 필요하기 때문입니다. 이로 인해 회사들이 근처 창고에 세탁기를 대량으로 비치하기가 더 쉽고 저렴해집니다.\n\n# 플라스틱 조달\n\n<div class=\"content-ad\"></div>\n\n필라멘트가 더 이상 구할 수 없어지기 전에, 저는 얼굴 방호대를 출력하고 기부했어요.\n\n도시 내 플라스틱 공급업체들에게 전화를 걸어보니, ABS 추출 등급 플라스틱 펠렛을 1kg 당 $1.40에 공급할 수 있다고 말했어요. 최소 구매량은 25kg입니다.\n\n자동차 제작 소매업체에게 그들의 플라스틱 공급업체 연락처를 요청할 수도 있고, 이들이 당신을 위해 공급 업체를 통해 추가 구매할 의사가 있을 수도 있어요.\n\n이러한 펠렛은 보통 추출 공정을 통해 파이프, 막대, 시트를 제조하는 데 사용됩니다. 어떤 플라스틱 공급업체에서나 구할 수 있어요.\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-06-19-Part1Makeyourfilamentathomeforcheap_0.png)\n\n## 지구 지키기\n\n장기 계획은 재활용업체로부터 재생 플라스틱 펠릿을 구매하여 버진 플라스틱 펠릿과 60:40 비율로 혼합하고 생산된 필라멘트를 전자 상거래 웹사이트에서 판매하는 것입니다. 또한 지역 사회가 자신들의 플라스틱 폐기물을 필라멘트로 재활용할 수 있도록 도와주기 위해 기계를 만들 수 있습니다. 가끔 재활용한 플라스틱은 구조적 특성을 잃기도 합니다. 그래서 버진 플라스틱과 혼합하는 것이 중요하지만 약간 약한 플라스틱은 강도가 크게 필요하지 않은 3D 프린팅 부품에도 적합합니다. 그러나 100% 버진 플라스틱으로 필라멘트를 만들면 생산된 필라멘트는 우수한 강도를 가집니다.\n\n## 왜 ABS인가요?\n\n\n<div class=\"content-ad\"></div>\n\n아마도 추출하기 가장 쉬운 플라스틱 중 하나일 것이며 어디에서나 구할 수 있습니다. 이 플라스틱으로 필라멘트 추출 방법을 익힌 후에 PLA로 넘어갈 거예요.\n\n그리스 연구자들이 ABS 필라멘트 재활용의 영향을 결정했습니다.\n\n# PLA는 어떤가요?\n\n드디어 성공했어요. 현지 공급 업체는 PLA 펠릿을 판매하지 않았지만 대부분 PLA 필라멘트는 NatureWorks Ingeo를 사용하여 만들어진다는 사실을 알게 되었어요. 그들은 제게 Ingeo 3D870 등급을 25kg당 $2.75에 판매하기로 했고, 최소 구매량은 25kg입니다. 저희가 해야 할 일은 이 양식을 완성하는 것뿐이에요: [양식 링크](https://natureworks.wufoo.com/forms/zzcwkzh1m84da3/). 근처를 둘러보면 NatureWorks의 현지 유통업체를 찾을 수도 있습니다. 그러면 교육용 샘플을 요청하는 것이 아니라 문제없이 구매할 수 있어요. 그래도 저는 아직 대학생이라 샘플을 얻는 것이 쉬웠어요. 물건은 네브래스카주 Blair에서 배송되며 배송비는 별도로 청구됩니다.\n\n<div class=\"content-ad\"></div>\n\n# Extruder\n\n이제 필요한 것은 이 펠렛에서 필라멘트를 만들어낼 수 있는 기계입니다. 원칙적으로 extruder는 매우 간단합니다. 아래 산업용 extruder 다이어그램을 참고해보세요. 저희의 extruder는 냉각 팬 및 다이를 빼고 이것과 똑같을 것입니다. extruder를 만드는 데 필요한 구성 요소는 몇 개뿐인 것을 볼 수 있습니다.\n\n![extruder](/assets/img/2024-06-19-Part1Makeyourfilamentathomeforcheap_1.png)\n\n이 작업은 Extrusion이라는 과정을 통해 이루어집니다. 펠렛을 entee funnel이라고도 하는 hopper에 넣습니다. 거기서 펠렛은 나사에 의해 밀려 들어가 밀립니다. 그러면 열매 운동에 의한 나사 이동과 barrel 벽에 가해지는 열에 의해 압축되어 녹습니다.\n\n<div class=\"content-ad\"></div>\n\n마침내, 노즐을 통해 강제로 밀어 넣고 차가운 물에 두 개의 롤러에 의해 끌려갑니다. 지름을 제어하는 것은 끌어당기는 속도이므로, 제조된 필라멘트의 지름을 공급하고 끌어당기는 모터 속도를 제어하는 PID 컨트롤러가 필요합니다. 풀러에는 NEMA 23 모터가 필요합니다.\n\n필라멘트를 감는 스풀을 회전시키는 필라멘트 감아모터에도 또 다른 NEMA 23 모터가 필요합니다.\n\n나사를 구동하기 위해서는 이 과정에 대한 고출력과 저속이 필요하며, 그것이 기어박스의 역할입니다. 기어박스는 모터의 속도를 줄이고 토크를 증가시킨 후에 나사에 연결됩니다.\n\n나사 공급업체에게 이 과정에 `100 rpm만 필요하다고 말을 듣고, 가공된 플라스틱 5kg 당 1마력의 모터가 있어야 한다고 알려받았습니다.\n\n<div class=\"content-ad\"></div>\n\n시스템이 소비하는 총 전력은 얼마인가요? 나는 히터와 모터가 소비하는 전력만 측정했는데, 3킬로와트를 소비하고 있는 것 같아요. 5kg 필라멘트를 생산하기 위해 전기를 사용하면 대략 50센트 정도 드는 것 같아요. 만약 PLA를 만든다면, 전환할 때 동일한 전력을 사용하여 2.5kg PLA 필라멘트만 생산할 수 있으므로 두배로 비용이 들어요.\n\n이 시스템을 사용하여 5kg ABS 필라멘트의 총 비용은 $7.50 입니다 (전력 및 펠릿 가격 포함).\n\n이 기계를 부품으로 조립한 가격은 $600-700 정도 들었어요. 조립하는 것은 어렵지 않아요. 단지 지역에서 부품을 구하고 무거운 물품에 대한 비싼 운송 비용을 피하기만 하면 돼요. 필요한 대부분의 것들은 거의 모든 곳에서 지역적으로 구할 수 있어요.\n\n# 필라멘트 허용도\n\n<div class=\"content-ad\"></div>\n\n좋은 냉각(냉수), 나사의 일정한 속도, 일정한 용융 온도, 그리고 풀러 롤러용 좋은 PID 컨트롤러 튜닝이라면 직경에서 최상의 일관성을 달성할 수 있습니다. 충분한 모터 토크나 열 처리가 없다면 모터가 멈출 수 있고 나사 속도가 변할 수 있습니다. 온도를 일정하게 유지하면 점도 일관성을 유지할 수 있습니다. 압력/온도의 소량의 변동은 풀러 롤러가 통제하여 목표 직경 달성을 돕습니다.\n\n고분자는 특정 열을 높게 가지고 있어 냉각이 오래 걸립니다. 필라멘트를 충분히 빨리 냉각하지 않으면 후에 심어질 수 있어 필라멘트 직경이 일정하지 않게 될 수 있습니다.\n\n도움이 필요하시면 인스타그램에서 연락해주세요: \"alex4core\"\n\n업데이트: 순수 이익으로 140,000달러를 달성했습니다.\n\n<div class=\"content-ad\"></div>\n\n# Part 2","ogImage":{"url":"/assets/img/2024-06-19-Part1Makeyourfilamentathomeforcheap_0.png"},"coverImage":"/assets/img/2024-06-19-Part1Makeyourfilamentathomeforcheap_0.png","tag":["Tech"],"readingTime":7},{"title":"당신 손가락을 위한 또 다른 흥미로운 커리어 기회","description":"","date":"2024-06-19 05:49","slug":"2024-06-19-AnotherExcitingCareerOpportunityforYourFinger","content":"\n\n안녕 친구들!\n\n요즘 한 주면 두 주, 아이디어에 집중하기 어렵다고 느꼈을 거야. 내 두뇌는 마치 마음이 바뀌기 일코 진드기처럼, 한 가지 사물에서 다른 것으로 순식간에 넘어가며 맛을 보고 전염성 있는 개념을 소통하는 게 제격이라구!\n\n헤드룸즈에 대해 더 자세히 설명하고자 하는데, 이번 주에 본사에서 이야기했던 개념의 파생이다:\n\n![이미지](/assets/img/2024-06-19-AnotherExcitingCareerOpportunityforYourFinger_0.png)\n\n<div class=\"content-ad\"></div>\n\n여기서의 목표는 그림의 3D 투영입니다. 약 두 인치 깊이로, 손가락을 꽂을 수 있는 그림입니다. 완성되면, 이것은 Monet의 \"수련과 일본 다리\"의 3D 복제본이 될 것입니다.\n\n![이미지](/assets/img/2024-06-19-AnotherExcitingCareerOpportunityforYourFinger_1.png)\n\n액자 왼쪽 하단의 구멍은 온/오프 스위치의 위치가 될 것입니다. 우리는 배터리와 배선을 숨길 수 있는 작은 공간을 프로토타입 중이며, 이 아름다운 연못 위에 태양빛을 켤 수 있습니다.\n\n![이미지](/assets/img/2024-06-19-AnotherExcitingCareerOpportunityforYourFinger_2.png)\n\n<div class=\"content-ad\"></div>\n\n이 매체에서 이것저것 뛰어다니는 것은 선호사항 이상의 중요성이 있습니다. 왜냐하면 페인트가 마르고 수지가 굳어야 하기 때문에 단순히 앉아서 한 번에 일을 끝내기 힘들어요. 보통 한 번에 이것이나 Headroom 같은 큰 프로젝트를 하나씩 처리하고, 그 사이에 다양한 모델들을 다루면서 각각의 코트를 바를 준비를 합니다.\n\n이번 주에 제가 완성한 몇 가지 작은 작품들을 아래에 올렸어요. 예전에 그린 Malifaux 모형들 중 일부를 손질하기 위해 돌아가봤어요. 예전에 배웠던 것들이 많아서 정말 기분 좋았어요.\n\nInstagram에 더 많은 작품이 있지만, 위 진행 중인 프로젝트 사진들은 오직 당신만을 위한 것이에요, 사랑하는 고인물! 보통 이런 것들을 올리지 않지만, 올리더라도 그 전에 먼저 보여드리죠. 제 떠들석함을 참아주시고, 제 주변에 계셔서 얻게 되는 정신 건강, 패션 감각, 어휘력의 큰 향상도 잊지 말아주세요.\n\n![작업 중인 이미지](/assets/img/2024-06-19-AnotherExcitingCareerOpportunityforYourFinger_3.png)\n\n<div class=\"content-ad\"></div>\n\n아래는 Markdown 형식으로 변환된 테이블입니다.\n\n\n| Header 1 | Header 2 |\n|----------|----------|\n| Data 1   | Data 2   |\n","ogImage":{"url":"/assets/img/2024-06-19-AnotherExcitingCareerOpportunityforYourFinger_0.png"},"coverImage":"/assets/img/2024-06-19-AnotherExcitingCareerOpportunityforYourFinger_0.png","tag":["Tech"],"readingTime":2},{"title":"나는 자동화를 위해 총 수입의 70를 포기했습니다","description":"","date":"2024-06-19 05:48","slug":"2024-06-19-IGaveUp70ofMyGrossIncomeforAutomation","content":"\n\n그리고 나는 또 다시 그렇게 할 것이다!\n\n2017년에 내 창고에서 시작한 3D 프린트 사업이 성공을 거두자, 나는 놀라고 기쁘게 생각했다. 내가 창고에서 만들어 세계로 배송할 수 있는 무언가에 대한 시장을 발견했다는 것이었다. (또는 맞게 말하자면, 그 시장이 나를 발견했다!)\n\n운과 타이밍이 확실히 관여되었습니다.\n\n이것은 이전에 존재하지 않았던 완전히 새로운 시장이었기 때문에, 내 웹사이트를 시작했을 때 시장 포화가 전혀 없었으며, 제품 아이디어가 의도한 시장인 대마초 시장에서 막 시작하고 있었습니다.\n\n<div class=\"content-ad\"></div>\n\n그런 다음, 제가 브랜드명을 산업 표준 제품 이름으로 사용하는 바람에 처음 몇 년 동안 광고비 없이 검색 엔진과 유튜브가 지속적으로 나에게 고객을 보내 주었습니다.\n\n저의 특별한 분야는 대마 싸고 도구 제조입니다. 제 브랜드명과 도메인명은 Cannagar Tools이며, 핵심 키워드는 Cannagar입니다.\n\n왜 이런 것을 언급하느냐고요?\n\n대마 싸고와 관련하여 이제는 전 세계적으로 표준이 된 이 단어가 나를 항상 검색 결과에서 도와주었기 때문입니다.\n\n<div class=\"content-ad\"></div>\n\n특정한 성공 공식이 있었던 것 같지 않게 하고 싶어요. 온라인 비즈니스에서는 때로 성공에는 운이랑 타이밍이 약간 개입되기도 해요. \"적절한 장소에서 적절한 시간에\"와 같은 성공의 요소가 있어요.\n\n(처음의 좋은 운이 끝나면, 나머지는 효과적인 마케팅일 뿐이에요.)\n\n\"나만의 상사가 되었다\"와 \"일과 시간에 구애받지 않는다\"는 것에 대해 정말 행복했었지만... 원하는 것보다 조금 더 일을 많이 했어요. 첫 해에는 주당 약 50~60시간 정도 일한 거죠. \n\n<img src=\"/assets/img/2024-06-19-IGaveUp70ofMyGrossIncomeforAutomation_0.png\" />\n\n<div class=\"content-ad\"></div>\n\n결국 나는 20~25시간이 소요되는 아르바이트로 조정했어요.\n\n당신의 차고에서 인쇄 랩을 운영하는 것은 일이에요.\n\n그걸 피할 방법은 없어요.\n\n결국 나는 인쇄를 외주하기로 결정해서 더 적은 시간에 일할 수 있었어요. 특히, 내 제품의 경우에는 3D프린트 서비스보다 부분 당 가격을 낮게 받아들일 수 있는 파트너를 찾는 것을 의미해요.\n\n<div class=\"content-ad\"></div>\n\n처음에는 총 수입을 50대 50으로 나눴어요.\n\n거래를 할 때 제 총 수입은 약 110,000달러 정도였어요.\n\n주문이 들어오면 제 파트너가 주문을 확인하고 처리를 시작해서, 매주 금요일에 제 수익의 절반을 인쇄 파트너에게 지불했어요.\n\n그런데 제 파트너는 현재 속도로는 계속할 수 없다고 판단해서, 2022년에는 약 90,000달러 정도만 벌었기 때문에 나누는 비율을 재협상해야 했어요.\n\n<div class=\"content-ad\"></div>\n\n요번에 두 번나나 일어났어요, 지금은 30/70 비율이에요.\n\n그는 70을 가져가고, 전에 30을 받아요.\n\n그래서, 캔나가르 금형 10만 달러를 판다면, 저는 3만 달러를 받고, 그는 7만 달러를 받아요.\n\n작년에는 대략 9만 5천 달러였고, 올해는 그걸 뛰어넘을 예정이에요.\n\n<div class=\"content-ad\"></div>\n\n대부분의 사람들이 나 혼자 모든 주문을 처리하고 총액을 남겨야 한다고 생각해. 끝에는 집에서 부분 시간으로 운영 가능한 낮은 오버헤드 낮은 위험 사업이었으니까.\n\n그게 사실이긴 해도, 이 정리가 있어서 기쁘고 장기적으로 이어갈 수 있기를 바랍니다.\n\n맞아, 이제 30%만 벌고 있는데, 세금과 마케팅을 고려하면 현재는 좀 감소한 총 주문량 때문에 $20k 가량이야.\n\n<div class=\"content-ad\"></div>\n\n그래도 집에서 맞춤 작업을 계속하고 있어요. 그것으로 연간 10,000달러에서 20,000달러를 더 벌어요. 그리고 그것은 저에게 시간을 많이 소비하지 않아요. 이 주에는 조금, 그 다음 주에는 좀 더 하면서 계속합니다.\n\n하지만 중요한 건 — 이 수입은 이제 전혀 많은 노력을 기울이지 않고 받는 돈이에요. 이제 제가 많은 여유시간을 가지고 있어요.\n\n![이미지](/assets/img/2024-06-19-IGaveUp70ofMyGrossIncomeforAutomation_1.png)\n\n이미 이메일 마케팅을 자동화했어요.\n\n<div class=\"content-ad\"></div>\n\n올해 초에 이메일 마케팅 워크플로우를 약간 수정하는 것만으로도 가능해요.\n\n저는 Make.com을 사용하여 이메일 자동화를 합니다.\n\n![이미지](/assets/img/2024-06-19-IGaveUp70ofMyGrossIncomeforAutomation_2.png)\n\n나의 모든 지식을 학습한 챗봇이 있어요. 제품을 판매하는 것뿐만 아니라 고객에게 제품 사용 방법을 가르쳐 줄 수 있어요.\n\n<div class=\"content-ad\"></div>\n\nOrimon AI를 사용하여 고객 서비스를 자동화하고 있어요.\n\n![이미지](/assets/img/2024-06-19-IGaveUp70ofMyGrossIncomeforAutomation_3.png)\n\n주문을 처리할 파트너에게 주문을 보내기 위해 Pirateship을 사용하고 있어요.\n\n![이미지](/assets/img/2024-06-19-IGaveUp70ofMyGrossIncomeforAutomation_4.png)\n\n<div class=\"content-ad\"></div>\n\n내 주문이 오고 있고, 이제 Pirateship을 통한 배송 플러그인 덕분에 제 파트너는 그들의 pirateship 계정에서 주문을 볼 수 있어요. 그들은 처리해야 할 것을 알게 되고, 그런 다음 목요일에 나에게 송장을 보내 주고 금요일에 지불하게 돼요.\n\n그들은 배송 라벨을 생성하고 상품을 발송해요.\n\nCannagar Tools는 이제 이메일을 폭발시키거나 세일을 시작하거나, 봇을 넘어서 나에게 도달해야 하는 고객과 상호 작용해야 할 주에 제 시간을 1~2시간 정도 차지해.\n\n내 생각엔 정말 괜찮은데, 물어보면.\n\n<div class=\"content-ad\"></div>\n\n여러 온라인 수입원을 가지고 있는데, 대부분은 이제 대부분 수동적이에요.\n\n제 주요 사업은 이제 부수 수입이에요.\n\n그리고 그것에 행복해요.\n\nCannagar Tools은 앞으로도 부수 수입원이 될 가능성이 높은데, 왜 버려야 할까요?\n\n<div class=\"content-ad\"></div>\n\n거의 시간이 걸리지 않는다면 인쇄 파트너에게 대부분의 수입을 내야 한다고 해도 전혀 문제가 없어요.\n\n열심히 일하지 않아도 내 빚을 갚을 수 있게 되면, 암호화폐 봇과 데이 트레이딩을 마스터하고 싶어요.\n\n이 두 가지가 제 마지막 경지이며, 제가 지금까지 발견한 소득의 가장 상호작용이 적고 의무가 없는 소스인 것 같아요.\n\n솔직히 말하자면, 저는 외딴 곳 워싱턴 주 태평양 인근에서 작고 아기자기한 집에 살고 있어요. 다른 곳과 비교할 때 제 빌은 매우 낮아요.\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-06-19-IGaveUp70ofMyGrossIncomeforAutomation_5.png)\n\n사람들이 나를 억만장자라고 생각하지 않길 바래요.\n\n나도 그렇게 되고 싶어요.\n\n그런데 지금은 수입을 발생시키고 일해야 하는 상황에 만족해요.\n\n\n<div class=\"content-ad\"></div>\n\n저는 많은 돈을 벌지는 않지만, 일하는 방식이 전통적이지 않아요.\n\n일자리가 없어도요.\n\n여기서 제가 사용하는 도구에 대해 가르치고 있어요 :\n\n![Image](/assets/img/2024-06-19-IGaveUp70ofMyGrossIncomeforAutomation_6.png)\n\n<div class=\"content-ad\"></div>\n\n함께해주세요!\n\n# 읽어 주셔서 감사합니다!\n\n즐겁게 보셨다면, 도와주실 수 있는 세 가지 방법이 있어요:\n\n- 팔로우 → Automated Income Lifestyle\n- 만족하셨다면 감사의 표시와 댓글 남겨주세요\n- 제가 Medium에 포스트를 올릴 때마다 이메일 받기 → 여기를 클릭하세요\n\n<div class=\"content-ad\"></div>\n\n앞으로도 계속 봐요....\n\n# 모두 앞으로 나가요!\n\n- Chris\n\n#봇생활 #자동수입 #수동수입 #라이프스타일팁 #총소득 #비즈니스","ogImage":{"url":"/assets/img/2024-06-19-IGaveUp70ofMyGrossIncomeforAutomation_0.png"},"coverImage":"/assets/img/2024-06-19-IGaveUp70ofMyGrossIncomeforAutomation_0.png","tag":["Tech"],"readingTime":5},{"title":"3D 프린팅을 이용한 잘못된 혁신의 위험","description":"","date":"2024-06-19 05:45","slug":"2024-06-19-TheRiskofFalseInnovationusing3DPrinting","content":"\n\n![테이블 이미지](/assets/img/2024-06-19-TheRiskofFalseInnovationusing3DPrinting_0.png)\n\n## 3D 프린팅을 사용한 유사 혁신의 위험: 기술이 역행하여 최선의 의도가 다시 당신을 괴롭힐 때!\n\n# 사우디 아라비아 왕국의 산업 생태계\n\n산업 혁명은 대량 생산의 시대를 열었으며 제조업의 지형을 영원히 바꾸었습니다. 오늘날, 새로운 혁신의 파도가 다시 한번 산업을 재편하려고 합니다: 부가 제조 (AM), 보다 일반적으로는 3D 프린팅으로 더 잘 알려져 있습니다. 신속한 프로토타입 제작, 디자인 유연성 및 주문형 생산의 약속을 가지고 있는 AM은 전 세계적으로 기업들의 상상력을 사로잡았습니다.\n\n<div class=\"content-ad\"></div>\n\n그러나 많은 기업들에게 있어서 Additive Manufacturing 구현의 성공적인 길은 오해로 가득합니다. 이 케이스 스터디는 Additive Manufacturing 세계에서 \"가짜 혁신\"의 환상을 탐구합니다. 여기서 기술 획득에 집중함으로써 사우디 아라비아 왕국에서 3D 프린팅이 유기적으로 채택되도록 보장해야 하는 문화적 및 운영적 변화의 중요성이 간과되는 문제를 살펴봅니다.\n\n# 케이스 스터디: 위젯코프와 원더랜드에서의 3D 프린팅 잘못된 도입\n\n익명성을 위해, 이야기를 공유할 실제 회사의 이름을 바꿨습니다. 유감스럽게도, 이 회사는 혁신과 기술 사용에 대한 잘못된 인식으로 인해 절벽으로 떨어질 위기에 처해 있습니다. 회사의 이름보다 중요한 교훈을 전달하기 위해 그들의 실화를 공유하는 데 강력하게 감동받았습니다. 아래 사건들은 실제이지만 이름은 변경되었습니다...\n\n회사: 위젯코프, 원더랜드 국가에 입성한 중소 규모의 3D 프린팅 제조 회사.\n\n<div class=\"content-ad\"></div>\n\n도전 과제: 위젯회사는 원더랜드 정부로부터 저렴한 비용으로 복잡한 소량의 기계 부품에 대한 리드 타임을 개선해야 한다는 압력을 받았습니다. 이들은 3D 프린팅이 전통적인 공구 없이 정교한 기하학을 만들 수 있는 능력 때문에 잠재적인 해결책으로 보았습니다. 그에 따라, 그들은 원더랜드 지역 산업의 필요를 충족시키기 위해 3D 프린팅 서비스에 특화된 새로운 회사를 설립했습니다.\n\n## 잘못된 접근\n\n- 경영층 열광: 위젯회사의 임원들은 모든 제조 문제를 해결할 수 있는 혁신적인 기술로 3D 프린팅을 세운 산업 협시와 마케팅에 영향을 받았습니다.\n- 눈부신 물건 증후군: 3D 프린팅의 \"멋진 요소\"에 매혹되어 위젯회사는 기술적 및 재정적 기능이나 한계에 대한 명확한 이해 없이 여러 대의 고급 3D 프린터를 구입했습니다.\n- 내부 집중: 세대를 끌어온 지불매칭 제조 공정과 3D 프린팅을 통합할 필요를 과소 평가했습니다.\n- 위에서 아래로 밀어넣기: 관리진은 기계 부품에 3D 프린팅 사용을 강요했지만 구현에 대한 책임이 있는 엔지니어 및 기술자들과 상의하지 않았습니다.\n- 최종 사용자 방치: 위젯회사는 3D 프린팅의 새로움으로 임원진을 감동시키는 데 초점을 맞추어 3D 프린팅의 혜택을 실제 적용에 결정을 내릴 엔지니어들에게 양보하지 않았습니다.\n\n## 불가피한 함정\n\n<div class=\"content-ad\"></div>\n\n- 기술적인 장애: WidgetCorp의 엔지니어들은 3D 프린팅의 복잡성으로 인해 고민할 것입니다. 재료 선택, 부가 제조용 부품 설계 및 후속 가공 기술에 대한 도전에 직면할 것입니다.\n- 통합 문제: 3D 프린팅된 구성 요소를 기존 워크플로에 통합하는 것은 어려워질 것입니다. 팀은 부가 접근 방식을 보완하기 위해 기존 감산 공정을 최적화하는 전문 지식이 부족합니다.\n- 비용에 대한 환멍: 비용 절감에 대한 초기 흥분이 3D 프린터의 재료, 교육 및 지속적인 유지 보수의 높은 비용을 고려할 때 식을 것입니다.\n- 엔지니어의 좌절: 상위에서의 압박과 현장 엔지니어들의 참여 부족으로 인해 3D 프린팅에 대한 좌절감과 저항감이 생길 것입니다.\n- 놓친 기회: WidgetCorp은 지역 감산 제조 전문가, 역공학 회사 및 금속학 분석 전문가와의 잠재적인 파트너십을 탐색하지 않았기 때문에 전통적인 제조 방식과 부가 제조 사이의 간극을 좁히는 데 도움을 줄 수 있었던 기회를 놓쳤습니다.\t\n\n# 오인되기 쉬운 혁신의 위험\n\n3D 프린팅은 흥미로운 가능성을 제공하지만 산업용 기계 부품에 대한 일반적인 해결책은 아닙니다. 여기에는 기계 부품용 3D 프린팅이 원활하게 적용되지 않고 최종 사용자들로부터 널리 받아들여지지 않는 이유가 있습니다:\n\n# 1. 기술적 제약들\n\n<div class=\"content-ad\"></div>\n\n원더랜드에서 종단 사용자에 의한 3D 프린팅 부품에 대한 철저하고 실제 세계 테스트가 부족합니다. 이는 원더랜드의 높은 열, 진공 및 습도와 같은 가혹한 환경에서 장기적으로 이러한 부품이 어떻게 성능을 발휘하는지에 대한 확고한 데이터가 없다는 것을 의미하며 다음과 같은 몇 가지 우려사항을 던집니다:\n\n- 기계적 통합성: 3D 프린팅된 부품이 의도된 용도에 충분히 강하고 내구성이 있는지 여부는 물음이 됩니다.\n- 입자 구조의 영향: 3D 프린팅의 층별 구조가 전통적인 방법과 비교하여 부품의 성능에 미치는 영향은 무엇인가요?\n- 재료 제한: 모든 전통적으로 사용되는 산업 재료가 3D 프린팅과 동일한 신뢰할 수있는 대응 재료를 보유하지 않습니다. 3D 프린팅 부품이 필드에서 안전하고 신뢰성 있게 작동하기 위해 필요한 동일한 강도, 피로 저항 또는 기타 중요한 속성을 가질 수도 없습니다. 3D 프린팅 부품이 성능 표준을 충족하는 것을 확실히 하기 위해 철저한 테스트와 현장 평가가 종종 필요합니다.\n- 재료 동등성: 선택된 3D 프린팅 재료가 전통적으로 가공된 재료와 같은 속성과 성능을 가지고 있는지는 어떤가요?\n- 구조적 제약: 3D 프린팅은 복잡한 기하학에서 뛰어나지만 일부 산업 부품은 현재의 프린팅 방법으로 어렵게 달성할 수 있는 높은 스트레스, 압력, 온도를 경험하거나 특정 결정 구조가 필요할 수 있습니다. 이러한 엄격한 응용 분야에는 전통적인 제조 기술이 더 적합할 수 있습니다.\n- 제한된 공학 전문 지식: 부가 제조를 위해 특별히 설계된 부품을 위한 공학 상점 도면을 개발하기 위해 기계 설계를 이해하는 경험있는 인력의 부족이 있습니다. 부가 제조를 채택하려는 경우 제조 생태계에서의 경험의 한정성으로 인해 공학 상점 도면은 높은 부정 소홀로 취급되며 기계 디자이너가 운영 조건을 부품 설계로 통합하는 방법으로 설계 자체에 통합합니다.일치시키는 공학 요소는 필드에 설치될 때 잘 맞도록,\n  \n# 2. 비용 고려 사항\n\n이러한 부품에 대한 3D 프린팅이 실제로 전통적인 치솟형 제조(가공 및 주조)보다 저렴한지 여부는 분명하지 않습니다. 고려해야 할 요소는 다음과 같습니다:\n\n<div class=\"content-ad\"></div>\n\n- 부가비용 대비 차감비용: 3D 프린팅 공정 및 소재 비용이 가공과 비교하여 줄어든 폐기물로 인해 상쇄되는가요?\n- 물류 비용: 현재 소재와 기계 모두 수입품인데, 비용에 추가로 부가되는 운송 및 통관 수수료가 있나요?\n\n# 3. 불확실한 기준\n\n원더랜드에서 3D 프린트로 제작된 기계 부품에 대한 명확한 규제 프레임워크가 없습니다. 이는 제조업체가 부품이 안전하고 신뢰할 수 있는지 판단하기 위해 어떤 기준을 준수해야 하는지 알기 어렵게 만듭니다.\n\n간단히 말해, 원더랜드에서의 기계 부품용 3D 프린팅 기술은 아직 초기 단계에 있습니다. 대중적인 채택이 일어나기 전에 이러한 문제를 해결하기 위해 더 많은 연구, 시험 및 개발이 필요합니다.\n\n<div class=\"content-ad\"></div>\n\n아래 표를 Markdown 형식으로 변경해 주세요.\n\n![이미지](/assets/img/2024-06-19-TheRiskofFalseInnovationusing3DPrinting_1.png)\n\n하지만, 3D 프린팅은 다음과 같은 영역에서 빛을 발합니다:\n\n- 디자인 최적화: 복잡한 내부 구조물을 만들어내어 3D 프린팅은 강도를 유지하면서 무게와 소재 사용량을 줄일 수 있습니다. 이는 디자인을 최적화하고 낭비를 최소화하는 데 큰 장점입니다.\n- 부품 통합: 여러 구성 요소가 필요한 복잡한 부품을 3D 프린팅을 통해 단일 유닛으로 재설계할 수 있습니다. 이를 통해 용접이나 조립이 필요 없어지며, 생산을 간소화하고 부품 성능을 개선할 수 있습니다.\n\n기계 부품으로 3D 프린팅을 신뢰할 수 있고 실용적인 옵션으로 만드는 비결은 적절한 해법을 찾는 것입니다. 전통적인 제조와 부가 제조 모두 장단점이 있습니다. 이상적인 접근 방식은 종종 둘을 결합하는 것입니다.\n\n<div class=\"content-ad\"></div>\n\n3D 프린팅 부품의 성능을 특정 응용 프로그램에 대해 유효성을 검증하는 것은 필드 테스트가 중요한 역할을 합니다. 기술이 성숙해지고 다양한 재료가 이용 가능해지면, 3D 프린팅 부품에 대한 유효한 응용 프로그램 범위가 계속 확대될 것입니다.\n\n# 아직 늦지 않았어요...\n\n![image](/assets/img/2024-06-19-TheRiskofFalseInnovationusing3DPrinting_2.png)\n\n# 아직 늦지 않았어요...\n\n![image](/assets/img/2024-06-19-TheRiskofFalseInnovationusing3DPrinting_3.png)\n\n<div class=\"content-ad\"></div>\n\n위젯 회사의 경험은 3D 프린팅에 대한 \"놀라운 해결책\" 태도의 위험을 강조합니다. 진정한 혁신을 이루기 위해서는 전체 생태계를 고려한 종합적인 접근이 필요합니다.\n\n- 기존 프로세스와의 조화: 기존 제조 능력과의 원활한 통합이 중요합니다.\n- 협업: 제조업자, 역공학자, 금속학 실험실 전문가와 협력하는 것이 유용한 지식과 지원을 제공할 수 있습니다.\n- 최종 사용자 중심: 기술 팀에게 3D 프린팅의 가치 제안을 증명하는 데 성공이 달려 있습니다.\n- 현실적인 기대: 3D 프린팅은 강력한 도구지만 일맞는 해결책은 아닙니다. 채택하기 전 신중한 평가와 계획이 필수적입니다.\n\n# 앞으로의 길\n\n위젯 회사가 자신들의 실수를 인식한다면, 아직 소멸되지 않은 희망이 있으므로 수정 조치를 취할 수 있습니다:\n\n<div class=\"content-ad\"></div>\n\n- 교육 및 교육: 3D 프린팅의 기능과 한계에 대해 최종 사용자 엔지니어 및 기술자들에 대해 인식을 높이고 교육을 제공해야 합니다. 왜냐하면 그들은 부가 제조 부품을 채택한 결과를 직접 경험해야 하며, 그것이 안전하다고 믿어야 하기 때문입니다.\n- 협업: 부가 제조, 역공학, 및 금속학 전문가와 협업하여 3D 프린팅에 적합한 부품을 식별하고 추가 과정에 디자인을 최적화합니다.\n- 하향식 접근: 엔지니어들에게 잠재적인 응용 분야를 식별하고 구성 요소에 대해 3D 프린팅을 실험할 수 있도록 권한을 부여합니다.\n- 강요가 아닌 시연: 엔지니어 및 기술 팀에게 기술적 및 비용적 이점을 시연해 3D 프린팅을 확신하도록 해야 합니다.\n\n이러한 종합적인 접근 방식을 채택함으로써, 위젯사는 원더랜드 내부 생태계에 3D 프린팅을 원활하게 통합하여 특정 응용 분야에 대한 제조 프로세스를 전략적으로 개선할 수 있어 비용 절감과 개선된 설비 시간을 이끌어 낼 수 있습니다.\n\n## 에필로그\n\n위젯사의 사례는 부가 제조 분야로 진입하려는 기업들에게 주의를 줄 필요가 있음을 알려줍니다. 3D 프린팅은 훌륭한 잠재력을 제공하지만, 진정한 혁신은 단순히 프린터를 확보하는 것이 아니라 종합적인 접근을 육성하는 데 있습니다. 이는 부가적인 플레이어부터 공급망 전문가까지 제조 생태계 전반에 파트너십을 구축하는 것을 포함합니다.\n\n<div class=\"content-ad\"></div>\n\n가장 중요한 것은 성공적인 부가 제조 채택이 기술 팀의 찬성에 달려 있습니다. 이 팀은 기술의 복잡성을 탐색할 것입니다. \"만들면 사람들이 올 것이다\"라는 태도를 버리고 협력적이고 사용자 중심적인 접근을 채택함으로써 기업은 부가 제조의 참된 잠재력을 발휘하고 지속 가능하고 민첩한 제조의 미래로 전진할 수 있습니다.\n\n\n![2024-06-19-TheRiskofFalseInnovationusing3DPrinting_4.png](\"https://path_to_your_image_file\")\n\n## 주요 포인트\n\n![2024-06-19-TheRiskofFalseInnovationusing3DPrinting_5.png](\"https://path_to_your_image_file\")\n\n<div class=\"content-ad\"></div>\n\n은박 어린 총알의 환상\n\n- 3D 프린팅은 도구일 뿐이며 만병통치약이 아닙니다: 3D 프린팅은 모든 제조 문제를 해결할 수 없습니다. 3D 프린팅에만 집중하는 것은 성공적인 통합에 필요한 광범위한 생태계를 무시하는 것입니다.\n- 기계를 구매하는 것이 혁신이 아닙니다: 진정한 혁신은 3D 프린팅이 기존 워크플로우를 어떻게 최적화하고 완전히 새로운 가능성을 창출할 수 있는지를 이해하는 데 있습니다.\n- 현상에 넘어서: 3D 프린팅의 \"멋진 요소\"가 성공적인 구현을 위해 필요한 어려운 작업을 가리킬 수 있습니다.\n- 고립된 혁신은 실패합니다: 3D 프린팅 통합은 기존 제조 공정을 고려해야 하며, 고립된 상태에서 작동해서는 안됩니다.\n\n생태계의 중요성\n\n- 성공을 위한 파트너십: 순방식 제조업체, 역공학 전문가 및 금속학 실험실 전문가와의 협력이 필수적입니다.\n- 기존 참가업체와의 협력: 부가 제조는 기존 워크플로우를 방해해서는 안되며, 보완하여 향상시켜야 합니다.\n- 현지화가 중요합니다: 지역의 Bed를 잘 아는 현지 역공학 회사와의 협력이 효율적인 적용에 중요합니다.\n- 공급망 통합: 기존 공급망에 3D 프린팅을 매끄럽게 통합하여 중단을 최소화하고 워크플로우를 최적화합니다.\n\n<div class=\"content-ad\"></div>\n\n경영진을 넘어서\n\n- 최종 사용자의 참여가 중요합니다 : 기술 능력을 이해하는 기술 사용자들이 성공적인 도입의 핵심입니다.\n- 기술적 이점에 초점을 맞추세요 : 3D 프린팅이 \"멋있다\"는 것뿐만 아니라 기술적 문제를 해결하는 방법을 강조하세요.\n- 실용성에 호소하세요 : 관리자와 경영진뿐 아니라 기술을 직접 사용할 엔지니어와 기술자를 참여시키세요.\n- 장식이 아닌 시연 : 실제 기술 팀이 직면한 실제 문제를 해결하는 3D 프린팅의 구체적인 응용 사례를 보여주세요.\n\n가짜 혁신의 위험\n\n- \"만들면 사용자가 찾아올 것\" 오류 : 새로운 것이라고 해서 3D 프린팅을 자동적으로 받아들일 것이라고 가정하는 것은 실패의 원인이 될 수 있습니다.\n- 고립된 혁신은 이질감을 낳습니다 : 고립된 환경에서 작업하는 것은 성공적인 도입을 위해 핵심이 되는 잠재적 사용자들을 소외시킵니다.\n- 가짜 혁신은 위험 회피를 증가시킵니다 : 너무 많은 약속과 실망은 기업이 새로운 기술에 대해 계산된 위험을 감수하려는 것을 억제할 수 있습니다.\n- 산업에 해를 끼치는 것 : 가짜 혁신은 3D 프린팅에 대한 부정적인 인식을 만들어내어 보다 넓은 도입을 저해할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n믿음과 장기적인 성공을 구축하기\n\n- 투명성이 핵심입니다: 3D 프린팅의 능력과 한계에 대한 현실적인 기대를 설정합니다.\n- 교육에 집중: 기술 및 비기술 사용자들에게 3D 프린팅의 잠재력에 대해 교육에 투자합니다.\n- 작게 시작하고 스마트하게 확장: 대규모 시행 전 가치를 증명하기 위해 시범 프로젝트를 시작합니다.\n- 지속적인 개선: 사용자 피드백과 지속적인 평가를 바탕으로 3D 프린팅의 통합을 개선합니다.\n\n![이미지](/assets/img/2024-06-19-TheRiskofFalseInnovationusing3DPrinting_6.png)\n\n<div class=\"content-ad\"></div>\n\n해시 댄서 로그인 이메일: hashim@dartec.com.sa\n\n다르테크 웹사이트: www.DarTec.com.sa","ogImage":{"url":"/assets/img/2024-06-19-TheRiskofFalseInnovationusing3DPrinting_0.png"},"coverImage":"/assets/img/2024-06-19-TheRiskofFalseInnovationusing3DPrinting_0.png","tag":["Tech"],"readingTime":8},{"title":"제목 AI 매일매일을 환영합니다","description":"","date":"2024-06-19 05:44","slug":"2024-06-19-WelcometoAIEveryday","content":"\n\n환영합니다! 인공지능 세상의 흥미로운 통찰, 트렌드, 혁신을 제공하는 AI Everyday에 오신 것을 환영합니다. 저희의 미션은 AI를 해독하고 어떻게 우리의 일상을 형성하고 향상시키는지를 보여주는 것입니다. 우리가 사용하는 장치부터 의존하는 서비스까지, AI가 우리가 자주 깨닫지 못하는 많은 방법으로 영향을 미치고 있습니다. AI의 미래를 함께 탐험하기 위해 이 여정에 동참해 보시죠.\n\n일상생활 속 AI의 부상\n\n인공지능은 더 이상 과학 소설에만 제한된 개념이 아니라, 우리의 세상을 변화시키고 있는 현실입니다. 다음은 AI가 우리 일상생활의 다양한 측면에서 어떻게 영향을 미치고 있는지 알아봅니다:\n\n1. 스마트 홈:\n\n<div class=\"content-ad\"></div>\n\n• 음성 비서: 아마존 알렉사, 구글 홈, 애플의 시리 같은 장치들이 가정에서 필수품이 되었어요. 이들은 작업 관리, 스마트 홈 장치 제어 및 필요 시 정보 제공을 도와줘요.\n\n• 스마트 가전제품: 식량 재고를 모니터링하는 냉장고, 선호하는 온도를 학습하는 온도 조절기, 얼굴을 인식하는 보안 시스템 등은 스마트 홈에서 인공 지능의 몇 가지 예시에 불과해요.\n\n2. 건강 관리:\n\n• 진단: 암과 같은 질병의 진단 정확도를 향상시키는 AI 알고리즘은 종종 전통적인 방법보다 더 빨리 문제를 발견해줘요.\n\n<div class=\"content-ad\"></div>\n\n- 개인 건강 어시스턴트: 응용 프로그램과 웨어러블 기기는 건강 지표를 추적하고 맞춤형 건강 조언을 제공합니다.\n\n3. 교통:\n\n- 자율 주행 차량: Tesla, Waymo, Uber와 같은 기업들이 자율 주행 자동차를 개발하고 있어, 교통을 더 안전하고 효율적으로 만들어줄 것입니다.\n\n- 교통 관리: AI는 스마트 신호등과 실시간 교통 분석을 통해 교통 흐름을 최적화하고 혼잡을 줄이는 데 도움을 줍니다.\n\n<div class=\"content-ad\"></div>\n\n4. 엔터테인먼트:\n\n- 콘텐츠 추천: Netflix와 Spotify와 같은 스트리밍 서비스는 AI를 사용하여 사용자 선호에 맞춰 영화, TV 프로그램, 음악을 제안합니다.\n\n- 게임: AI가 비디오 게임을 개선하여 더 현실적이고 도전적인 환경을 만들어냅니다.\n\n5. 직장:\n\n<div class=\"content-ad\"></div>\n\n• 자동화: AI 기술을 활용한 도구들이 루틴 업무를 자동화하며, 직원들이 더 전략적인 활동에 집중할 수 있도록 도와줍니다.\n\n• 데이터 분석: AI는 대규모 데이터셋을 분석하여 비즈니스 결정을 이끌어내는 통찰을 제공하는 데 도움을 줍니다.\n\nAI의 미래\n\nAI가 계속 발전함에 따라 그 응용 분야는 점점 확장될 것입니다. 우리가 의미 있는 발전을 기대할 수 있는 몇 가지 분야는 다음과 같습니다:\n\n<div class=\"content-ad\"></div>\n\n• 의료 혁신: 예측 분석과 맞춤 의학은 의료 혁명을 일으킬 것입니다.\n\n• 교육: AI(인공지능) 튜터와 맞춤형 학습 플랫폼은 교육을 더 접근 가능하고 개인의 필요에 맞게 맞출 수 있게 만들어줄 것입니다.\n\n• 지속 가능성: AI는 스마트 에너지 관리와 환경 모니터링을 통해 기후 변화에 대처하는 데 중요한 역할을 할 것입니다.\n\n우리와 함께 이 여정을 떠나요.\n\n<div class=\"content-ad\"></div>\n\nAI Everyday에서는 AI의 최신 개발 내용을 제공하고 이러한 기술이 우리 모두에게 어떻게 혜택을 줄 수 있는지 탐색하는 데 약속합니다. AI 애호가, 전문가 또는 미래에 대해 궁금한 분이든 상관없이, 우리와 함께하실 것을 초대합니다.\n\nBy Nova,\n\n![Welcome to AI Everyday](/assets/img/2024-06-19-WelcometoAIEveryday_0.png)","ogImage":{"url":"/assets/img/2024-06-19-WelcometoAIEveryday_0.png"},"coverImage":"/assets/img/2024-06-19-WelcometoAIEveryday_0.png","tag":["Tech"],"readingTime":2},{"title":"사물 인터넷 프로토콜  HTTP 2, WebSocket, MQTT, Zigbee, Matter 및 Thread","description":"","date":"2024-06-19 05:42","slug":"2024-06-19-IoTProtocolsHTTP2WebSocketMQTTZigbeeMatterandThread","content":"\n\n<img src=\"/assets/img/2024-06-19-IoTProtocolsHTTP2WebSocketMQTTZigbeeMatterandThread_0.png\" />\n\nIoT 장치는 우리 삶 속에 어디에나 존재합니다. 직장에서, 집에서, 도시에서 모두 사용됩니다. 그들은 상태와 업무에 따라 데이터를 송수신하기 위해 사설 네트워크 또는 인터넷을 사용합니다. Amazon Echo와 Google Home 같은 인기 있는 예시를 고려하면 IoT가 스마트폰과 같이 우리 삶을 최종적으로 지배할 것임을 알 수 있습니다. 이 기술이 발전함에 따라 작동하는 프로토콜도 발전해야 합니다.\n\n이 게시물에서 오늘날 사용 가능한 IoT 프로토콜에 대한 개요를 제공하겠습니다!\n\n각 프로토콜의 주요 기능을 ChatGPT가 요약한 것을 주의해 주세요 :)\n\n<div class=\"content-ad\"></div>\n\n# HTTP/2\n\nHTTP/2는 그 전 버전인 HTTP/1.1을 향상시킨 월드 와이드 웹 프로토콜입니다. 웹 통신의 성능과 효율성을 향상시키기 위해 설계되었습니다. 대기 시간을 줄이고 페이지 로드 시간을 더 빠르게 하며 리소스 전달을 최적화함으로써 웹 통신을 개선하는 것이 목표입니다.\n\nHTTP/2는 IoT 통신에 여러 가지 개선 사항을 가져왔습니다. 다중화를 도입하여 단일 TCP 연결을 통해 여러 요청과 응답을 보낼 수 있도록 하여 여러 연결이 필요 없어지고 효율성이 향상되었습니다. 이는 HTTP/1.1에서 사용되는 텍스트 형식보다 더 간결하고 효율적인 바이너리 프로토콜을 채택하여 통신을 더 빠르고 신뢰할 수 있도록 했습니다. HTTP/2는 HPACK 알고리즘을 사용하여 헤더 압축을 채택하여 중복되거나 불필요한 헤더가 많은 요청에 대한 데이터 전송 오버헤드를 줄이는 장점을 가졌습니다. 또한, 서버 푸시를 도입하여 서버가 클라이언트 캐시로 리소스를 미리 전송함으로써 왕복 시간을 줄이고 페이지 로드 시간을 높일 수 있습니다.\n\n[HTTP/2 (github.com)](https://github.com)\n\n<div class=\"content-ad\"></div>\n\n# 웹소켓\n\nHTTP/1의 전통적인 요청-응답 모델과는 다르게 웹소켓은 클라이언트와 서버 간에 실시간, 양방향 통신을 하나의 TCP 연결을 통해 가능하게 합니다. 이는 HTTP/2와 유사한 풀-듀플렉스 형태를 띠고 있습니다. 웹소켓은 클라이언트와 서버 간의 연결을 유지하며 오버헤드와 지연 시간을 줄여줍니다. 웹소켓은 경량 헤더를 사용하여 HTTP/1에 비해 오버헤드가 낮습니다. 이는 작은 데이터 패킷을 자주 보내는 것에 효율적이며 특히 실시간 애플리케이션에 유용합니다. \n\nHTTP/2와 웹소켓 사이의 유사점을 주목하고 묻는 것이 좋습니다: 왜 새로운 기술인 HTTP/2를 사용하지 않는 대신에 웹소켓을 사용해야 하는 것일까요? 핵심은 HTTP/2에 소개된 서버 푸시가 데이터를 클라이언트에게 직접이 아닌 클라이언트 애플리케이션으로 전송하는 것이라는 점입니다. 따라서 많은 기기는 웹소켓에서 제공하는 추가적인 핸드쉐이크와 유사한 것이 여전히 필요할 것입니다.\n\n[http2 — Does HTTP/2 make websockets obsolete? — Stack Overflow](#)\n\n<div class=\"content-ad\"></div>\n\n웹소켓/ws: Node.js를 위한 사용하기 쉽고 빠르며 철저히 테스트된 WebSocket 클라이언트 및 서버입니다. (github.com)\n\n# MQTT\n\n메시지 큐잉 텔레메트리 전송은 제한된 자원 환경에서의 경량 IoT 프로토콜입니다. 발행-구독 패턴에서 효율적인 기계 간 통신을 위해 설계되었습니다.\n\n다음은 MQTT의 주요 기능 중 일부입니다:\n\n<div class=\"content-ad\"></div>\n\n- 가볍고 효율적인: MQTT는 가벼우며 효율적으로 설계되어, 리소스가 제한된 기기와 저대역폭 네트워크에 적합합니다. 작은 메시지 헤더와 이진 페이로드 형식을 사용하여 데이터 오버헤드를 최소화합니다.\n- 서비스 품질(QoS) 수준: MQTT는 신뢰할 수 있는 메시지 전달을 보장하기 위해 다양한 수준의 서비스 품질을 지원합니다. 세 가지 QoS 수준은 \"최대 한 번\" (발송 및 소멸), \"적어도 한 번\" (확인) 및 \"정확히 한 번\" (보증 전달)입니다. 적절한 수준은 응용 프로그램 요구 사항에 기반하여 선택할 수 있습니다.\n- 지속적인 연결: MQTT는 기기와 브로커 간의 지속적인 연결을 허용합니다. 연결이 설정되면 기기는 열어 둘 수 있어 각 메시지마다 새로운 연결을 설정하는 오버헤드를 최소화할 수 있습니다.\n- 유언과 테스터먼트 (LWT): MQTT는 기기가 예상치 못한 연결 해제 시 브로커가 발행할 메시지를 지정할 수 있는 유언과 테스터먼트라는 기능을 제공합니다. 이 기능을 통해 오프라인 기기의 감지와 처리가 가능해집니다.\n\neclipse/mosquitto: Eclipse Mosquitto — 오픈 소스 MQTT 브로커 (github.com)\n\n# 지그비\n\n지그비는 무선 통신 프로토콜입니다. 스마트 홈, 건물 자동화, 산업 자동화 및 무선 센서 네트워크를 포함한 다양한 분야에서 응용되었습니다. 저전력 소비, 망 네트워킹 및 신뢰성에 중점을 둔 지그비는 배터리 구동 기기가 로컬 네트워크 내에서 무선으로 통신해야 하는 시나리오에 적합합니다.\n\n<div class=\"content-ad\"></div>\n\nZigbee의 주요 특성과 기능은 다음과 같습니다:\n\n- 저전력 소비: Zigbee는 저전력 수면 모드를 활용하여 기기가 데이터를 전송하거나 수신하지 않을 때 전력을 절약할 수 있습니다. 이는 Zigbee를 사용하는 기기들이 오랜 배터리 수명을 가질 수 있도록 합니다.\n- 메시 네트워킹: Zigbee는 메시 네트워킹 토폴로지를 사용하여 기기가 종단 장치 및 라우터 역할을 할 수 있습니다. 각 기기는 무선 범위 내의 다른 기기들과 직접 통신하거나 이웃 기기를 중계로 사용하여 메시지를 전달할 수 있습니다. 이는 자가 치유 및 자가 구성 네트워크를 형성하여 확장된 커버리지를 제공하고 네트워크의 내구성을 높일 수 있습니다.\n- 신뢰성 및 간섭 회피: Zigbee는 다른 무선 장치들의 간섭을 피하기 위해 주파수 호핑 기술을 사용합니다. 이는 통신 신뢰성을 유지하기 위해 동적으로 채널을 변경하며 간섭이 발생해도 통신이 유지됩니다.\n- 낮은 데이터 전송 속도: Zigbee는 몇 킬로비트에서 몇 백 킬로비트까지의 낮은 데이터 전송 속도를 필요로 하는 응용 프로그램에 최적화되어 있습니다. 이는 에너지 효율성과 오랜 배터리 수명을 우선시하는 응용 프로그램에 적합합니다.\n\nSmartThingsCommunity/SmartThingsPublic: SmartThings 오픈 소스 DeviceType Handlers 및 SmartApps 코드 (github.com)\n\n# Matter\n\n<div class=\"content-ad\"></div>\n\nMatter 프로토콜은 Apple, Google, Amazon 및 Zigbee Alliance를 포함한 주요 기술 회사들을 결합한 오픈 소스, 로열티 없는 연결 프로토콜입니다. Matter의 목표는 서로 다른 제조업체의 스마트 홈 기기들이 어떤 기술을 기반으로 하든 상호 운용성과 쉬운 설정을 가능케 하는 것입니다.\n\n다음은 Matter 프로토콜의 주요 측면 몇 가지입니다:\n\n- 상호 운용성: Matter는 스마트 기기가 브랜드나 소프트웨어 생태계와 관계없이 서로 매끄럽게 작동할 수 있도록 하는 공통 표준을 수립하는 것을 목표로 합니다.\n- 연결에 중립적: Matter는 기술적인 네트워크 기술과 독립적으로 설계되었습니다. Wi-Fi, 이더넷, Thread 및 심지어 Zigbee 및 Bluetooth Low Energy (BLE)와 같은 저전력 무선 프로토콜 등 다양한 연결 프로토콜에서 작동할 수 있습니다.\n- 쉬운 설정 및 구성: Matter는 스마트 홈 기기의 설정 및 구성 과정을 간소화합니다. 다양한 스마트 홈 플랫폼 및 앱이 장치를 쉽게 찾아내고 추가하고 제어할 수 있는 통합 설정 경험을 소개합니다.\n- 개발자 친화적: Matter 프로토콜은 표준화된 API 및 도구를 제공하여 스마트 홈 기기의 개발 및 통합을 간소화하는 개발자 친화적 환경을 제공합니다.\n\n프로젝트-chip/connectedhomeip: Matter (이전 Project CHIP)는 더 많은 객체 간 더 많은 연결을 만들어 제조업체들에게 개발을 단순화하고 소비자들에게 호환성을 높이도록 안내되는 Connectivity Standards Alliance의 지도 아래 놓인 것입니다. (github.com)\n\n<div class=\"content-ad\"></div>\n\n# 쓰레드\n\n쓰레드는 IoT와 스마트 홈 애플리케이션을 위해 특별히 설계된 무선 네트워킹 프로토콜입니다. IPv6을 기반으로하며 저전력 무선 네트워크에서 작동합니다. 서로 다른 쓰레드 인증을 받은 장치들 간의 상호 운용성을 보장하여 쓰레드 네트워크 내에서 원활한 통신과 통합을 가능하게 합니다.\n\n다음은 쓰레드 프로토콜의 주요 기능과 특성입니다:\n\n- 망공예: 쓰레드는 망공예 네트워킹 토폴로지를 활용하여, 장치들이 라우터 및 중계기로 작동하여 네트워크 범위를 확장할 수 있습니다. 네트워크의 각 장치는 이웃하는 장치와 직접 통신하거나 중간 장치를 이용하여 메시지를 중계함으로써, 스스로 치유 기능을 가진 견고한 네트워크 인프라를 생성합니다.\n- IP 기반 프로토콜: 쓰레드는 대규모 주소 공간을 제공하는 IPv6에 기초하여, 인터넷을 통한 장치 간의 직접 통신을 가능하게 합니다.\n- 저전력 소비: 쓰레드는 에너지 효율적으로 설계되어, 장치들이 장기간 배터리 전원으로 작동할 수 있도록 합니다. 저전력 주기 운영, 수면 모드 및 효율적인 라우팅 프로토콜과 같은 메커니즘을 통해 전력 소비를 최소화합니다.\n- 쉬운 설정 및 인가: 쓰레드는 네트워크 내에서 장치를 설정하고 인가하는 프로세스를 간단화합니다. 사용자 경험을 향상시키기 위해, 장치의 쉬운 발견, 온보딩 및 구성을 제공하여 배포의 복잡성을 줄입니다.\n\n<div class=\"content-ad\"></div>\n\nopenthread/openthread: 구글에서 공개한 OpenThread은 Thread 네트워킹 프로토콜의 오픈 소스 구현입니다 (github.com)\n\n# 요약\n\n프로토콜의 선택은 확장성, 전력 소비, 상호 운용성 및 응용프로그램 도메인과 같은 구체적 요구 사항에 따라 다릅니다. IoT 생태계 내에서 다양한 요구 사항을 충족하기 위해 여러 프로토콜을 결합한 구현체를 찾는 것이 일반적입니다.\n\nHTTP/2 및 WebSocket은 주로 웹 기반 응용프로그램에 사용되며, HTTP/2는 효율적이고 다중화된 통신을 제공하며, WebSocket은 클라이언트와 서버 간 실시간 양방향 통신을 가능하게 합니다.\n\n<div class=\"content-ad\"></div>\n\nMQTT, Matter, Thread, 그리고 Zigbee는 IoT 애플리케이션을 위해 특별히 설계된 프로토콜로, 메시징, 상호 운용성, 메시 네트워킹, 그리고 저전력 기능에 중점을 둡니다.\n\n- MQTT는 IoT 장치 및 시스템 간 확장 가능하고 실시간 통신에 적합한 일반적인 목적의 메시징 프로토콜입니다.\n- Matter는 스마트 홈 장치를 위한 상호 운용 가능한 표준을 만드는 데 중점을 둠으로써 다른 브랜드 간에 간편한 설정 및 원활한 통신을 가능하게 합니다.\n- Thread는 IoT 및 스마트 홈 애플리케이션을 위해 설계된 메시 네트워킹 프로토콜으로 신뢰성, 보안, 그리고 저전력 소비를 강조합니다.\n- Zigbee는 저전력, 저 데이터 전송 속도 애플리케이션에 최적화된 무선 프로토콜로, 홈 오토메이션 및 산업 제어에서 상호 운용성을 위한 메시 네트워킹 및 표준화된 프로필을 제공합니다.","ogImage":{"url":"/assets/img/2024-06-19-IoTProtocolsHTTP2WebSocketMQTTZigbeeMatterandThread_0.png"},"coverImage":"/assets/img/2024-06-19-IoTProtocolsHTTP2WebSocketMQTTZigbeeMatterandThread_0.png","tag":["Tech"],"readingTime":6},{"title":"홈 어시스턴트에서 AppDaemon을 사용하여 투야Tuya 기기 문제 해결하기","description":"","date":"2024-06-19 05:41","slug":"2024-06-19-FixingTuyaDeviceProblemsinHomeAssistantwithAppDaemon","content":"\n\n![2024-06-19-FixingTuyaDeviceProblemsinHomeAssistantwithAppDaemon_0.png](/assets/img/2024-06-19-FixingTuyaDeviceProblemsinHomeAssistantwithAppDaemon_0.png)\n안녕하세요! 스마트 홈 열정가들에게 이상적인 솔루션으로 떠오르는 홈 어시스턴트는 다양한 생태계의 장치를 연결하는 자유를 찾는 분들에게 완벽한 선택지입니다. 상품 특정 허브와 소프트웨어의 제한에 얽매이지 않고 장치 간 원활한 통신을 가능케 하며 종종 비교할 수 없는 수준의 맞춤 설정과 제어를 제공합니다. 하지만 잘 알려진 안드로이드 vs. iOS 논쟁과 같이, 이 자유는 별도의 어려움을 동반합니다. 주요 단점 중 하나는 홈 어시스턴트가 지원하는 장치에 엄격한 품질 통제가 없다는 점입니다. 때로는 제대로 설계되지 않은 장치 통합이 시스템에 슬쩍 들어가 사용자들에게 많은 당혹감을 야기할 수 있습니다.\n\n본 문서에서는 홈 어시스턴트의 Tuya 통합에서 마주한 특정 문제와 AppDaemon을 사용하여 해결한 경험을 공유하겠습니다.\n\n# 문제: 결함이 있는 Tuya 도어벨\n\n<div class=\"content-ad\"></div>\n\n알리익스프레스에서 싸게 구입한 Wi-Fi 비디오 도어벨이 있어요. 네, 알아요, 조금은 도박 같은 느낌이긴 하죠. 하지만 리뷰가 나쁘지 않았고, 더 인기 있는 대안들처럼 월 구독비를 내고 싶지 않았어요.\n\n도어벨 성능이 실망스러웠어요. 비디오 스트리밍이 느리고, 문을 누르면 홈 어시스턴트에 알림이나 센서가 없었어요. 도어벨이 배터리로 작동하다보니, 배터리가 완전히 소진되기 전에 충전할 방법이 필요했어요. 아쉽게도 홈 어시스턴트의 투야(Tuya) 통합은 배터리 수준을 부정확하게 표시했어요. 백분율이 아니라 100%에 대해 10.0, 65%에 대해 6.5와 같은 값으로 표시되었죠.\n\n홈 어시스턴트 설정에 저의 저전력 경고를 관리하는 자동화가 있어요. 저는 이전에 홈 어시스턴트 템플릿에 관한 글에서 자세히 설명했어요. 이 도어벨 배터리를 위해 별도의 자동화를 만들 수도 있었지만, 9.0이나 6.5와 같은 이상한 배터리 수준을 보는 건 내성적인 제 자신에게 짜증났어요. 그래서 이 문제를 해결하기 위해 다른 옵션을 탐색하기로 결정했어요. \n\n# 간단한 해결책 시도: 템플릿 센서 사용\n\n<div class=\"content-ad\"></div>\n\n배터리 표시 문제를 해결하는 한 가지 간단한 방법은 홈 어시스턴트에 중복 템플릿 센서를 만드는 것이었습니다. 이 센서는 잘못된 배터리 값들을 가져와 값을 정수로 변환한 다음 10을 곱하여 올바른 백분율을 표시했습니다. 이를 수행하는 코드 일부를 제공해드리겠습니다:\n\n```js\n템플릿:\n  센서:\n    - 이름: '도어벨 배터리'\n      단위: '%'\n      기기_클래스: 배터리\n      상태_클래스: \"측정\"\n      상태: >\n        { 배터리_상태 = 상태('센서.smart_video_doorbell_battery') }\n        { 만약 배터리_상태 }\n          { (배터리_상태 | int(default=0)) * 10 }\n        { 그렇지 않다면 }\n          0\n        { 끝만약 }       \n      아이콘: >\n        { 배터리_상태 = 상태('센서.smart_video_doorbell_battery') }\n        { 만약 배터리_상태 }\n          { 새_상태 = (배터리_상태 | int(default=0)) * 10 }\n          { 만약 새_상태 > 75 }\n            mdi:battery-high\n          { 그렇지 않고 새_상태 > 50 }\n            mdi:battery-medium\n          { 그렇지 않고 새_상태 > 25 }\n            mdi:battery-low\n          { 그 외에 }\n            mdi:battery-outline\n          { 끝만약 }                                            \n        { 그렇지 않다면 }\n          mdi:battery-outline\n        { 끝만약 }   \n```\n\n이 방법으로 문제를 해결할 수는 있었지만, 원래 센서의 잘못된 값들을 실제로 수정하지는 못했습니다.\n\n# 더 나은 해결책: AppDaemon을 사용하여 센서 수정하기\n\n<div class=\"content-ad\"></div>\n\nAppDaemon은 이러한 문제를 처리하는 더 유연하고 동적인 방법을 제공합니다. AppDaemon 문서에 따르면, AppDaemon 앱에서 Home Assistant 엔티티의 값을 설정할 수 있습니다. 이 기능을 사용하여 실시간으로 센서 값을 수정하는 앱을 개발했습니다.\n\n다음은 코드입니다:\n\n```js\nimport appdaemon.plugins.hass.hassapi as hass\n\nclass SensorMultiplier(hass.Hass):\n\n    def initialize(self):\n        self.battery_entity = \"sensor.smart_video_doorbell_battery\"\n        self.listen_state(self.sensor_changed, self.battery_entity)\n\n    def sensor_changed(self, entity, attribute, old, new, kwargs):\n        try:\n            battery_value = float(new)\n            if battery_value <= 10:\n                new_value = battery_value * 10\n\n                if new_value > 75:\n                    icon = \"mdi:battery-high\"\n                elif new_value > 50:\n                    icon = \"mdi:battery-medium\"\n                elif new_value > 25:\n                    icon = \"mdi:battery-low\"\n                else:\n                    icon = \"mdi:battery-outline\"\n\n                # Write back the new value to another sensor\n                self.set_state(entity, state=new_value,\n                    attributes={\n                        \"icon\": icon,\n                        \"device_class\": \"battery\"\n                    }\n                )\n                self.set_state(entity, state=new_value)\n        except ValueError:\n            self.log(f\"Invalid sensor value: {new}\")\n```\n\n```js\nsensor_multiplier:\n  module: sensor_multiplier\n  class: SensorMultiplier\n```\n\n<div class=\"content-ad\"></div>\n\n이 앱은 초인종 배터리 센서의 변경 사항을 감지합니다. 변경 사항이 감지되면 배터리 값을 10배로 곱하고 이 변경된 값을 사용하여 센서를 업데이트합니다. 또한 새로운 배터리 레벨에 따라 아이콘을 변경하여 배터리 상태를 빠르게 확인할 수 있습니다.\n\n이 수정으로 배터리 센서가 이제 올바른 값을 표시합니다. Home Assistant에서 기기와 관련된 비슷한 문제를 겪고 있다면 AppDaemon을 시도해 보는 것을 권장합니다.\n\nAppDaemon에 익숙하지 않다면 다른 문서에서 자세히 다룬 내용을 확인할 수 있습니다.\n\n스마트한 가정을 만들어 주세요!","ogImage":{"url":"/assets/img/2024-06-19-FixingTuyaDeviceProblemsinHomeAssistantwithAppDaemon_0.png"},"coverImage":"/assets/img/2024-06-19-FixingTuyaDeviceProblemsinHomeAssistantwithAppDaemon_0.png","tag":["Tech"],"readingTime":5}],"page":"88","totalPageCount":113,"totalPageGroupCount":6,"lastPageGroup":20,"currentPageGroup":4},"__N_SSG":true}