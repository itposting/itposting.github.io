{"pageProps":{"posts":[{"title":"윈도우 10 및 11 설치 방법","description":"","date":"2024-06-23 15:48","slug":"2024-06-23-HowtoInstallWindows10and11","content":"\n\n![이미지](/assets/img/2024-06-23-HowtoInstallWindows10and11_0.png)\n\n윈도우 10 및 윈도우 11을 설치하는 것은 어렵게 느껴질 수 있지만, 올바른 단계를 따르면 간단한 프로세스가 됩니다. 초보자든 숙련된 사용자든이 안내서를 통해 설치 프로세스를 따라가고, 잠재적인 문제를 강조하고 해결책을 제공할 것입니다. 더 도움이 필요하면 언제든지 Hire IT Expert에 연락하십시오. 우리 팀은 모든 Windows 설치에 대해 도와드릴 준비가 되어 있습니다.\n\n# 목차\n\n- 소개\n- 시스템 요구 사항\n- 준비\n- 부팅 가능한 USB 드라이브 만들기\n- 윈도우 10 설치\n- 윈도우 11 설치\n- 일반적인 문제와 해결책\n- 결론\n- 자주 묻는 질문 (FAQ)\n\n<div class=\"content-ad\"></div>\n\n# 소개\n\nWindows 10 및 11을 설치하는 방법에 대한 포괄적인 안내서에 오신 것을 환영합니다. 이 안내서는 준비부터 설치 중 겪는 일반적인 문제 해결에 이르기까지 모든 것을 다룹니다. 설치 과정 중 문제가 발생하면 Hire IT Expert가 도와드리겠습니다.\n\n# 시스템 요구 사항\n\nWindows 설치 과정을 시작하기 전에 PC가 Windows 10 및 Windows 11의 시스템 요구 사항을 충족하는지 확인하세요.\n\n<div class=\"content-ad\"></div>\n\n# Windows 10 요구 사항\n\n- 프로세서: 1GHz 이상\n- RAM: 32비트용 1GB 또는 64비트용 2GB\n- 하드 디스크 공간: 32비트용 16GB, 64비트용 20GB\n- 그래픽 카드: DirectX 9 이상 및 WDDM 1.0 드라이버\n- 디스플레이: 800x600\n\n# Windows 11 요구 사항\n\n- 프로세서: 호환되는 64비트 프로세서 위에서 2개 이상의 코어가 있는 1GHz 이상\n- RAM: 4GB\n- 저장 공간: 64GB 이상\n- TPM: Trusted Platform Module (TPM) 버전 2.0\n- 그래픽 카드: DirectX 12 호환 그래픽 / WDDM 2.x\n- 디스플레이: HD 해상도(720p)와 9인치 이상\n\n<div class=\"content-ad\"></div>\n\n# 준비 사항\n\n- 데이터 백업: Windows 설치를 시작하기 전에 중요한 데이터를 외부 드라이브나 클라우드 저장소에 백업해야 합니다.\n- 제품 키: Windows 제품 키를 준비해야 합니다. 이 키는 설치 후 활성화에 필요합니다.\n- 인터넷 연결: 안정적인 인터넷 연결은 설치 중이나 후에 업데이트 및 드라이버 다운로드에 필요합니다.\n\n# 부팅 가능한 USB 드라이브 만들기\n\n- 미디어 생성 도구 다운로드: Microsoft 웹사이트를 방문하여 Windows 10 또는 Windows 11용 미디어 생성 도구를 다운로드합니다.\n- 도구 실행: 다운로드한 파일을 열고 \"다른 PC용 설치 미디어 생성\"을 선택합니다.\n- 언어, 버전, 아키텍처 선택: 선호하는 옵션을 선택하고 \"다음\"을 클릭합니다.\n- USB 플래시 드라이브 선택: USB 드라이브(최소 8GB)를 삽입하고 도구에서 선택합니다.\n- 부팅 가능한 드라이브 만들기: \"다음\"을 클릭하고 도구가 Windows ISO를 다운로드하고 부팅 가능한 드라이브를 생성할 때까지 기다립니다.\n\n<div class=\"content-ad\"></div>\n\n# Windows 10 설치하기\n\n- 부팅 가능한 USB 드라이브 삽입: Windows 10을 설치하려는 PC에 USB 드라이브를 삽입합니다.\n- PC 재시작: PC를 재부팅하고 BIOS/UEFI에 들어가기 위한 적절한 키(일반적으로 F2, F12, DEL 또는 ESC)를 누릅니다.\n- USB로 부팅: USB 드라이브를 기본 부팅 장치로 설정하고 변경사항을 저장합니다.\n- 설치 시작: Windows 설치 과정이 시작됩니다. 언어, 시간 및 키보드 설정을 선택한 후 “다음”을 클릭합니다.\n- 지금 설치: “지금 설치”를 클릭하고 프로덕트 키를 입력합니다.\n- 사용자 정의 설치: 깨끗한 설치를 위해 “사용자 정의: Windows만 설치(고급)”를 선택합니다.\n- 드라이브 파티션: Windows 10을 설치할 파티션을 선택하고 “다음”을 클릭합니다. 불확실하다면 모든 파티션을 삭제하고 미할당된 공간을 선택합니다.\n- 화면 안내에 따라 진행하세요: 설치를 완료하기 위해 안내에 따라 진행합니다.\n\n# Windows 11 설치하기\n\n- 부팅 가능한 USB 드라이브 삽입: Windows 11을 설치하려는 PC에 USB 드라이브를 삽입합니다.\n- PC 재시작: PC를 재부팅하고 BIOS/UEFI에 들어가기 위한 적절한 키를 누릅니다.\n- USB로 부팅: USB 드라이브를 기본 부팅 장치로 설정하고 변경사항을 저장합니다.\n- 설치 시작: Windows 설치 과정이 시작됩니다. 언어, 시간 및 키보드 설정을 선택한 후 “다음”을 클릭합니다.\n- 지금 설치: “지금 설치”를 클릭하고 프로덕트 키를 입력합니다.\n- 사용자 정의 설치: 깨끗한 설치를 위해 “사용자 정의: Windows만 설치(고급)”를 선택합니다.\n- 드라이브 파티션: Windows 11을 설치할 파티션을 선택하고 “다음”을 클릭합니다. 불확실하다면 모든 파티션을 삭제하고 미할당된 공간을 선택합니다.\n- 화면 안내에 따라 진행하세요: 설치를 완료하기 위해 안내에 따라 진행합니다.\n\n<div class=\"content-ad\"></div>\n\n# 일반적인 문제와 해결책\n\n# 문제: USB에서 PC 부팅되지 않음\n\n해결책: USB 드라이브가 제대로 생성되었고 BIOS/UEFI에서 인식되는지 확인하세요. 부팅 순서를 확인하고 다른 USB 포트를 시도해 보세요.\n\n# 문제: 드라이버 누락\n\n<div class=\"content-ad\"></div>\n\n수정: 제조업체 웹사이트에서 필요한 드라이버를 다운로드하고 설치하세요. 안정적인 인터넷 연결을 확인해주세요.\n\n# 문제: 활성화 문제\n\n수정: 올바른 제품 키를 사용 중인지 확인하세요. 문제가 지속되면 Microsoft 지원팀에 문의하세요.\n\n# 문제: 특정 퍼센트에서 설치가 멈춤\n\n<div class=\"content-ad\"></div>\n\n고치세요: 설치 프로세스를 다시 시작하세요. 하드웨어 연결 상태를 확인하고 PC가 최소 요구 사항을 충족하는지 확인하세요.\n\n# 결론\n\nWindows 10 및 Windows 11 설치는 주의깊게 단계를 따른다면 원활할 수 있습니다. 문제가 발생하거나 추가 지원이 필요하면, Hire IT Expert에 문의하세요. 저희 전문가들은 Windows 설치 중에 마주칠 수 있는 어떤 문제에도 도움을 줄 준비가 되어 있습니다.\n\n# 자주 묻는 질문\n\n<div class=\"content-ad\"></div>\n\n# 1. Windows 10에서 Windows 11로 직접 업그레이드할 수 있나요?\n\n네, Windows 11 시스템 요구 사항을 충족하는 경우 Windows 업데이트를 통해 직접 업그레이드할 수 있습니다.\n\n# 2. 설치 과정은 얼마나 걸릴까요?\n\n일반적으로 설치 과정은 20~30분이 소요됩니다. 하지만 하드웨어에 따라 다를 수도 있습니다.\n\n<div class=\"content-ad\"></div>\n\n# 3. 설치할 때 인터넷 연결이 필요한가요?\n\n윈도우를 인터넷 없이도 설치할 수는 있지만, 인터넷 연결이 있는 경우 설치 중에 업데이트와 드라이버를 다운로드할 수 있습니다.\n\n# 4. 설치 과정 중에 파일을 유지할 수 있나요?\n\n네, 업그레이드 과정 중에 파일을 유지할 수 있습니다. 그러나 깨끗한 설치를 선택하면 모든 데이터가 삭제되므로 중요한 파일은 반드시 백업해주세요.\n\n<div class=\"content-ad\"></div>\n\n# 5. 제품 키를 분실한 경우 어떻게 해야 하나요?\n\n마이크로소프트 계정에서 제품 키를 검색하거나 현재 설치된 제품에서 추출할 수 있는 소프트웨어를 사용할 수 있습니다.\n\n추가 자료를 원하시면 Windows 설치 및 문제 해결 팁에 관한 다른 블로그 글을 확인해보세요.\n\n- 윈도우 10 설치 방법: 쉬운 단계로 읽기\n- 단계별 가이드: 윈도우 11 설치하는 간단한 단계\n- 랩탑이 느려진 이유는 무엇인가요? 팁 및 해결책 2024\n- 느린 PC 속도 향상: 더 나은 성능을 위한 팁.\n\n<div class=\"content-ad\"></div>\n\n개인 맞춤형 지원이 필요하다면, Hire IT Expert에 문의하세요.\n\n- 전화: +44 1245 79 0577\n- 이메일: info@hireitexpert.co.uk\n- 웹사이트: [Hire IT Expert 홈페이지](https://hireitexpert.co.uk)\n\n이 안내를 따라하면 PC에 Windows 10 또는 Windows 11을 성공적으로 설치할 수 있을 거에요. 더 자세한 가이드와 전문가 지원을 받으려면 당사 웹사이트를 방문하거나 Hire IT Expert에 문의하세요. 설치하세요~!","ogImage":{"url":"/assets/img/2024-06-23-HowtoInstallWindows10and11_0.png"},"coverImage":"/assets/img/2024-06-23-HowtoInstallWindows10and11_0.png","tag":["Tech"],"readingTime":5},{"title":"MSYS2를 사용하여 Windows에서 GCC와 GDB 설치하는 방법  튜토리얼","description":"","date":"2024-06-23 15:47","slug":"2024-06-23-HowtoInstallGCCandGDBonWindowsUsingMSYS2Tutorial","content":"\n\n<img src=\"/assets/img/2024-06-23-HowtoInstallGCCandGDBonWindowsUsingMSYS2Tutorial_0.png\" />\n\n개발자들이 Windows 환경으로 전환하거나 Windows 환경에서 작업하는 경우, C 및 C++ 프로그래밍을 위한 견고한 도구 체인 설정이 매우 중요합니다. 본 자습서에서는 MSYS2를 사용하여 Windows에 GCC (GNU Compiler Collection) 및 GDB (GNU Debugger)를 설치하는 과정을 안내하겠습니다. MSYS2는 소프트웨어 배포 및 빌딩 플랫폼입니다.\n\n# 단계 1: MSYS2 다운로드 및 설치\n\n먼저 공식 웹사이트에서 MSYS2 설치 프로그램을 다운로드하세요. 설치 지침을 따라 시스템에 적합한 아키텍처(32비트 또는 64비트)를 선택하는 것이 중요합니다.\n\n<div class=\"content-ad\"></div>\n\n다운로드 링크: MSYS2\n\n![이미지](/assets/img/2024-06-23-HowtoInstallGCCandGDBonWindowsUsingMSYS2Tutorial_1.png)\n\n## 단계 2: 시스템 업데이트 및 기본 패키지 설치\n\nMSYS2를 설치한 후, MSYS2 MinGW 터미널을 열고 아래 명령어를 차례대로 사용하여 패키지 데이터베이스를 업데이트하고 기본 패키지를 설치합니다:\n\n<div class=\"content-ad\"></div>\n\n```js\npacman -Syu\npacman -Su\n```\n\n팁: Msys2 셸 창에서는 Ctrl+V 또는 Ctrl+Shift+V가 작동하지 않을 수 있습니다. 붙여넣기하려면 오른쪽 클릭을 사용하세요. 또한 터미널에서 프롬프트가 나타날 때는 그냥 Enter 키를 누르세요. 이 경우 기본적으로 Y 또는 Yes가 됩니다. Y를 입력한 후 Enter 키를 누르는 방법도 있습니다. 둘 다 동작합니다.\n\n![이미지](/assets/img/2024-06-23-HowtoInstallGCCandGDBonWindowsUsingMSYS2Tutorial_2.png)\n\n# 단계 3: C 및 C++용 GCC 설치하기\n\n\n\n\n<div class=\"content-ad\"></div>\n\n다시 한 번 MSYS2 셸을 열어주세요. 32비트와 64비트 아키텍처용 GCC를 설치하려면 다음 명령어를 사용하세요:\n\n64비트용:\n\n```js\npacman -S mingw-w64-x86_64-gcc\n```\n\n32비트용:\n\n<div class=\"content-ad\"></div>\n\n```js\r\npacman -S mingw-w64-i686-gcc\r\n```\r\n\r\n# 단계 4: C 및 C++용 GDB 설치하기 (선택 사항)\r\n\r\n디버깅을 위해 GDB를 설치하려면 다음 명령어를 사용하세요:\r\n\r\n64-bit용:\n\n<div class=\"content-ad\"></div>\n\n```js\npacman -S mingw-w64-x86_64-gdb\n```\n\n32비트용:\n\n```js\npacman -S mingw-w64-i686-gdb\n```\n\n# 단계 5: MSYS2에 설치 확인하기\n\n<div class=\"content-ad\"></div>\n\nGCC 및 GDB를 설치한 후 MSYS2에서 성공적으로 설치되었는지 확인하려면 버전을 확인하세요:\n\n```js\ngcc --version\ng++ --version\ngdb --version\n```\n\n# 단계 6: 경로 환경 변수 설정\n\n명령 프롬프트에서 설치된 도구를 전역적으로 접근할 수 있도록 하려면 시스템의 PATH 환경 변수에 MSYS2 이진 디렉토리를 추가하십시오. 그 작업을 수행하려면-\n\n<div class=\"content-ad\"></div>\n\n## 6.1. MSYS2 MINGW64 바이너리 위치 찾기\n\nmingw64 바이너리 폴더(bin)의 경로를 찾아 복사하세요. 일반적으로 MSYS2를 설치한 위치에 있습니다. 대개 C 드라이브에 위치해 있습니다.\n\n샘플 경로:\n\n```js\nC:\\msys64\\mingw64\\bin\n```\n\n<div class=\"content-ad\"></div>\n\n## 6.2. 환경 변수 편집 패널 열기\n\n시작 메뉴를 열고 '당신의 계정을 위한 환경 변수 편집'을 검색하세요. 열어주세요.\n\n![이미지](/assets/img/2024-06-23-HowtoInstallGCCandGDBonWindowsUsingMSYS2Tutorial_3.png)\n\n## 6.3. 환경 변수 버튼 클릭\n\n<div class=\"content-ad\"></div>\n\n환경 변수를 편집하려면 환경 변수 버튼을 클릭하세요.\n\n![이미지](/assets/img/2024-06-23-HowtoInstallGCCandGDBonWindowsUsingMSYS2Tutorial_4.png)\n\n## 6.4. PATH 변수 편집\n\n시스템 변수 탭에서 Path를 선택한 다음 편집 버튼을 클릭하세요.\n\n<div class=\"content-ad\"></div>\n\n![그림](/assets/img/2024-06-23-HowtoInstallGCCandGDBonWindowsUsingMSYS2Tutorial_5.png)\n\n## 6.5. 복사한 경로 추가하기\n\n새로 만들기를 클릭합니다. 복사한 경로 (C:\\msys64\\mingw64\\bin)를 붙여넣습니다.\n\n![그림](/assets/img/2024-06-23-HowtoInstallGCCandGDBonWindowsUsingMSYS2Tutorial_6.png)\n\n<div class=\"content-ad\"></div>\n\n이제 열린 창의 OK 버튼을 클릭해주세요.\n\n## 6.6. Windows에서 설치 확인\n\nPowerShell 또는 Windows 터미널 창을 열고 다음 명령을 실행해주세요:\n\n```js\ngcc --version\ng++ --version\ngdb --version\n```\n\n<div class=\"content-ad\"></div>\n\n모든 단계를 제대로 따르셨다면, 버전 정보를 설명하는 출력물이 나타날 것입니다.\n\n![이미지](/assets/img/2024-06-23-HowtoInstallGCCandGDBonWindowsUsingMSYS2Tutorial_7.png)\n\n모든 준비가 완료되었습니다! 이제 윈도우 기기에서 GCC와 GDB를 사용할 준비가 되었습니다.","ogImage":{"url":"/assets/img/2024-06-23-HowtoInstallGCCandGDBonWindowsUsingMSYS2Tutorial_0.png"},"coverImage":"/assets/img/2024-06-23-HowtoInstallGCCandGDBonWindowsUsingMSYS2Tutorial_0.png","tag":["Tech"],"readingTime":4},{"title":"GPTK를 사용해 macOS에 윈도우 게임 설치하는 방법","description":"","date":"2024-06-23 15:45","slug":"2024-06-23-InstallWindowsGamesonmacOSusingGPTK","content":"\n\n맥북을 사용하는 동안 주변 사람들이 AAA 타이틀을 즐기는 동안 Asphalt 9만 플레이할 수 있다는 것은 후회스러울 수 있어요.\n\n오랜 시간 동안 macOS를 지원하지 않는 게임들이 많았습니다. 맥북이 성능 부족 때문이 아니라 Mac 사용자들이 게이머 중 작은 비율을 차지하기 때문입니다. 그 결과로 게임 개발사들은 macOS 게임 개발을 위한 자원을 할당하는 것이 경제적으로 어려웠습니다.\n\n최근 Apple은 macOS에서 게임 경험을 향상시키기 위해 중요한 조치를 취했습니다. 최신 macOS 키노트에서 Apple은 Game Porting Toolkit을 발표했는데, 이 도구를 이용하면 새로운 Sonoma 업데이트를 적용한 Mac에서 DirectX 12가 필요한 Windows 게임을 실행할 수 있습니다. 이 발전으로 인해 게임 개발자들은 macOS를 위해 게임을 이식하고 최적화하는 과정을 간단하게 할 수 있습니다.\n\n이전에 Apple Silicon을 사용하는 Mac에서 Windows 게임을 플레이할 수 있는 두 가지 옵션이 있었습니다. 하나는 Parallels를 사용하여 Windows 가상 머신 (VM)을 만들고 가상 플랫폼에 게임을 설치하는 것이었습니다. 하지만 이 방법은 대개 하드웨어 자원을 상당히 많이 사용하기 때문에 게임 플레이가 최적화되지 않는 경우가 흔합니다. 두 번째 옵션은 CodeWeavers의 CrossOver를 사용하여 Windows 게임을 macOS에 직접 설치하는 것이었습니다. CrossOver는 Windows 명령을 Mac 명령으로 번역하는 역할을 하면서 사용자들이 Windows 소프트웨어를 마치 Mac용으로 디자인된 것처럼 실행할 수 있게 해줍니다. CrossOver는 생산성 도구, 유틸리티 프로그램, 게임 등 다양한 종류의 소프트웨어를 하나의 애플리케이션 내에서 작동시킬 수 있는 다재다능한 기능을 제공합니다. 하지만 무료로 사용할 수 없고 매년 구독료가 부과됩니다. 여러분과 함께 Apple이 소개한 Game Porting Toolkit을 사용하여 macOS에 Windows 게임을 설치하는 프로세스에 대해 자세히 알아보겠습니다.\n\n<div class=\"content-ad\"></div>\n\n\n![Game Porting Toolkit](/assets/img/2024-06-23-InstallWindowsGamesonmacOSusingGPTK_0.png)\n\nGame Porting Toolkit은 2023년 6월 6일에 출시된 Apple의 새로운 번역 계층입니다. Game Porting Toolkit(GPTK)은 Wine과 Apple의 자체 D3DMetal을 결합하여 DirectX 11 및 12를 지원합니다. CrossOver나 Parallels에 비해 Apple Silicon Mac에 Windows 게임을 설치하는 덜 사용자 친화적인 방법이지만, DirectX 12 게임을 플레이할 수 있는 기능을 해제합니다. GPTK를 사용하면 더 많은 게임이 작동하지만, 치트 방지 또는 공격적인 DRM을 사용하는 게임과 AVX/AVX 2를 요구하는 게임(예: The Last of Us Part I)은 일반적으로 작동하지 않습니다.\n\n# Toolkit 설치\n\nGame Porting Toolkit을 설치하려면 Mac이 새로운 macOS Sonoma 버전이어야 합니다. 이전 macOS Ventura에서 Game Porting Toolkit을 사용하면 오류가 발생할 수 있습니다.\n\n\n<div class=\"content-ad\"></div>\n\n- Apple 개발자 다운로드 사이트를 방문해보세요. 이 파일들은 이제 로그인한 Apple 계정으로 무료로 다운로드하여 사용할 수 있습니다.\n- Xcode 15용 Command Line Tools를 검색해서 dmg 파일을 다운로드하고 포함된 pkg 파일을 실행해보세요.\n- 이전 버전의 Xcode를 설치했다면, 다음 명령어를 따라 제거하세요\n\n```js\nxcode-select -p\n\nsudo rm -rf /Library/Developer/CommandLineTools\n```\n\n- Game Porting Toolkit를 검색하고 다운로드하세요. dmg 파일을 열거나 마운트하세요 (일부 명령어는 마운트되어 있어야 합니다)\n\n# Homebrew\n\n<div class=\"content-ad\"></div>\n\n- 터미널을 열어주세요 (macOS에서는 Spotlight에서 검색).\n\n## Rosetta 설치하기\n\n```js\nsoftwareupdate --install-rosetta\n```\n\n다음 단계를 Rosetta 환경에서 진행하려면 x86_64 쉘로 들어가세요. 이후의 모든 명령어는 이 쉘 안에서 실행되어야 합니다.\n\n<div class=\"content-ad\"></div>\n\n```js\narch -x86_64 zsh\n```\n\n이미 보유하고 있지 않다면 x86_64 버전의 Homebrew를 설치해보세요.\n\n```js\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\n경로를 설정하세요.\n\n<div class=\"content-ad\"></div>\n\n```js\n(echo; echo 'eval \"$(/usr/local/bin/brew shellenv)\"') >> ~/.zprofile\neval \"$(/usr/local/bin/brew shellenv)\"\n```\n\nbrew 명령어가 path에 있도록 확인해주세요.\n\n```js\nwhich brew\n```\n\n만약 이 명령어가 /usr/local/bin/brew를 출력하지 않는다면, 다음 명령어를 사용해야 합니다:\n\n<div class=\"content-ad\"></div>\n\n```bash\nexport PATH=/usr/local/bin:${PATH}\n```\n\n# 빌드\n\n이 명령어를 실행해서 Apple tap을 다운로드하세요\n\n```bash\nbrew tap apple/apple http://github.com/apple/homebrew-apple\n```\n\n<div class=\"content-ad\"></div>\n\n게임 이식 툴킷 공식 버전을 설치해보세요. 이 공식 버전은 여러 대형 소프트웨어 프로젝트를 다운로드하고 컴파일합니다. 이 작업은 컴퓨터의 속도에 따라 시간이 달라집니다. Mac의 속도에 따라 1시간 이상 소요될 수 있습니다. M1 기기의 경우 스펙에 따라 90분 정도가 걸릴 수 있습니다.\n\n```js\nbrew -v install apple/apple/game-porting-toolkit\n```\n\n만약 설치 중에 다음과 같은 오류가 발생한다면:\n\n```js\nbrew update ; brew -v install apple/apple/game-porting-toolkit\n```\n\n<div class=\"content-ad\"></div>\n\n# 툴킷이 이미 최신 버전인지 확인해주세요\n\n다음 단계를 Rosetta 환경에서 계속하기 위해 x86_64 셸에 있는지 확인하세요. 이후의 명령은 모두 이 셸 내에서 실행되어야 합니다. 올바른 셸에 있는지 확신이 없거나 그냥 업데이트를 수행하려면 다시 실행하세요.\n\n```js\narch -x86_64 zsh\n```\n\nHomebrew를 실행하여 가능한 업데이트를 수집하고 Apple의 GPTK 공식을 업그레이드하세요\n\n<div class=\"content-ad\"></div>\n\n```js\nbrew update && brew upgrade apple/apple/game-porting-toolkit\n```\n\n이 단계는 스펙에 따라 M1 기기에서 약 48분 정도 소요될 수 있습니다.\n\n# 툴킷 준비하기\n\n이전에 다운로드한 게임 포팅 툴킷 dmg 파일이 /Volumes/Game Porting Toolkit-1.1에 마운트되어 있는지 확인해주세요. 이 스크립트를 사용하여 게임 포팅 툴킷 라이브러리 디렉토리를 Wine의 라이브러리 디렉토리로 복사하세요.\n\n<div class=\"content-ad\"></div>\n\n```js\n/Volumes/Game\\ Porting\\ Toolkit-1.1/redist/lib/를 `brew --prefix game-porting-toolkit`/lib/로 복사하세요.\n\n위의 명령어에서 Toolkit의 버전을 다운로드한 버전으로 수정해주세요. 저는 Toolkit-1.1을 사용했습니다.\n\n이 게임 포팅 툴킷의 이전 버전을 설치하는 경우에는, D3DMetal 라이브러리를 복사하기위한 올바른 명령어를 알아보기 위해 해당 디스크 이미지의 Read Me.rtf 파일을 참조하세요.\n\n다음 명령어를 사용하여 Game Porting Toolkit DMG의 3개 스크립트를 /usr/local/bin에 넣으세요.\n```\n\n<div class=\"content-ad\"></div>\n\n```sh\ncp /Volumes/Game\\ Porting\\ Toolkit*/gameportingtoolkit* /usr/local/bin\n```\n\n# 와인 프리픽스\n\n와인 프리픽스는 크로스오버의 병(Bottle)과 유사한 가상 C: 드라이브를 포함하고 있어요. 툴킷과 게임을 이 가상 C: 드라이브에 설치할 거예요. 다음 명령어를 실행하여 홈 디렉터리에 my-game-prefix라는 새로운 와인 프리픽스를 생성하세요. 이 명령어는 my-game-prefix라는 와인 프리픽스를 만들지만 다른 이름으로 변경할 수도 있어요.\n\n```sh\nWINEPREFIX=~/my-game-prefix $(brew --prefix game-porting-toolkit)/bin/wine64 winecfg\n```\n\n<div class=\"content-ad\"></div>\n\n- \"Wine configuration\" 창이 화면에 나타날 것입니다.\n- Windows 버전을 Windows 10으로 변경하세요.\n- Apply를 선택한 후 winecfg를 나가려면 OK를 선택하세요.\n\n# Epic Games 설치하기\n\nEpic Games에서 게임을 설치하려면 https://heroicgameslauncher.com/에서 다운로드할 수 있는 Heroic Games Launcher를 사용합니다.\n\n설치 후 Epic Games 계정에 로그인하거나 새로 만드세요.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-23-InstallWindowsGamesonmacOSusingGPTK_1.png\" />\n\n그냥 설치를 클릭하면 시작할 수 있어요!\n\n# Steam 설치\n\n윈도우 버전의 Steam을 다운로드하여 다운로드 폴더에 넣어주세요.\n\n<div class=\"content-ad\"></div>\n\n```js\ngameportingtoolkit ~/my-game-prefix ~/Downloads/SteamSetup.exe\n```\n\n## 스팀 실행\n\n```js\ngameportingtoolkit ~/my-game-prefix 'C:\\Program Files (x86)\\Steam\\steam.exe'\n```\n\n이번 개발은 macOS로의 게임 이식을 개발자들에게 더 쉽게 만들 것으로 예상되며, 앞으로 맥에서 AAA 게임을 출시하는 희망을 제기하고 있습니다. 윈도우 게임을 맥에서 설치하는 데 도움이 되기를 바랍니다. 감사합니다 :)","ogImage":{"url":"/assets/img/2024-06-23-InstallWindowsGamesonmacOSusingGPTK_0.png"},"coverImage":"/assets/img/2024-06-23-InstallWindowsGamesonmacOSusingGPTK_0.png","tag":["Tech"],"readingTime":6},{"title":"Jannal  Shopify로 윈도우, 커튼, 블라인드 스토어 만드는 방법","description":"","date":"2024-06-23 15:45","slug":"2024-06-23-JannalShopifyWindowsCurtainsBlindsStore","content":"\n\n🔍 Jannal — Shopify 창문, 커튼 및 블라인드 스토어를 확인해보세요! 📁 Shopify CMS 템플릿 라이브러리를 살펴보고 🆓 무료 다운로드를 받아보세요. 함께 제작을 시작해봐요! 🚀\n\nJannal은 멋진 인테리어 장식 및 인테리어 디자인 Shopify 테마입니다. 건물 및 집 인테리어 디자인 소매 및 서비스에 가장 적합합니다. 주방, 거실, 침실, 주거용 및 상업용 디자인, 가구, 조명, 현대적 가구, 창문 블라인드, 실내 블라인드, 외부 블라인드를 판매하는 상점입니다. 인테리어 장식 웹사이트, 창의적 인테리어, 인테리어 디자인, 인테리어 디자이너 웹사이트, 인테리어 가구, 집 장식을 만들어보세요.\n\n주요 특징\n\n- 반응형 디자인 - 데스크탑, 노트북, 태블릿 및 모바일에서 멋지게 표시됩니다. 지금 iPhone이나 iPad에서 시도해보세요. Slick Slider - 이 슬라이더는 컨텐츠를 아름답게 표시합니다. 슬라이더, 캐러셀, 히어로 씬, 상품 특징 슬라이더, 상품 할인 레이블\n- 상품 캐러셀: 상품을 캐러셀로 표시할 수 있는 옵션. 상품 비교: 이 기능을 사용하여 한 번에 여러 개의 상품을 비교할 수 있습니다. 컬렉션 페이지에서 상품 정렬: 가격, A에서 Z, 최신순 등으로 정렬할 수 있습니다.\n- 고객 계정: 고객이 등록, 로그인, 주소 변경 및 이전 주문을 볼 수 있습니다.\n- 상품 Owl Carousel\n- 5 종류의 메가 메뉴\n- Ajax 필터: 태그를 사용하여 색상 및 다른 매개변수로 상품을 필터링할 수 있습니다. Ajax Cart: 현재 페이지를 벗어나지 않고 상품을 구매할 수 있는 옵션. Ajax Wishlist: 위시리스트에 상품을 보관할 수 있는 옵션.\n- 커스텀 정보 위젯\n- 회사 정보에 대한 커스텀\n- 연락처 페이지\n- 드래그 앤 드롭 섹션: 홈페이지 레이아웃 순서를 드래그 앤 드롭 옵션을 사용하여 변경할 수 있습니다.\n- 매우 사용자 정의 가능: 테마 설정을 통해 색상, 글꼴, 배경 이미지를 변경할 수 있습니다. 코딩이 필요하지 않습니다.\n- 다국화: 테마에는 AUD, CAD, USD, GBP, JPY, EUR, NZD, INR, PHP 통화가 내장되어 있습니다.\n- SEO에 적합: 최신 Shopify SEO 기능을 활용하며 제품 데이터는 Google 풍부한 스니펫에 맞게 형식화되어 검색 엔진에 최적화됩니다.\n- 브랜드화된 체크아웃: 로고와 색상 스키마를 사용하여 고객에게 매끈한 결제를 제공합니다. 또한 체크아웃 화면에 사용자 정의 체크아웃 헤더를 추가할 수 있습니다!\n- 뉴스레터: Mailchimp 계정을 뉴스레터 양식에 쉽게 연결할 수 있습니다. 소셜 공유: Twitter, Facebook, Google+, Pinterest로 공유하세요.\n\n<div class=\"content-ad\"></div>\n\n![이미지](/assets/img/2024-06-23-JannalShopifyWindowsCurtainsBlindsStore_0.png)\n\nBuddhaThemes의 Envato Elements에서 제공\n\n고지: 본 글에는 제휴 링크가 포함되어 있습니다. 이 링크를 통해 구매하시면 별도 비용 없이 수수료를 받을 수 있습니다.","ogImage":{"url":"/assets/img/2024-06-23-JannalShopifyWindowsCurtainsBlindsStore_0.png"},"coverImage":"/assets/img/2024-06-23-JannalShopifyWindowsCurtainsBlindsStore_0.png","tag":["Tech"],"readingTime":2},{"title":"Docker로 Redis 클러스터 설정하는 방법","description":"","date":"2024-06-23 15:44","slug":"2024-06-23-RedisClusterusingDocker","content":"\n\n\n![이미지](/assets/img/2024-06-23-RedisClusterusingDocker_0.png)\n\n우리는 특히 윈도우에서 도커를 사용하여 Redis 클러스터를 만드는 방법에 대해 이야기할 것입니다.\n\n6개 노드(3개 마스터 + 3개 레플리카)로 Redis 클러스터를 생성할 것이며, Redis가 어떤 노드가 마스터인지 레플리카인지를 결정할 것입니다.\n\n자세한 내용에 대해 파고들기 전에 몇 가지 제약사항을 알아야 합니다;\n\n\n<div class=\"content-ad\"></div>\n\n- Redis Cluster 및 Docker\n\n2. Docker 호스트 네트워크 드라이버\n\nWindows에서 이러한 제한 사항을 고려할 때, 모든 노드 앞에 TCP 프록시를 설정하여 클러스터를 구성할 수 있습니다. 노드로의 모든 통신은 TCP 프록시를 통해 이루어질 것입니다. 이 예시에서는 HAProxy를 선택했습니다.\n\n이제 설정으로 넘어갈 수 있습니다. 3개의 파일이 준비되어 있습니다;\n\n<div class=\"content-ad\"></div>\n\n- docker-compose.yaml\n- redis.sh\n- haproxy.cfg\n\n이 파일들을 가지고 명령어를 사용하여 모든 클러스터, 프록시 및 UI를 실행할 수 있어요;\n\n```js\ndocker compose up\n```\n\n# docker-compose.yaml\n\n<div class=\"content-ad\"></div>\n\n```js\n서비스 : \n  redis-node-1 : \n    이미지 : redis:7.2.3\n    명령 : [\"/tmp/redis.sh\", \"10.11.12.13\", \"7001\"]\n    볼륨 : \n      - ./redis.sh:/tmp/redis.sh\n  redis-node-2 : \n    이미지 : redis:7.2.3\n    명령 : [\"/tmp/redis.sh\", \"10.11.12.13\", \"7002\"]\n    볼륨 : \n      - ./redis.sh:/tmp/redis.sh\n  redis-node-3 : \n    이미지 : redis:7.2.3\n    명령 : [\"/tmp/redis.sh\", \"10.11.12.13\", \"7003\"]\n    볼륨 : \n      - ./redis.sh:/tmp/redis.sh\n  redis-node-4 : \n    이미지 : redis:7.2.3\n    명령 : [\"/tmp/redis.sh\", \"10.11.12.13\", \"7004\"]\n    볼륨 : \n      - ./redis.sh:/tmp/redis.sh\n  redis-node-5 : \n    이미지 : redis:7.2.3\n    명령 : [\"/tmp/redis.sh\", \"10.11.12.13\", \"7005\"]\n    볼륨 : \n      - ./redis.sh:/tmp/redis.sh\n  redis-node-6 : \n    이미지 : redis:7.2.3\n    명령 : [\"/tmp/redis.sh\", \"10.11.12.13\", \"7006\"]\n    볼륨 : \n      - ./redis.sh:/tmp/redis.sh\n  redis-cluster-creator : \n    이미지 : redis:7.2.3\n    명령 : redis-cli -a 'SUPER_SECRET_PASSWORD' --cluster create 10.11.12.13:7001 10.11.12.13:7002 10.11.12.13:7003 10.11.12.13:7004 10.11.12.13:7005 10.11.12.13:7006 --cluster-replicas 1 --cluster-yes\n    depends_on : \n      - redis-node-1\n      - redis-node-2\n      - redis-node-3\n      - redis-node-4\n      - redis-node-5\n      - redis-node-6\n      - redis-proxy\n  redis-proxy : \n    이미지 : haproxytech/haproxy-alpine:2.4\n    볼륨 : \n      - ./haproxy:/usr/local/etc/haproxy:ro\n    포트 : \n      - 8404:8404\n      - 7001-7006:9001-9006\n      - 7101-7106:9101-9106\n    depends_on : \n      - redis-node-1\n      - redis-node-2\n      - redis-node-3\n      - redis-node-4\n      - redis-node-5\n      - redis-node-6\n  redis-insight : \n    container_name : redis-insight\n    이미지 : redislabs/redisinsight:1.14.0\n    포트 : \n      - 8001:8001\n    depends_on : \n      - redis-proxy\n```\n\n다음을 참고하세요:\n- 6개의 서버 노드\n- 1개의 클러스터 생성 노드. 이 컨테이너의 상태는 클러스터 생성 후에 \"중지\"되어야 합니다. (원한다면 어떤 컨테이너로 들어가서 클러스터 명령을 실행할 수 있습니다.)\n- TCP 프록시\n- UI (Redis Insight)\n\n10.11.12.13은 로컬 머신의 IP입니다 (사실상 TCP 프록시의 IP). 이를 변경해주세요 (예를 들어 PC 이름으로 변경할 수 있습니다).\n\n<div class=\"content-ad\"></div>\n\n# redis.sh\n\n각 노드마다 별도의 redis.conf 파일을 만드는 대신, 주어진 매개변수에 따라 redis.conf 파일을 생성하는 sh 파일을 만들었습니다. 이 파일을 사용하여 서버를 시작합니다. 이는 데모에 더 유연합니다.\n\n```js\nANNOUNCE_IP=$1\nANNOUNCE_PORT=$(expr $2)\nANNOUNCE_BUS_PORT=$(expr $ANNOUNCE_PORT + 100)\n\nCONF_FILE=\"/tmp/redis.conf\"\n\n# redis.conf 파일 생성\necho \"port 6379\ncluster-enabled yes\ncluster-config-file nodes.conf\ncluster-node-timeout 5000\nappendonly yes\nloglevel debug\nrequirepass SUPER_SECRET_PASSWORD\nmasterauth SUPER_SECRET_PASSWORD\nprotected-mode no\ncluster-announce-ip $ANNOUNCE_IP\ncluster-announce-port $ANNOUNCE_PORT\ncluster-announce-bus-port $ANNOUNCE_BUS_PORT\n\" >> $CONF_FILE\n\n# 서버 시작\nredis-server $CONF_FILE\n```\n\n각 Redis 서버는 포트 6379에서 실행되지만 클러스터 알림 IP 및 포트는 다릅니다.\n\n<div class=\"content-ad\"></div>\n\n# haproxy.cfg\n\n```js\nglobal\n  stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners\n  log stdout format raw local0 info\n\ndefaults\n  mode tcp\n  timeout client 600s\n  timeout connect 5s\n  timeout server 600s\n  timeout http-request 10s\n  log global\n\nfrontend stats\n  mode http\n  bind *:8404\n  stats enable\n  stats uri /stats\n  stats refresh 10s\n  stats admin if LOCALHOST\n\n# frontend\nfrontend redisfe\n  bind :9001-9006\n  bind :9101-9106\n  use_backend redisbe1 if { dst_port 9001 }\n  use_backend redisbe2 if { dst_port 9002 }\n  use_backend redisbe3 if { dst_port 9003 }\n  use_backend redisbe4 if { dst_port 9004 }\n  use_backend redisbe5 if { dst_port 9005 }\n  use_backend redisbe6 if { dst_port 9006 }\n  use_backend redisbusbe1 if { dst_port 9101 }\n  use_backend redisbusbe2 if { dst_port 9102 }\n  use_backend redisbusbe3 if { dst_port 9103 }\n  use_backend redisbusbe4 if { dst_port 9104 }\n  use_backend redisbusbe5 if { dst_port 9105 }\n  use_backend redisbusbe6 if { dst_port 9106 }\n\n# Server 1\nbackend redisbe1\n  server be1 redis-node-1:6379 check\n\nbackend redisbusbe1\n  server busbe1 redis-node-1:16379 check\n\n# Server 2\nbackend redisbe2\n  server be2 redis-node-2:6379 check\n\nbackend redisbusbe2\n  server busbe2 redis-node-2:16379 check\n\n# Server 3\nbackend redisbe3\n  server be3 redis-node-3:6379 check\n\nbackend redisbusbe3\n  server busbe3 redis-node-3:16379 check\n\n# Server 4\nbackend redisbe4\n  server be4 redis-node-4:6379 check\n\nbackend redisbusbe4\n  server busbe4 redis-node-4:16379 check\n\n# Server 5\nbackend redisbe5\n  server be5 redis-node-5:6379 check\n\nbackend redisbusbe5\n  server busbe5 redis-node-5:16379 check\n\n# Server 6\nbackend redisbe6\n  server be6 redis-node-6:6379 check\n\nbackend redisbusbe6\n  server busbe6 redis-node-6:16379 check\n```\n\nHAProxy는 클라이언트 접근을 위해 9001-9006 포트를 수신하며(클라이언트-서버 간), 서버 간 접근을 위해 9101-9106 포트를 수신합니다. HAProxy 통계 정보는 http://localhost:8404/stats에서 확인할 수 있습니다.\n\n접근 순서:\n\n<div class=\"content-ad\"></div>\n\n- client =` haproxy-container:700x =` haproxy:900x =` redis-node-x:6379\n- redis-node-* =` haproxy-container:710x =` haproxy:910x =` redis-node-x:16379\n\n# Redis Insight\n\n레디스 인사이트는 레디스를 위한 정말 좋은 UI입니다. 이 설정에서 http://localhost:8001/에서 액세스할 수 있습니다.","ogImage":{"url":"/assets/img/2024-06-23-RedisClusterusingDocker_0.png"},"coverImage":"/assets/img/2024-06-23-RedisClusterusingDocker_0.png","tag":["Tech"],"readingTime":6},{"title":"AltP로 파일 탐색기의 숨겨진 기능 알아보기","description":"","date":"2024-06-23 15:43","slug":"2024-06-23-UnlocktheHiddenPowerofFileExplorerwithAltP","content":"\n\nWindows 파일 탐색기에서 Alt+P 키보드 단축키의 변화력을 발견하고, 파일 관리를 향상된 생산성을 위해 간소화하는 방법을 알아보세요.\n\nRodger Mansfield, 기술 편집인\n\n2024년 5월 22일\n\n![이미지](/assets/img/2024-06-23-UnlocktheHiddenPowerofFileExplorerwithAltP_0.png)\n\n<div class=\"content-ad\"></div>\n\n컴퓨터의 파일과 폴더 미로에서 길을 잃은 적이 있나요?\n\n파일을 클릭하고 내용을 확인하기 위해 매번 시간을 보내는 일에 지치셨나요?\n\n각 파일을 열지 않고도 내용을 미리 볼 수 있는 더 효율적인 방법을 찾고 계신가요?\n\n여기 괜찮은 팁이 있어요. 간단하지만 강력한 바로 단축키를 사용해보세요: Alt+P.\n\n<div class=\"content-ad\"></div>\n\nWindows에서는 Alt + P를 누르면 파일 탐색기의 미리 보기 창을 토글할 수 있습니다.\n\n![Alt + P](/assets/img/2024-06-23-UnlocktheHiddenPowerofFileExplorerwithAltP_1.png)\n\n이를 통해 이미지 또는 문서와 같은 선택한 파일의 내용을 별도의 애플리케이션에서 열지 않고도 볼 수 있습니다.\n\n파일을 빠르게 확인하고 문서를 효율적으로 관리하는 데 유용한 단축키입니다.\n\n<div class=\"content-ad\"></div>\n\n여기에 해결 방법이 있어요.\n\n- Windows 파일 탐색기를 엽니다.\n- 파일이 있는 폴더로 이동합니다.\n- 미리보기를 원하는 파일을 선택합니다.\n- 미리보기 창을 토글하려면 Alt+P를 누릅니다.\n- 선택한 파일의 미리보기가 창의 오른쪽에 표시됩니다.\n\n![파일 탐색기에서 Alt+P로 숨겨진 기능을 확인하세요](/assets/img/2024-06-23-UnlocktheHiddenPowerofFileExplorerwithAltP_2.png)\n\n이 키보드 단축키를 사용하면 파일을 열지 않고도 미리보기할 수 있어요.\n\n<div class=\"content-ad\"></div>\n\n시간을 절약하고 작업 흐름을 향상시키며 여러 창을 열 필요를 줄입니다.\n\n물론, 화면 오른쪽 상단의 \"미리 보기\"를 클릭해서도 확인할 수 있어요.\n\n이 팁이 도움이 되셨나요?\n\n아래에 생각을 공유하고 다른 사람들이 생산성을 향상시킬 수 있도록 소셜 미디어에 공유해주세요!\n\n<div class=\"content-ad\"></div>\n\n읽어보기\n\n- Windows에서 파일 태그를 마스터하는 방법\n- 새로운 Windows 11 파일 탐색기 갤러리 사용 방법\n- Windows 11의 새 파일 탐색기 탭 기능으로 파일 관리 혁신하기\n\nOneCoolTip.com을 좋아요와 공유해주세요!\n\n쿨한 팁을 놓치지 마세요: OneCoolTip 뉴스레터.\n\n<div class=\"content-ad\"></div>\n\nOneCoolTip YouTube 채널을 방문해보세요: [OneCoolTip YouTube 채널](https://www.youtube.com/@onecooltip)\n\n트위터: [OneCoolTip 트위터](https://twitter.com/OneCoolTip) Threads: [OneCoolTip Threads](https://www.threads.net/@onecooltip)\n\n멋진 꿀팁이나 질문이 있으신가요? onecooltip.com@gmail.com 으로 이메일을 보내주세요\n\n![파일 탐색기의 숨겨진 기능 해제하기](/assets/img/2024-06-23-UnlocktheHiddenPowerofFileExplorerwithAltP_3.png)\n\n<div class=\"content-ad\"></div>\n\n로저 맨스필드는 경험이 풍부한 기술 전문가로, www.OneCoolTip.com의 마스터마인드로 활동하며 작가이자 편집자로 활동하고 있습니다. 복잡한 기술을 간단하게 풀어내는 능력을 가지고 있는 로저는 독자들이 자신감을 가지고 디지털 세계를 탐험할 수 있도록 실용적인 조언을 제공합니다. www.OneCoolTip.com으로 들어가 다양한 노하우, 팁 및 꿀팁을 만나보세요. 디지털 세계에서 한 발 앞서나갈 수 있는 노하우와 꿀팁이 가득합니다.\n\nwww.OneCoolTip.com\n\nhttp://www.onecooltip.com\n\n더 캐멀라이프를 위한 멋진 기술 팁!\n\n<div class=\"content-ad\"></div>\n\n#WindowsTips #FileExplorer #KeyboardShortcuts #ProductivityHacks #TechSavvy #WindowsWednesday #TechTips #OneCoolTip @OneCoolTip\n\nCopyright © 2024 | www.OneCoolTip.com | All Rights Reserved","ogImage":{"url":"/assets/img/2024-06-23-UnlocktheHiddenPowerofFileExplorerwithAltP_0.png"},"coverImage":"/assets/img/2024-06-23-UnlocktheHiddenPowerofFileExplorerwithAltP_0.png","tag":["Tech"],"readingTime":3},{"title":"맥 미니 서버에 오래된 MacOS를 리눅스로 교체하는 방법 ","description":"","date":"2024-06-23 15:41","slug":"2024-06-23-HowtoReplaceOldMacOSWithLinuxonMacMiniServer","content":"\n\n\n![macos-linux-replacement](/assets/img/2024-06-23-HowtoReplaceOldMacOSWithLinuxonMacMiniServer_0.png)\n\n오래된 맥 미니에 우분투를 설치하는 것을 고려해야 하는 몇 가지 이유가 있습니다:\n\n- 성능 향상: 우분투는 오래된 하드웨어에서 효율적으로 작동하는 가벼운 운영 체제입니다. 오래된 맥 미니에 우분투를 설치하면 기기에 새 숨을 불어넣고 전체적인 성능을 향상시킬 수 있습니다.\n- 오픈 소스 소프트웨어: 우분투는 다양한 무료 오픈 소스 소프트웨어를 보유한 오픈 소스 운영 체제입니다. 이는 비싼 프로프리터리 소프트웨어 비용을 피하고 싶은 사용자에게 훌륭한 옵션이 될 수 있습니다.\n- 보안: 우분투는 강력한 보안 기능으로 알려져 있어 데이터를 보호하고 시스템을 바이러스 및 기타 위협으로부터 안전하게 유지할 수 있습니다.\n- 사용자 정의: 우분투는 매우 사용자 정의가 가능하여 시스템을 조정하고 조절할 수 있습니다. 사용자의 요구에 맞게 운영 체제를 맞춤 설정하고 싶은 사용자에게 훌륭한 선택이 될 수 있습니다.\n- 커뮤니티 지원: 우분투에는 사용자 및 개발자로 이루어진 큰 활발한 커뮤니티가 있어 시스템에 문제가 발생할 경우 지원과 가이던스를 제공할 수 있습니다.\n\n어린 시절의 맥 미니에 우분투를 설치하는 것은 기기의 수명을 연장하고 더 많은 이점을 얻을 수 있는 좋은 방법일 수 있습니다. 그러나 맥 미니에 우분투를 설치하는 것은 복잡할 수 있으며 몇 가지 기술적인 단계가 필요할 수 있습니다.\n\n\n<div class=\"content-ad\"></div>\n\n# 설치 단계\n\n아래는 오래된 맥 미니에 우분투를 설치하는 일반적인 단계입니다:\n\n- 우분투를 포함한 부팅 가능한 USB 드라이브를 만듭니다: 우분투 ISO 파일은 공식 웹사이트에서 다운로드할 수 있으며 다음 명령어를 사용하여 부팅 가능한 USB 드라이브를 만들 수 있습니다.\n\n```js\ndiskutil list  # 볼륨 확인\n# 플래시 드라이브를 삽입하세요\ndiskutil list   # 새로운 장치 확인, 예: /dev/disk2\ndiskutil unmountDisk /dev/diskN\nsudo dd if=ubuntu-22.04.2-live-server-amd64.iso of=/dev/rdiskN bs=1m\ndiskutil eject /dev/diskN\n```\n\n<div class=\"content-ad\"></div>\n\n2. USB 드라이브에서 부팅하기: USB 드라이브를 맥 미니에 연결하고 시스템을 다시 시작하세요. 시스템이 다시 시작될 때 옵션 키를 눌러 부팅 메뉴로 진입하고 USB 드라이브를 부팅 장치로 선택하세요.\n\n3. Ubuntu 설치 프로그램 시작하기: USB 드라이브에서 부팅한 후 Ubuntu 설치 프로그램이 표시됩니다. 언어, 시간대 및 키보드 레이아웃을 선택하라는 화면 안내에 따라 진행하세요.\n\n4. 화면 안내에 따라 진행하기: Ubuntu 설치 프로그램이 설치 과정을 안내할 것이며, 완료하는 데 시간이 소요될 수 있습니다.\n\n5. 시스템을 다시 시작하기: 설치가 완료되면 시스템을 다시 시작하라는 메시지가 나타납니다. 다시 시작한 후 맥 미니가 Ubuntu로 부팅되어야 합니다.\n\n<div class=\"content-ad\"></div>\n\n# 선택 사항\n\n## 두 번째 하드 드라이브 추가하기\n\n먼저 Ubuntu에 SSH로 연결하세요. Ubuntu에서 다음 명령을 사용하여 IP 주소를 확인할 수 있습니다:\n\n```js\nip r\n  default via 10.0.1.1 dev enp4s0f0 proto dhcp src 10.0.1.75 metric 100\n  10.0.1.0/24 dev enp4s0f0 proto kernel scope link src 10.0.1.75 metric 100\n  10.0.1.1 dev enp4s0f0 proto dhcp scope link src 10.0.1.75 metric 100\n```\n\n<div class=\"content-ad\"></div>\n\n이제 원격으로 Ubuntu로 SSH를 사용할 수 있습니다:\n\n\nssh <user_name>@10.0.1.75\n\n\n현재 볼륨 그룹 이름을 확인하세요:\n\n\nsudo -s\nvgs\n  VG        #PV #LV #SN Attr   VSize    VFree\n  ubuntu-vg   1   1   0 wz--n- <462.71g <362.71g\n\n\n<div class=\"content-ad\"></div>\n\n첫 번째 열인 \"VG\" 아래를 보세요. 만약 Ubuntu 설치 프로그램이 만들었다면, 이름은 \"-vg\"와 같을 것입니다.\n\n모든 메타데이터를 제거하세요. 전체 디스크를 완전히 삭제할 것이므로 주의하세요.\n\n```js\nwipefs --all --backup /dev/sdb\n  /dev/sdb: 8 bytes were erased at offset 0x00000200 (gpt): 45 46 49 20 50 41 52 54\n  /dev/sdb: 8 bytes were erased at offset 0x7470c05e00 (gpt): 45 46 49 20 50 41 52 54\n  /dev/sdb: 2 bytes were erased at offset 0x000001fe (PMBR): 55 aa\n  /dev/sdb: calling ioctl to re-read partition table: Success\n```\n\n두 번째 드라이브를 물리적 볼륨으로 표시하고, 볼륨 그룹에 추가하세요:\n\n<div class=\"content-ad\"></div>\n\n```js\npvcreate /dev/sdb\n  물리 볼륨 \"/dev/sdb\"가 성공적으로 생성되었습니다.\nvgextend ubuntu-vg /dev/sdb\n  볼륨 그룹 \"ubuntu-vg\"가 성공적으로 확장되었습니다.\n```\n\npvs를 사용하여 두 개의 물리 볼륨을 확인해보세요.\n\n```js\npvs\n  PV         VG        Fmt  Attr PSize    PFree\n  /dev/sda3  ubuntu-vg lvm2 a--  <462.71g <362.71g\n  /dev/sdb   ubuntu-vg lvm2 a--  <465.76g <465.76g\n```\n\n새로운 논리 볼륨을 생성하고 /data 아래에 마운트하세요.\n\n<div class=\"content-ad\"></div>\n\n```js\nlvcreate --size 300G --stripes 2 --stripesize 4096 --name data ubuntu-vg\n  Logical volume \"data\" 가 생성되었습니다.\nmkfs.ext4 -m 0 /dev/ubuntu-vg/data\n  mke2fs 1.46.5 (2021년 12월 30일)\n  78643200개의 4k 블록과 19660800개의 아이노드로 파일시스템을 생성하는 중\n  파일시스템 UUID: cd2f1059-a3d9-4eb2-9fde-0d2d9cb5af98\n  슈퍼블록 백업은 다음 블록에 저장됨:\n   32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,\n   4096000, 7962624, 11239424, 20480000, 23887872, 71663616\n\n  그룹 테이블 할당: 완료\n  아이노드 테이블 작성: 완료\n  저널 생성 (262144 블록): 완료\n  슈퍼블록 및 파일시스템 회계 정보 작성: 완료\n\nmkdir /data\n```\n\n`/etc/fstab` 파일에 다음 라인을 추가하세요\n\n```js\ncat /etc/fstab\n...\n/dev/ubuntu-vg/data  /data  ext4    noatime         0       2\n```\n\n그리고 `/data`를 마운트하십시오.\n\n<div class=\"content-ad\"></div>\n\n```js\n마운트 /data\ndf -h\n  파일시스템                        크기  사용 중 사용 가능 사용% 마운트된 위치\n  tmpfs                             770M  1.5M  768M      1% /run\n  /dev/mapper/ubuntu--vg-ubuntu--lv  98G  7.1G   86G      8% /\n  tmpfs                             3.8G     0  3.8G     0% /dev/shm\n  tmpfs                             5.0M     0  5.0M     0% /run/lock\n  /dev/sda2                         2.0G  131M  1.7G      8% /boot\n  /dev/sda1                         1.1G  6.1M  1.1G      1% /boot/efi\n  tmpfs                             770M  4.0K  770M      1% /run/user/1000\n  /dev/mapper/ubuntu--vg-data       295G   28K  295G      1% /data\n```\n\n작업을 확인하여 각 논리 볼륨이 어떤 물리 볼륨을 사용하는지 확인하십시오:\n\n```js\nlvs -a -o name,lv_size,devices\n  LV        LSize   Devices\n  data      300.00g /dev/sda3(25600),/dev/sdb(0)\n  ubuntu-lv 100.00g /dev/sda3(0)\n```\n\n# 결론\n\n\n<div class=\"content-ad\"></div>\n\n이전 Mac Mini 서버를 버리지 마세요. 보시다시피 Linux 서버(Ubuntu를 사용하는 경우)로 변환하는 것이 어렵지 않습니다. 꽤 좋은 하드웨어를 갖추고 있으며, 공간을 적게 차지하며 전기를 적게 소비하며 조용합니다.","ogImage":{"url":"/assets/img/2024-06-23-HowtoReplaceOldMacOSWithLinuxonMacMiniServer_0.png"},"coverImage":"/assets/img/2024-06-23-HowtoReplaceOldMacOSWithLinuxonMacMiniServer_0.png","tag":["Tech"],"readingTime":5},{"title":"Mac에서 NVM과 Nodejs 설치하는 방법  영구적인 솔루션","description":"","date":"2024-06-23 15:41","slug":"2024-06-23-HowtoinstallNVMNodeJsinMacOsPermanentSolution","content":"\n\n참고: 생각 많이 하지 마세요, 그냥 복사해서 붙여 넣으세요.\n\n먼저 아래 명령어를 사용하여 Homebrew를 설치해야합니다:\n\n```js\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\n이 명령어가 작동하지 않으면 네트워크를 변경해보세요.\n이미 Homebrew가 설치되어있는 경우에는 위의 명령어를 무시하세요.\n\n<div class=\"content-ad\"></div>\n\n이제 다음 명령어를 실행해주세요 :\n\n```js\nbrew install nvm\n```\n\n그 다음에는 다음 명령어를 실행하여 NVM을 위한 디렉토리를 생성해주세요 :\n\n```js\nmkdir ~/.nvm\n```\n\n<div class=\"content-ad\"></div>\n\n디렉터리를 생성한 후에는 다음의 라인을 셸 구성 파일에 추가해주세요 (nano ~/.zshrc 또는 nano ~/.bashrc) :\n\n```js\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"/usr/local/opt/nvm/VERSION/nvm.sh\" ] && . \"/usr/local/opt/nvm/VERSION/nvm.sh\"\n```\n\n위 코드에서 VERSION 부분을 원하는 버전으로 바꾼 후 ctrl O를 눌러 저장하고, 그런 다음 ctrl X로 종료하세요.\n\n오류 없이 작업하기 위해서 usr/local/opt/nvm 으로 이동한 후, 특정 버전이 있는지 확인하고 VERSION을 실제 버전으로 교체하세요.\n\n<div class=\"content-ad\"></div>\n\n만약 버전이 없고 nvm.sh가 nvm 폴더 안에 있으면 상단 명령어에서 VERSION을 제거하세요.\n\n아직 작동하지 않는다면 nvm.sh를 수동으로 찾아보세요 (보통 /usr/local/opt/에 남아 있습니다) 그리고 해당 경로를 찾아서 상단 명령어의 경로로 대체하세요.\n\n그리고 터미널을 다시 시작하세요.\n\nNode Js를 설치하려면 이렇게 입력하세요:\n\n<div class=\"content-ad\"></div>\n\n```js\nnvm 20 설치\n```\n\n실제로 설치하려는 버전으로 \"버전\"을 대체하여 특정 버전을 설치할 수 있습니다 (안정적이고 기본 값인 20을 사용하고 있습니다) :\n\n```js\nnvm install <version>\n```\n\n이제 노드 JS 및 NVM 버전 또는 설치를 확인하려면 다음을 사용하세요 :\n\n<div class=\"content-ad\"></div>\n\n```js\nnvm ls\n```\n\n또한 nvm -v 또는 node -v을 사용할 수 있습니다. 이 명령어들은 NVM 또는 Node의 버전 정보만 표시할 것입니다. 하지만 nvm ls 명령어는 모든 정보를 표시할 것입니다.\n\n<img src=\"/assets/img/2024-06-23-HowtoinstallNVMNodeJsinMacOsPermanentSolution_0.png\" />","ogImage":{"url":"/assets/img/2024-06-23-HowtoinstallNVMNodeJsinMacOsPermanentSolution_0.png"},"coverImage":"/assets/img/2024-06-23-HowtoinstallNVMNodeJsinMacOsPermanentSolution_0.png","tag":["Tech"],"readingTime":2},{"title":"프로그래머를 위한 더 나은 MacOS 터미널 iTerm2 없이 zsh 사용하는 방법","description":"","date":"2024-06-23 15:40","slug":"2024-06-23-BetterMacOSTerminalforProgrammersUsezshwithoutinstallingiTerm2","content":"\n\n![이미지](/assets/img/2024-06-23-BetterMacOSTerminalforProgrammersUsezshwithoutinstallingiTerm2_0.png)\n\n# 👋 소개\n\n터미널 애플리케이션은 MacOS에서 가장 중요한 애플리케이션 중 하나이며 아마도 가장 중요한 애플리케이션입니다. MacOS에는 여러 내장 셸이 있지만 대부분의 사용자는 zsh 또는 bash 셸을 사용합니다. Mac에서 사용 중인 터미널을 확인하려면 터미널을 열고 다음을 입력하십시오.\n\n```js\necho $SHELL\n```\n\n<div class=\"content-ad\"></div>\n\n이 글에서는 MacOS의 내장 zsh 터미널을 구성하는 방법을 살펴볼 것입니다. Mac에서 zsh 터미널이 설치되어 있는지 확인하려면 다음 명령을 입력하십시오.\n\n```js\ncat /etc/shells | grep \"zsh\"\n```\n\nMac에 zsh 셸이 설치되어 있는지 확인했다면 Mac 터미널을 다양하게 활용할 수 있습니다. 그러나 그렇지 않다면 zsh 터미널을 설치해야 합니다. Homebrew가 설치되어 있어야만 zsh 터미널을 설치할 수 있습니다. Homebrew는 MacOS용 패키지 관리자 도구이며 우리는 zsh 셸을 변경하기 위해 이 도구가 필요합니다.\n\n# 🍺 Homebrew 설치하기\n\n<div class=\"content-ad\"></div>\n\n홈브루를 설치하려면 아래 안내에 따라 간단히 설치할 수 있어요.\n\n- 홈브루를 설치하려면 /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"를 실행하세요.\n- 설치 후, 터미널에서 화면에 표시된 지침대로 두 개의 명령을 실행하게 됩니다.\n  1번 명령 → echo `eval \"$(/opt/homebrew/bin/brew shellenv)\"` `` /Users/`사용자명`/.zprofile\n  2번 명령 → eval \"$(/opt/homebrew/bin/brew shellenv)\"\n- 홈브루가 올바르게 설치되었는지 확인하려면 터미널에 brew를 입력하세요.\n\n# 💻 zsh 설치하기\n\nzsh 터미널이 없다면 cat /etc/shells | grep \"zsh\"를 실행했을 때, zsh가 나오지 않는다면 Homebrew로 zsh를 설치할 수 있어요. brew install zsh를 입력하여 zsh를 설치한 후, 다시 cat /etc/shells | grep \"zsh\"를 입력하여 zsh 터미널이 정상적으로 설치되었는지 확인하세요.\n\n<div class=\"content-ad\"></div>\n\n그 후 아래 명령어를 입력하여 기본 터미널을 zsh 터미널로 변경하세요.\n\n```js\nchsh -s /bin/zsh\n```\n\n변경 사항이 올바르게 적용되었는지 확인하려면 터미널을 다시 시작하세요.\n\n# 🎨 oh-my-zsh\n\n<div class=\"content-ad\"></div>\n\n이제 터미널에 색을 입혀봐요 🎨 아래 지시 사항을 따라주세요.\n\n- git 설치하기 → brew install git\n- oh-my-zsh 설치하기 → sh -c \"$(curl -fsSLhttps://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n- 터미널에 필요한 글꼴 다운로드 및 설치하기 → https://github.com/Falkor/dotfiles/blob/master/fonts/SourceCodePro%2BPowerline%2BAwesome%2BRegular.ttf\n- powerlevel10k 테마 설치하기 → git clonehttps://github.com/romkatv/powerlevel10k.git$ZSH_CUSTOM/themes/powerlevel10k\n- .zshrc 파일 열기 → open ~/.zshrc, 그리고 $ZSH_THEME을 powerlevel10k로 업데이트하기 → ZSH_THEME=\"powerlevel10k/powerlevel10k\"\n- 터미널을 다시 시작하고 화면 안내에 따라 터미널을 아름답게 꾸며보세요 🌈✨\n\n# 🤔 자동 제안\n\n터미널을 아름답게 만드는 것 외에도, zsh 터미널에서도 자동 제안 기능을 사용할 수 있어요. 자동 제안 기능을 사용하려면 아래 지시 사항을 따라주세요.\n\n<div class=\"content-ad\"></div>\n\n- git 저장소를 복제하고 설치하세요 → git clone https://github.com/zsh-users/zsh-autosuggestions $'ZSH_CUSTOM:-~/.oh-my-zsh/custom'/plugins/zsh-autosuggestions \n- .zshrc 파일을 업데이트하세요 → plugins=(zsh-autosuggestions) (이미 플러그인 섹션에 git이 있는 경우에는 plugins=(git zsh-autosuggestions)로 작성)\n- .zshrc 파일을 소스하세요 → source ~/.zshrc\n\n이제 멋지고 더 나은 터미널을 사용해서 프로젝트를 작업할 수 있게 되었습니다! 😊\n\n# 📚참고 자료\n\n- Gastón Festari의 Zsh로 셸 스크립팅 배우기\n- Joe Kissell의 터미널로 Mac 명령줄 제어하기, 3판","ogImage":{"url":"/assets/img/2024-06-23-BetterMacOSTerminalforProgrammersUsezshwithoutinstallingiTerm2_0.png"},"coverImage":"/assets/img/2024-06-23-BetterMacOSTerminalforProgrammersUsezshwithoutinstallingiTerm2_0.png","tag":["Tech"],"readingTime":3},{"title":"하루하루 유용한 도구들, 2024 최신판","description":"","date":"2024-06-23 15:39","slug":"2024-06-23-DaytoDayToolsthe2024edition","content":"\n\n2017년부터 내가 매일 사용하는 도구에 대해 쓴 것 같아; 얼마나 많이 변했는지 궁금하네. 🤔\n\n내가 macOS 사용자라는 건 이미 알고 있을 거라 생각해, 그래서 이 포스트에서 다루는 모든 도구들은 주로 맥에서 돌아가. 🍎\n\n# 데스크톱 앱 💻\n\n- Visual Studio Code : 여전히 내 기본 IDE야; 인프라스트럭처 코드뿐만 아니라 작성하고 디버그해야 하는 모든 코드에 사용해, 정말로 대부분의 시간이 디버깅에 쓰이는 중이야. 🐛\n- Sublime Text : 원시 텍스트 편집을 위해, 꽤 기본적인 Sublime Text를 사용해.\n- Paste : 몇 년 동안 Paste를 사용해왔어. 장치 간에 복사한 모든 것을 손쉽게 찾아볼 수 있는 데이터베이스에 저장하는 건 훌륭해 — 지금은 없으면 어떡하지 모르겠어, 모든 게 빠르게 [CMD]+[Shift]+V로 해결돼 af.\n- 1Password : 1Password는 내 비밀번호 관리자로 선택했고, 블로그를 시작한 지 열 년이 넘었는데도 그 데로 사용하고 있어! 🔒\n- Draw.io : MacOS 사용자로서, 아마 Visio의 \"멋있음\"을 경험하지 못할 거야 — 다행히도, 이 도구는 그걸 압도해. 😃 🎨\n- Bear Notes : 노트 애플리케이션들이 왔다갔다하지만, Bear Notes는 여전히 내 최고 앱이야. 깔끔한 인터페이스, 강력한 마크다운 지원, 그리고 장치 간에 원활한 동기화를 제공해. 🐻📝\n- Ivory : 이 앱은 강력하고 기능이 풍부하며 Tweetbot처럼 Mastodon 클라이언트를 필요로 하는 사람들에게 완벽해. Ivory는 부드럽고 사용자 정의 가능한 사용자 경험을 제공해, 소셜 미디어에서 연결되어 있고 참여하는 게 쉽게 해줘. 🐘💬\n- iTerm2 : iTerm이 내 최선의 터미널 에뮬레이터야. 기본 터미널 앱보다 더 많은 기능과 사용자 정의 옵션을 제공해, 분할 창, 사용자 정의 색 구성표, 그리고 포괄적인 키보드 바로 가기를 포함해. 💻\n\n<div class=\"content-ad\"></div>\n\n# 터미널 앱 ⌨️\n\n- **OpenCommit**: 이 CLI 도구는 AI를 사용하여 코드 변경 사항에 대한 의미 있는 커밋 메시지를 자동으로 생성합니다. 이 글에 대한 커밋 메시지를 생성했습니다. 여기서 확인해보세요. 🤖💬\n- **Homebrew**: 내가 사용하는 도구 중 하나인 이것은 macOS를 위한 유일한 실제 패키지 관리자입니다. 소프트웨어와 도구를 설치하는 것을 간단하게 만들어주어 개발 환경을 갱신하는 것을 쉽게 만들어줍니다. 🍺\n- **Terraform**은 고수준 구성 언어를 사용하여 클라우드 리소스를 정의하고 프로비저닝할 수 있게 해주는 인프라 코드 도구입니다. 집과 직장에서 모두 사용하며 여기 더 자세히 설명되어 있고 여기서 책을 썼습니다. ☁️🏗️\n- **Ansible**은 구성 관리와 응용 프로그램 배포를 위한 자동화 도구로, 간단하고 에이전트리스 아키텍처로 다중 서버에서 작업을 관리하고 자동화하기 쉽게 만들어줍니다. 오, 그리고 이에 관한 책도 방금 출간했습니다. 🤖📚\n- **Conda**는 오픈 소스 패키지 관리 및 환경 관리 시스템으로, 자세한 정보는 여기를 참조하세요. 🐍📦\n- **Ollama**는 대규모 언어 모델 (LLM)을 로컬에서 실행하고 관리하는 다재다능한 도구입니다. Llama 3, Mistral 등과 같은 다양한 모델을 지원하여 사용자 정의 및 효율적인 LLM을 커스터마이징하고 머신에서 효율적으로 실행할 수 있습니다. 이에 대해 자세히 다룬 내용이 여기 있습니다. 🦙🧠\n\n# 서비스 🌐\n\n- **Grammarly**는 실시간으로 문법, 철자 및 스타일 제안을 제공하여 글쓰기를 개선하는 고급 AI 기반 작성 보조 도구입니다. 이메일부터 블로그 글까지 모든 문서가 명료하고 간결하며 오류가 없도록 보장하는 데 필수적입니다. 2016년 11월 6일 가입한 이후로 Grammarly에 의해 분석된 단어는 21,657,835개 이상입니다. ✍️🤖\n- **OpenAI의 ChatGPT**는 제공된 입력을 기반으로 인간과 유사한 텍스트를 생성하는 대화형 AI 모델입니다. 아이디어 떠올리기, 콘텐츠 작성, 코딩 지원 등에 유용하여 창의적인 작업과 기술적 작업에 모두 필수적인 도구입니다. 이 블로그 글의 일부 부분을 작성하는 데도 도움이 되었습니다. 💬🤖\n- **Midjourney**는 텍스트 프롬프트로부터 화려한 시각 자료를 생성하는 AI 기반 이미지 생성 서비스입니다. 다양한 프로젝트 및 프레젠테이션을 위해 독특한 그래픽, 시각 콘텐츠 및 창의적인 일러스트레이션을 제작하는 데 유용한 도구입니다. 이 블로그 글의 헤더를 만드는 데 사용되었습니다. 🖼️🤖\n- **Kagi**는 빠르고 광고 없는 개인 정보 중심 검색 엔진으로, 광고나 추적 없이 정확한 정보를 제공하여 웹 브라우징 경험을 향상시켜줍니다. 🔍🕵️\n- **Cloudflare Pages**는 빠르고 안전한 정적 웹 사이트를 배포하는 플랫폼입니다. 개발 흐름에 완벽히 통합되어 편리하게 웹 프로젝트를 신속하게 발행하고 관리할 수 있습니다. 이 블로그와 레코드 수집 페이지를 포함하여 내 웹 프로젝트를 쉽게 관리하고 게시할 수 있도록 해줍니다. 🌩️🕸️\n\n<div class=\"content-ad\"></div>\n\n현재 AI 기술의 발전을 감안하면, 이 목록이 앞으로 12개월 동안 얼마나 변할지 궁금하네요!!!! 🤯🔮\n\n원문은 2024년 6월 16일에 https://www.russ.foo에서 게시되었습니다.","ogImage":{"url":"/assets/img/2024-06-23-DaytoDayToolsthe2024edition_0.png"},"coverImage":"/assets/img/2024-06-23-DaytoDayToolsthe2024edition_0.png","tag":["Tech"],"readingTime":3}],"page":"22","totalPageCount":113,"totalPageGroupCount":6,"lastPageGroup":20,"currentPageGroup":1},"__N_SSG":true}