{"pageProps":{"posts":[{"title":"알고리즘 세계에서 미디어의 출처를 확인하는 방법","description":"","date":"2024-06-19 04:07","slug":"2024-06-19-VerifyingtheOriginofMediainanAlgorithmicWorld","content":"\n\n## C2PA 콘텐츠 신뢰성 사양 및 Rust SDK 소개\n\n![이미지](/assets/img/2024-06-19-VerifyingtheOriginofMediainanAlgorithmicWorld_0.png)\n\n인간이 직접 제작한 정품 미디어를 딥페이크나 기타 알고리즘으로 생성된 미디어와 구분하는 것은 알려진 바와 같이 매우 어렵습니다. 기존 도구들은 주어진 미디어가 생성될 확률을 제시하지만 확실성을 확보하는 것은 어렵습니다. 알고리듬 미디어와 딥페이크가 온라인 공간을 덮치면서, 정치 및 선거 관련 미디어의 신뢰성을 검증하는 것이 향후 중요해질 것입니다. 온라인 오보나 디스인포메이션을 걸러내는 것 이외에도, 디지털 작품의 원본 권한을 주장하고 싶어하는 예술가들에게 신뢰성을 인정하는 것도 가치가 있습니다.\n\n디지털 이미지나 비디오가 정품인지, 인공적으로 생성되었거나 복제된 것인지를 이해하려면 다음과 같은 것들을 알고 있어야 할 수도 있습니다:\n\n<div class=\"content-ad\"></div>\n\n미디어 메타데이터의 무결성을 확인하는 암호학적으로 안전한 서명 방법이나 카메라 정보, 좌표 및 기타 정보와 같은 것들을 확인하는 방법이 필요합니다.\n또한 원래 형태에서 많이 수정되지 않았음을 알 수 있는 방법이 필요할 것입니다. 수정이 있었다면 그 수정 내용 또한 알 수 있어야 합니다.\n\n그러한 해결책이 있습니다. 아래에서 다음 내용에 대해 이야기하겠습니다:\n- C2PA 명세\n- 명세가 작동하는 방식\n- 코드 지원\n- 어떤 이점이 있는지\n- 문제점\n- 앞으로의 전망은?\n\n# C2PA 명세\n\n<div class=\"content-ad\"></div>\n\n콘텐츠 검증 및 출처 연동을 담당하는 콘텐츠 신뢰도 이니셔티브의 일부인 C2PA 기술 명세서가 Adobe가 주도하는 이니셔티브에서 제작되었습니다. 알고리즘으로 생성된 미디어를 감지하려는 대신, 이 명세서는 미디어의 출처와 미디어가 수명 동안 거쳐온 수정 작업들의 순서를 확인할 수 있는 시스템을 설명합니다. 이 정보는 관련 메타데이터 구조 내에서 암호화된 형태로 주장됩니다.\n\n다른 말로 하면, 이 표준은 메타데이터에서 해당되는 클래스의 미디어가 사실 인간이 생성한 것임을 확신시켜줍니다. 이 메타데이터가 없는 미디어는 C2PA 표준에서 혜택을 받을 수 없습니다. 이 표준은 선택 사항이며, 이에 동의한 장비 제조업체(예: 카메라), 미디어 편집 소프트웨어(포토샵 등), 그리고 미디어의 출처를 확인하고 싶어하는 모든 시스템들에 의존합니다.\n\n![이미지](/assets/img/2024-06-19-VerifyingtheOriginofMediainanAlgorithmicWorld_1.png)\n\n이 시스템과 관련된 개념 중 하나는 미디어와 관련된 Exif 형식이며, 사진이 촬영된 지역, 하드웨어 세부 정보, 카메라 설정과 같은 정보를 포함할 수 있습니다. 그리고 이러한 Exif 데이터는 JPEG와 같은 미디어 파일에 직접 포함됩니다. 이 데이터는 일반적으로 암호화되지 않습니다.\n\n<div class=\"content-ad\"></div>\n\nC2PA 사양은 지원되는 미디어 유형에 직접 메타데이터를 미디어 파일에 포함합니다 (다른 유형의 경우 \"사이드카\" 매니페스트 파일을 생성합니다). 매니페스트에는 다음과 같은 정보가 포함됩니다:\n\n- 미디어 원본 정보 (디지턈 카메라 캡처, 다른 창작물)\n- 시간 경과에 따른 미디어 수정 내역, 사용된 도구 및 작업자\n- 매니페스트가 조작 방지임을 보장하는 디지털 서명\n- 그 외\n\n메타데이터 자체는 JUMBF 형식(JPEG Universal Metadata Box Format)으로 저장됩니다.\n\n# 사양이 작동하는 방식\n\n<div class=\"content-ad\"></div>\n\n해당 명세는 미디어의 원본에 대한 데이터 집합과 그에 대한 모든 후속 작업에 대한 주장을 포함하는 매니페스트를 설명합니다.\n\n예를 들어 매니페스트는 사진이 특정 날짜와 시간에 특정 카메라로 촬영되었고, 이후 (예를 들어 자르기와 같은) 미디어 편집 도구를 통해 편집되었다는 것을 주장할 수 있습니다. 미디어에 대한 주장은 W3C 신뢰 가능 자격증서로 디지털적으로 서명될 수 있으며, 해당 주장은 (사람 또는 조직)의 Claim으로 넘어갈 수 있습니다. 이에 대한 코드 예시는 아래에서 설명하겠습니다.\n\n![Verifying the Origin of Media in an Algorithmic World](/assets/img/2024-06-19-VerifyingtheOriginofMediainanAlgorithmicWorld_2.png)\n\n복잡하기는 하지만, 툴의 신뢰성 같은 몇 가지 가정을 하면 (수정된 매니페스트를 업데이트한 툴에 대한 신뢰성과 같은), 이 정보는 카메라로 촬영된 미디어와 Midjourney와 같은 모델에 의해 생성된 미디어의 차이점에 대해 알려줄 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n암호화 서명은 청구와 함께 제공되며, 이를 통해 주장이나 다른 메타데이터가 후속 수정되었는지를 판단할 수 있습니다. 예를 들어, 미디어의 원천을 순수 알고리즘 미디어에서 디지털 캡처로 변경하려고 시도하는 경우입니다.\n\n# 코드 해설\n\n여러 파일 유형에 C2PA 개념을 적용할 수 있는 Rust SDK(그리고 c2pa-js와 같은 몇 가지 다른 SDK도 있습니다)가 있습니다.\n\n지금은 해당 SDK를 사용하는 방법에 대한 간단한 단계별 해설을 찾지 못했지만, 일부 탐험적인 코드를 사용하여 해당 SDK의 빠른 개요 데모를 여기에 게시했습니다.\n\n<div class=\"content-ad\"></div>\n\n이 코드는 특정 미디어 파일을 위한 새로운 Manifest를 초기화합니다. 이 Manifest에는 작성자 세부 정보, 콘텐츠에 대한 주장, Exif 또는 사용자 지정 구조와 같은 메타데이터를 인코딩합니다.\n\n예를 들어:\n\n```js\n// 새 미디어를 위한 새 Manifest 생성\nlet mut manifest = Manifest::new(\"mikes-c2pa-test-code/0.1\".to_owned());\n\n// 새, 독창적인 창작물로 이 미디어를 설정\nlet creative_work = CreativeWork::new()\n    .add_author(\n        SchemaDotOrgPerson::new()\n            .set_name(\"Mike Cvet\")\n              .expect(\"set name\")\n            .set_identifier(\"mikecvet\")\n              .expect(\"set identifier\")\n    )?;\n\n// 이 미디어가 생성되었고, 관련 정보가 포함된 주장\nlet created = Actions::new()\n    .add_action(\n        Action::new(c2pa_action::CREATED)\n            // 이것을 원본 디지털 이미지 생성 유즈케이스로 가정\n            .set_source_type(\"https://cv.iptc.org/newscodes/digitalsourcetype/digitalCapture\".to_owned())\n            .set_software_agent(\"mikes-c2pa-test-code/0.1\")\n            .set_when(now_string.clone())\n    );\n\n// 주장을 Manifest에 추가\nmanifest.add_assertion(&creative_work)?;\nmanifest.add_assertion(&created)?;\n\n// 서명 도구 생성\nlet signer = create_signer::from_files(\n  signcert_path, pkey_path, SigningAlg::Ps256, None\n);\n\n// Manifest에 서명하고 미디어 파일에 삽입\nmanifest.embed(&source, &dest, &*signer.unwrap())?;\n```\n\nManifest 내용에는 주장 및 일부 서명 정보에 대한 섹션이 포함됩니다.\n\n<div class=\"content-ad\"></div>\n\n실제 서명 암호 해시는 Manifest 표시 출력에서 삭제되었습니다.\n\n```js\n  \"manifests\": {\n    \"urn:uuid:5772a32a-777e-46d5-b65e-50426d95e84e\": {\n      \"claim_generator\": \"mikes-c2pa-test-code/0.1 c2pa-rs/0.25.2\",\n      \"title\": \"제목\",\n      \"format\": \"image/jpeg\",\n      \"instance_id\": \"xmp:iid:56beb158-2cde-4ef4-b111-5a5a4aea7bef\",\n      \"ingredients\": [],\n      \"assertions\": [\n        {\n          \"label\": \"stds.schema-org.CreativeWork\",\n          \"data\": {\n            \"@context\": \"http://schema.org/\",\n            \"@type\": \"CreativeWork\",\n            \"author\": [\n              {\n                \"@type\": \"Person\",\n                \"identifier\": \"mikecvet\",\n                \"name\": \"Mike Cvet\"\n              }\n            ]\n          },\n          \"kind\": \"Json\"\n        },\n        {\n          \"label\": \"c2pa.actions\",\n          \"data\": {\n            \"actions\": [\n              {\n                \"action\": \"c2pa.created\",\n                \"digitalSourceType\": \"https://cv.iptc.org/newscodes/digitalsourcetype/digitalCapture\",\n                \"softwareAgent\": \"mikes-c2pa-test-code/0.1\",\n                \"when\": \"2023-08-21T08:46:18.159790+00:00\"\n              }\n            ]\n          }\n        },\n\n       /* 더 많은 섹션 */\n\n      \"signature_info\": {\n        \"issuer\": \"C2PA Test Signing Cert\",\n        \"cert_serial_number\": \"720724073027128164015125666832722375746636448153\"\n      },\n      \"label\": \"urn:uuid:5772a32a-777e-46d5-b65e-50426d95e84e\"\n  }\n}\n```\n\nManifestStore는 Manifest 및 이들의 직렬화, 역직렬화, 유효성 검사를 관리합니다.\n\nManifestStore의 서식이 있는 보기 구조를 조사하면 다음이 표시됩니다:\n\n<div class=\"content-ad\"></div>\n\n```js\n{\n  \"active_manifest\": \"uuid:5772a32a-777e-46d5-b65e-50426d95e84e\",\n  \"manifests\": {\n    // 현재 manifest로 식별되는 것에 유의하세요; 다른 manifest들도 존재할 수 있습니다.\n    \"urn:uuid:5772a32a-777e-46d5-b65e-50426d95e84e\": {\n\n      // 이 상자에 설명된 manifest에 포함된 모든 내용입니다.\n    }\n  }\n}\n```\n\n활성 manifest는 미디어에 적용되는 가장 최근의 주장 집합을 가리킵니다. 미디어 파일과 연결된 많은 manifest가 있을 수 있으며, 과거 버전에 대한 주장을 나타냅니다.\n\n파생 자산은 기존 미디어나 콘텐츠에서 만들어진 것입니다. 예를 들어 편집 도구에 로드되어 수정된 이미지 등이 있습니다. 새 Manifest를 생성할 때는 이전 주장을 부모 구성요소로 포함시킵니다. Rust SDK에서는 미디어 파일로부터 기존 Manifest를로드하여 편집하는 것이 불가능하며, 새로운 Manifest가 생성되어야 합니다. 예를 들어, 미디어 편집 소프트웨어가 부모 미디어가 잘린 주장을 추가하려면 다음과 같이 보일 수 있습니다:\n\n```js\n// Manifest를 편집할 수 없습니다. manifest 저장소의 내용을 수정하려면, 이전 버전의 콘텐츠와 해당 manifest를 ingredient로 가져와야 합니다.\nlet parent = Ingredient::from_file(file_path).expect(\"source file\");\n\nlet mut manifest = Manifest::new(\"mikes-c2pa-test-code/0.1\".to_owned());\n\nlet actions = Actions::new()\n    // 이 미디어는 지정된 사용자 에이전트에 의해 열렸습니다.\n    .add_action(\n        Action::new(c2pa_action::OPENED)\n            .set_parameter(\"identifier\", parent.instance_id().to_owned())\n            .expect(\"set id\")\n            .set_reason(\"editing\")\n            .set_software_agent(\"mikes-c2pa-test-code/0.1\")\n            .set_when(now_string.clone())\n    )\n    // 이 미디어는 지정된 사용자 에이전트에 의해 잘렸습니다.\n    .add_action(\n        Action::new(c2pa_action::CROPPED)\n            .set_parameter(\"identifier\", parent.instance_id().to_owned())\n            .expect(\"set id\")\n            .set_reason(\"editing\")\n            .set_source_type(\"https://cv.iptc.org/newscodes/digitalsourcetype/minorHumanEdits\".to_owned())\n            .set_software_agent(\"mikes-c2pa-test-code/0.1\")\n            .set_when(now_string.clone())\n    );\n```\n\n<div class=\"content-ad\"></div>\n\n이것은 콘텐츠에 대한 새로운 주장 세트를 포함하는 새로운 Manifest를 설정합니다:\n\n```js\n{\n  \"claim_generator\": \"mikes-c2pa-test-code/0.1 c2pa-rs/0.25.2\",\n  \"title\": \"test_file.jpg\",\n  \"format\": \"image/jpeg\",\n  \"instance_id\": \"xmp:iid:996edb05-fdf0-4d28-93a2-4e8bf3db3684\",\n  \"ingredients\": [\n    {\n      \"title\": \"test_file.jpg\",\n      \"format\": \"image/jpeg\",\n      \"instance_id\": \"xmp:iid:56beb158-2cde-4ef4-b111-5a5a4aea7bef\",\n      \"relationship\": \"parentOf\",\n      \"active_manifest\": \"urn:uuid:5772a32a-777e-46d5-b65e-50426d95e84e\"\n    }\n  ],\n  \"assertions\": [\n    {\n      \"label\": \"c2pa.actions\",\n      \"data\": {\n        \"actions\": [\n          {\n            \"action\": \"c2pa.opened\",\n            \"parameters\": {\n              \"identifier\": \"xmp:iid:56beb158-2cde-4ef4-b111-5a5a4aea7bef\"\n            },\n            \"reason\": \"editing\",\n            \"softwareAgent\": \"mikes-c2pa-test-code/0.1\",\n            \"when\": \"2023-08-22T05:08:19.134866+00:00\"\n          },\n          {\n            \"action\": \"c2pa.cropped\",\n            \"digitalSourceType\": \"https://cv.iptc.org/newscodes/digitalsourcetype/minorHumanEdits\",\n            \"parameters\": {\n              \"identifier\": \"xmp:iid:56beb158-2cde-4ef4-b111-5a5a4aea7bef\"\n            },\n            \"reason\": \"editing\",\n            \"softwareAgent\": \"mikes-c2pa-test-code/0.1\",\n            \"when\": \"2023-08-22T05:08:19.134866+00:00\"\n          }\n        ]\n      }\n    }\n  ],\n```\n\n이 새로운 주장 세트는 서명되어 있으며 새로운 액티브 Manifest로 미디어에 포함됩니다.\n\n# 이것이 우리에게 무엇을 제공합니까?\n\n<div class=\"content-ad\"></div>\n\n적재소를 이런식으로 불러와 보겠다면:\n\n```js\n  let manifest_store = ManifestStore::from_file(\"./out/test_file.jpg\")?;\n\n  match manifest_store.validation_status() {\n      // 주의: 오류가 있는 경우에만 상태가 나타남\n      Some(statuses) if !statuses.is_empty() => {\n          \n          println!(\"매니페스트를 불러오는 중 유효성 검사 오류 발생:\");\n          for status in statuses {\n              println!(\"유효성 검사 코드: {}\", status.code());\n          }\n\n          panic!(\"데이터 유효성 오류 발생\");\n      },\n      _ => ()\n  }\n```\n\n이렇게 출력됩니다:\n\n<div class=\"content-ad\"></div>\n\n```js\n매니페스트 로딩 중 유효성 검사 오류가 발생했습니다:\n\n유효성 상태 코드: assertion.dataHash.mismatch\n```\n\nManifestStore가 자산의 해시(매니페스트 포함)가 매니페스트 자체에 저장된 해시와 일치하지 않음을 감지했습니다. 따라서 데이터 해시 불일치를 통해 이미지 또는 매니페스트가 변경되었음이 명백해졌습니다.\n\n그러므로 이론적으로, 모든 것이 예상대로 작동한다면, 주어진 미디어 파일의 생성 및 수정 이력이 완전히 고려되고 실제임을 완전히 이해하는 데 이 데이터를 사용할 수 있습니다.\n\n<img src=\"/assets/img/2024-06-19-VerifyingtheOriginofMediainanAlgorithmicWorld_3.png\" />\n\n\n<div class=\"content-ad\"></div>\n\n# 문제들\n\nC2PA 표준도 만병통치약은 아닙니다. 미디어 유형의 신뢰성을 확립할 수 있는 좋은 기회가 있을 것 같지만 다른 고려 사항이 있습니다.\n\n## 개인정보\n\n이 표준은 개인의 고유 식별 데이터를 미디어의 원천 또는 조작과 연결함으로써 작동합니다. 이 데이터의 널리 퍼지는 것은 아마도 산업이 나아가는 방향에 따라 기본적으로 그렇게 될 수 있으며, 미디어 제작자나 저자에게는 의도하지 않았거나 바람직하지 않은 일일 수도 있습니다.\n\n<div class=\"content-ad\"></div>\n\n## 동등한 신뢰할 수 있는 정보에 대한 접근\n\n미래에서 우리가 미디어를 창작자의 검증된 자격 증명과 함께 서명할 때에 미디어가 더 신뢰할 만하다고 생각한다면, 그 자격 증명이 없는 사람들이 만든 미디어의 가치는 감소될 것입니다.\n\n## 표준 준수\n\n기술 표준은 규제가 아니며, 중요한 것은 기업들과 그와 연관된 소프트웨어가 적용해야만 영향을 미칩니다. 대부분의 수혜자가 일반적으로 사용할 수 있도록 하기 위해서는 대부분의 미디어가 C2PA 매니페스트를 가져야 할 것입니다. 예를 들어, Apple이 관심을 갖지 않는다고 결정하거나, 미래의 인기 있는 비디오 편집 도구가 동일한 결정을 내린 경우, 이는 생태계에서 일상적으로 생성된 막대한 양의 사용자 생성 미디어를 제외시킵니다.\n\n<div class=\"content-ad\"></div>\n\n## 표준 남용\n\nC2PA는 오픈 표준이기 때문에 누군가가 해당 표준을 준수하는 도구를 만들지 못하게 막는 것은 거의 불가능합니다. 그러나 예를 들어, 모든 알고리즘으로 생성된 미디어를 디지털 캡처로 레이블링하고 해당 내용으로 서명하는 도구를 만들 수 있습니다. 이로 인해 사용 가능한 C2PA 매니페스트 집합이 오염되며, 신뢰할 수 있다면 이를 검증하기 위해 매니페스트 기록에 포함된 사용자 에이전트를 검사해야 할 것입니다.\n\n# 미래에 대한 전망은?\n\n이 표준이 기술 산업에 보다 깊게 자리 잡고 기업들이 계속해서 이를 엄격히 준수한다는 것을 가정한다면, 미디어를 세 가지 그룹으로 나누어 생각할 수 있습니다:\n\n<div class=\"content-ad\"></div>\n\n- 신뢰할 만한 출처 정보를 갖춘 미디어는 미디어의 생성 및 수정의 연대기에 대한 맥락을 제공하며 디지털 서명에 의한 암호 보증이 일부 제공됩니다.\n- 출처 데이터에 수정 또는 모순이 감지되는 미디어(예: 순수 알고리즘 미디어의 원본을 디지털 캡처로 대체하거나 수정된 타임스탬프 또는 배우 식별자의 경우와 같이 언급된 경우). 관심 있는 또는 숙련된 관찰자에게 변조가 명백하게 드러나고, 그런 후, 그들 스스로 미디어의 정당성에 대한 결론을 내릴 것입니다.\n- 출처 정보가 전혀 없는 미디어는 그 출처에 대해 확신하기 어렵고, 우리는 확률적 기법에 의존하여 그 신빙성을 결정하려고 합니다.\n\n기자, 미디어 기관 및 소셜 플랫폼은 이러한 범주의 발행에 대해 서로 다른 기준을 적용할 수 있습니다. 첫 번째로, 그들은 증명의 요구를 매우 신뢰할 만한 것으로 다룰 수 있습니다. 둘째로, 그 반대로 할 수 있습니다.\n\n세 번째로, 이러한 기관들은 위험 허용성, 배우들의 신임성 및 생성적 미디어를 감지하려는 도구의 결과를 기반으로 기자적인 결정을 내려야 할 것입니다. 법정에서 제시된 증거, 교실에서 사용된 미디어, 그리고 다른 맥락에서도유사한 고려사항이 해당됩니다.\n\n이것이 어떻게 전개될지, 그리고 어떤 위험이 있는지 아직 일러 알 수 없습니다. 그러나 이 사양 및 그 흐름이 온라인 공간에서 미디어 출처의 검증을 표준으로 만드는 데 중요한 역할을 할 수 있다고 보입니다. 산업의 충분한 약속과 지원이 제공된다면,이 시스템은 미디어 출처 투명성을 온라인 공간의 표준으로 만드는 잠재력을 지닙니다.\n\n<div class=\"content-ad\"></div>\n\nCAI는 광범위한 산업 관심을 받고 있지만, 이러한 출처 규격을 활용하기 위해 산업 전반에서 어떤 구체적인 기술적 약속이 이뤄질지 기다리고 있습니다.","ogImage":{"url":"/assets/img/2024-06-19-VerifyingtheOriginofMediainanAlgorithmicWorld_0.png"},"coverImage":"/assets/img/2024-06-19-VerifyingtheOriginofMediainanAlgorithmicWorld_0.png","tag":["Tech"],"readingTime":12},{"title":"Masa와 Batchingai가 협력하여 Masa Oracle 데이터를 그들의 AI 창작 미술, NFT 플랫폼으로 가져옵니다","description":"","date":"2024-06-19 04:06","slug":"2024-06-19-MasaandBatchingaiPartnertoBringMasaOracleDatatotheirAIGenerativeArtNFTPlatform","content":"\n\n<img src=\"/assets/img/2024-06-19-MasaandBatchingaiPartnertoBringMasaOracleDatatotheirAIGenerativeArtNFTPlatform_0.png\" />\n\n안녕하세요! 맛사가 한국의 AI 생성 예술 NFT 프로젝트인 Batching.ai와 협업했다는 소식을 전해드립니다. Batching.ai는 맛사 오라클을 통합하여 사용자의 소셜 프로필에서 데이터를 수집하고, 이를 재미있고 창의적인 AI 생성 예술 및 NFT로 변환할 예정입니다.\n\nBatching.ai의 고급 AI 이미지 생성 기술은 이미지의 다양성 생성뿐만 아니라, 기존 NFT 이미지를 활용하여 파생 작품을 쉽게 만들 수 있습니다. Batching.ai의 기술을 활용하면 사용자와 프로젝트 모두가 다른 플랫폼보다 더 빠르게 컬렉션을 만들고 문화를 확장하며 홍보 자산을 개발할 수 있습니다.\n\n맛사의 데이터 오라클은 Twitter, Discord, Telegram 등의 플랫폼에서 소중한 사용자 데이터를 수집 및 집계합니다. 맛사의 데이터 오라클을 통해 실시간 구조화된 데이터에 액세스할 수 있으며, 다양한 AI 응용 프로그램에 사용할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n이제 Batching.ai가 Masa Data Oracle을 통합함으로써 사용자와 창작자들은 소셜 프로필에서 집계된 사용자 데이터를 기반으로 창조적 AI 아트를 쉽게 만들고 즉시 NFT로 전환할 수 있게 될 것입니다. Masa AI Data Oracle은 또한 사용자의 관심사, 소셜 행동 및 온라인 활동을 캡처하여 Batching.ai에서 동적 이미지를 생성하는 데 사용할 수 있습니다.\n\n이 혁신적인 파트너십을 통해 사용자들은 즉시 사용자 맞춤형 아트 및 NFT, 밈을 만들고 관련 있는 문화적 순간을 포착할 수 있게 될 것입니다. MidJourney와 같은 플랫폼들이 제공하는 창조적인 AI 아트가 대세를 이루고 있지만, 여전히 깊은 개인 맞춤 요소가 부족합니다.\n\n우리는 창조적인 AI 아트 제작의 가능성을 한 층 더 높였습니다. 당신의 디지털과 소셜 풋프린트를 저장하는 Masa의 Data Oracle을 활용함으로써 Batching.ai는 NFT 창작의 새로운 르네상스를 이끌고 있습니다. 사용자에 의해 영감을 받은 아트로 경제적 이익을 얻을 수 있게 하면서, 맞춤형, 재미있고 매력적인 콘텐츠 제작을 이전보다 쉽게 해주고 있습니다.\n\n여기서 Batching.ai에 대해 더 알아보세요: [여기](https://www.batching.ai)\n\n<div class=\"content-ad\"></div>\n\n# Masa Community에 참여해보세요! 👨‍🚀\n\n웹사이트 | 디스코드 | 텔레그램 | 트위터","ogImage":{"url":"/assets/img/2024-06-19-MasaandBatchingaiPartnertoBringMasaOracleDatatotheirAIGenerativeArtNFTPlatform_0.png"},"coverImage":"/assets/img/2024-06-19-MasaandBatchingaiPartnertoBringMasaOracleDatatotheirAIGenerativeArtNFTPlatform_0.png","tag":["Tech"],"readingTime":2},{"title":"파이썬 가드레일로 LLM 출력 신뢰도 향상하기","description":"","date":"2024-06-19 04:03","slug":"2024-06-19-ImproveLLMOutputReliabilitywithPythonGuardrails","content":"\n\n![이미지](/assets/img/2024-06-19-ImproveLLMOutputReliabilitywithPythonGuardrails_0.png)\n\n# IF문을 잘 활용하면 LLM의 출력물을 믿을 수 있는 수준으로 향상시킬 수 있어요\n\nLLM은 창의력과 복잡한 작업 해결에 뛰어나지만 엄격한 규칙을 따르는 데 어려움을 겪기도 하며 종종 설정된 범위를 약간 넘어서 답변을 제공하기도 합니다. 앱을 개발할 때 이러한 주의사항은 사용자들이 퇴장하게 만들 수 있는 실패와 터무니없는 답변으로 이어질 수 있습니다.\n\n좋은 소식은 엄격한 규칙을 작성하는 것이 모든 프로그래머의 기본 역량이며, 지금 LLM과 함께 작업하고 있다고 해서 IF문을 사용하는 방법을 잊은 것은 아니라는 점입니다.\n\n<div class=\"content-ad\"></div>\n\n# LLM 라스트마일 배송 문제\n\n출력을 제어하는 것은 특히 LLM을 API와 같은 앱의 다른 구성 요소와 통합할 때 중요합니다. 사용자 평면 요구 사항의 설명을 검색 매개변수로 변환하는 text_to_params 도구를 작업하는 동안, API 함수와 호환되지 않는 결과 매개변수를 생성하는 것을 깨달았습니다.\n\n전체 API 문서에 액세스할 수 있고 매개변수의 90% 이상을 올바르게 한 상태에서도 여러 매개변수 중 하나가 완전히 답을 망가뜨리는 경우가 있었습니다. 이러한 예시 중 일부는 가격 단위를 혼동하여 price_per_meter를 total_price로 오해하거나 숫자 필터에 m2와 같은 단위를 추가하거나, 가격 태그에서 월세임을 시사하는데도 판매 제안을 찾는 경우 등이 있었습니다.\n\n이러한 모든 경우를 처리하고 1,000 토큰 이상을 추가한 사용자 입력을 조작하는 데 많은 시간을 들인 후, 몇 가지 유효성 검사 함수를 사용하여 이러한 것들을 Python에서 더 효율적으로 처리할 수 있음을 깨달았습니다.\n\n<div class=\"content-ad\"></div>\n\n이 이야기는 생산 준비가 된 LLM-파워 앱을 구축하는 시리즈 중 두 번째 이야기입니다. 권장사항으로 프롬프트 최적화에 대한 팁을 확인하시기를 권장합니다.\n\n# Python 가드레일을 사용하는 장점은 다음과 같습니다.\n\n- 프롬프트 크기를 크게하지 않고도 엣지 케이스 처리\n- 다른 응용 프로그램과의 마일지저호환성 보장\n- 예상치 못한 사용자 동작에 대응하는 LLM 앱 만들기\n- 성능 향상 및 더 작은 모델 사용 가능\n\n텍스트-투-파라미터 도구 예제를 이어가면, 특히 까다로운 질문 세트에 대한 도구 정확도를 가드레일을 추가하거나 제거하여 비교하는 실험을 실행했습니다.\n\n<div class=\"content-ad\"></div>\n\n## 모델별 검색 매개변수 정확도\n\n![이미지](/assets/img/2024-06-19-ImproveLLMOutputReliabilitywithPythonGuardrails_1.png)\n\n# LangChain에서 Python을 LLM 호출과 혼합하는 방법\n\nLangChain을 사용하면 LLM 호출, 출력 구문 분석 및 일반 Python 함수를 모두 RunnableSequence로 결합하여 편리하게 결합할 수 있습니다. RunnableSequence는 사실상 대부분의 체인의 기초입니다.\n\n<div class=\"content-ad\"></div>\n\n아래 예시 코드에서는 사용자 요구 사항을 필터와 함께 사전으로 변환하는 간단한 텍스트-to-params 도구에 초점을 맞추었습니다. Python을 사용하여 LLM 출력을 변환하는 것은 구조화된 JSON 출력과 함께 작업할 때 가장 효율적입니다. 그러나 동일한 접근 방식은 텍스트 응답(예: 분류기와 같은 작은 NLP 모델 사용)에도 활용할 수 있습니다.\n\n```js\nfrom langchain_core.output_parsers import JsonOutputParser\nfrom langchain.prompts import ChatPromptTemplate\nfrom langchain.chat_models import ChatOpenAI\n\nllm = ChatOpenAI(openai_api_key=OPENAI_API_KEY, temperature=0, model=\"gpt-4o\")\n\nprompt = \"\"\"\nSYSTEM\ndescription을 key:value 쌍으로 필터 매개변수로 변환합니다.\n허용된 필터 특징: [`area_min`, `area_max`, `price_min`, `price_max`]\n\n답변은 유효한 $JSON_BLOB이어야하며 다음과 같이 표시됩니다:\n\n```\n{\n  \"filters\": $FOUND_FILTERS,\n}\n\n\n시작! 항상 유효한 json blob로 응답해야 함을 상기시킵니다.\n\n새 메시지\n{input}\n\n(무엇이든 JSON blob으로 응답할 것을 상기시킵니다)\n\n\"\"\"\n\nprompt = ChatPromptTemplate.from_template(prompt)\n\ndef search_params_guardrails(tool_output: dict) -> str:\n    min_sale_price = 100000\n    filters = tool_output.get(\"filters\", {})\n    \n    if 'price_max' in filters.keys():\n        price_threshold = filters[\"price_max\"]\n        filters[\"offer_type\"] = 'sale' if price_threshold >= min_sale_price else 'rent'\n        \n    return {\"filters\":filters}\n\n\n샘플 코드의 첫 번째 부분에서는 OpenAI 모델, Prompt Template, JsonOutputParser(지시사항과 함께 유효한 JSON을 얻는 데 도움을 주는) 및 다른 LLM이 설정한 기타 필터에 기초하여 `offer_type` 필드를 추가하는 기본 api_params_guardrail 기능을 준비합니다.\n\n```js\nchain_text_to_params = prompt | llm | JsonOutputParser() | search_params_guardrails\n```\n\n<div class=\"content-ad\"></div>\n\n그럼 체인을 구성하여 준비된 구성 요소의 실행 순서를 정의합니다. 각 구성 요소는 이전 단계의 출력을받고 처리를 유지하여 체인 끝에 최종 결과를 제공합니다.\n\n![Chain Configuration](/assets/img/2024-06-19-ImproveLLMOutputReliabilitywithPythonGuardrails_2.png)\n\n체인을 설정하고 나면 invoke를 사용하여 호출할 수 있습니다. 입력으로 필요한 속성의 유형을 설명합니다. 이 간단한 프롬프트는 텍스트에서 정보를 올바르게 추출뿐만 아니라 해당 정보를 유효한 사전으로 파싱하고 함수를 기반으로 offer_type 매개변수를 추가했습니다.\n\n# 파이썬 함수를 사용한 LLM 결과 개선의 실용적 예제 3가지\n\n<div class=\"content-ad\"></div>\n\n안녕하세요! 저는 한국어로 번역을 도와드리는 인공지능입니다.\n\n제가 준비한 텍스트를 파라미터로 변환하는 도구에 몇 가지 속임수를 추가했습니다. 이러한 속임수들은 더 신뢰할 수 있고 호환성이 있는 LLM 출력물을 생성하는 데 도움이 되었습니다.\n\n## 1. LLM은 너무 리터럴할 수 있으므로 답변에 조금의 지혜를 더해보세요.\n\n처음 LLM 앱을 테스트하기 시작하면, 처음 프롬프트가 모든 이상한 사용자 쿼리와 경계 케이스를 다루지 않았거나 LLM이 일부 도메인 지식을 놓친 것에 빨리 깨닫게 됩니다.\n\nMieszko를 작업 중인 동안 직면한 문제 중 하나는 사용자 요구 사항을 검색 필터 JSON으로 변환하는 도구가 너무 리터럴하다는 것이었습니다.\n\n<div class=\"content-ad\"></div>\n\n예를 들어, 사용자가 50m2 정도의 면적을 가진 아파트를 3500-3600 zł의 예산 내에서 찾고 싶다고 설명한다면, LLM은 다음 필터를 생성했습니다:\n\n```js\nsearch_filters = {\n  \"price\": {\"min\": 3500, \"max\": 3600}, \n  \"area\": {\"min\": 50, \"max\": 50}\n}\n```\n\n이 필터들이 논리적으로는 잘못되지 않았지만, 사용자는 월 3200 zł에 55m2 아파트를 보는 것에 대해 훨씬 더 기뻤을 것입니다. 그래서 필터들은 다음과 같이 변경되어야 합니다:\n\n```js\nsearch_filters = {\n  \"price\": {\"max\": 3600}, \n  \"area\": {\"min\": 45, \"max\": 55}\n}\n```\n\n<div class=\"content-ad\"></div>\n\n저는 프롬프트에 더 많은 지침을 추가해 봤지만, 수십 가지 검색 매개변수와 대부분의 매개변수에 사용자 정의 유효성 검사 규칙이 있는 경우 몇 백개의 토큰이 추가될 것입니다. 도구 출력물을 수정하여 동일한 결과가 더 안정적으로 생성되도록 단순한 가드레일 함수를 추가했습니다.\n\n이제 두 가지 문제에 국한된 코드 예제를 제공해 드리겠습니다:\n\n```js\ndef search_params_guardrails(params):\n    # 'price'가 있는 경우, 'min'과 'max' 모두가 있는지 확인하고, min이 max의 20% 이하인 경우 min 임계값 제거\n    if 'price' in params and all(key in params[\"price\"] for key in ['min', 'max'])\n        if (params['price']['max'] - params['price']['min']) / params['price']['max'] <= 0.20:\n          del params['price']['min']\n    \n    # 'area'가 있는 경우, 'min'과 'max' 모두가 있는지 확인하고, min과 max가 동일한 경우 min은 0.9배로, max는 1.1배로 확장\n    if 'area' in params and all(key in params[\"area\"] for key in ['min', 'max'])\n        if params['area']['min'] == params['area']['max']:\n            params['area']['min'] *= 0.9\n            params['area']['max'] *= 1.1\n    \n    return params\n```\n\n## 2.퍼지 매치가 수십 가지 카테고리를 선택해야 하는 지시를 대체할 수 있는지 여부를 검증하세요.\n\n<div class=\"content-ad\"></div>\n\n검색 매개변수 도구를 구축하는 동안 한 가지 사소한 문제가 더 발생했습니다. 범주형 필드를 처리하는 것이었습니다. 'offer_type'과 같이 가능한 레이블이 'sale' 또는 'rent'만 있는 필드가 있으면 쉽게 프롬프트 지시사항에 적합하게 맞출 수 있습니다.\n\n그러나 더 많이 세분화된 필드로 넘어가면 상황이 복잡해집니다. 제 경우에는 와르샤와의 지역(18개 인스턴스) 및 동(143개 인스턴스)이었습니다. 이러한 모든 레이블을 프롬프트에 추가하면 1,058개의 토큰이 추가되어 매 호출당 1센트의 비용이 들게 될 것입니다. GPT 4-터보를 사용할 때 또한 마찬가지입니다.\n\nGPT 3.5조차도 와르샤의 지리에 대한 기본적인 이해가 있기 때문에 프롬프트에 모든 이 정보를 제공할 필요가 없습니다. 가장 중요한 문제는 때로는 철자가 달라지거나 사용자 입력에서 직접 복사된 오류 또는 약어가 있는 경우였습니다.\n\n지역과 동이 검색 API에서 사용 가능한 값과 호환되도록 하기 위해 처음엔 퍼지 매치를 사용하여 LLM 세트 매개변수를 선별된 목록으로 제한했고, 실제로 모든 허용된 레이블을 프롬프트를 통해 제공하지 않았습니다.\n\n<div class=\"content-ad\"></div>\n\n## 알려진 유효 라벨 세트에 대해 범주형 라벨을 검증하는 간소화된 퍼지 매치 코드입니다.\n\n```js\nfrom fuzzywuzzy import process\nimport json\n\ndef fuzzy_match(label: str, allowed_labels:list, score_cutoff=90, allowed_len_diff = 3):\n    best_match = process.extractOne(label, allowed_labels, score_cutoff=score_cutoff)\n    if best_match and abs(len(best_match[0]) - len(label)) > allowed_len_diff:\n        # 모호한 일치를 피하기 위해 더 큰 길이 차이가 있는 매치 제거\n        best_match=None\n        \n    return best_match[0] if best_match else None\n\ndef validate_category_feature(labels: list, allowed_labels:list)->list:\n    labels_val = [fuzzy_match(label, allowed_labels) for label in labels]\n    labels_val = [item for item in labels_val if item is not None] \n    \n    return labels_val\n\ndef validate_category_filters(params:dict, cat_features: list)->dict:   \n    # 각 cat_feature에 대한 허용된 라벨 목록이 포함된 json 경로로 변경\n    path = \"allowed_labels_per_feature_map.json\" \n    with open(path, \"r\") as f:\n        allowed_labels_per_feature = json.load(f)\n        \n    for feature in cat_features:\n        allowed_labels = allowed_labels_per_feature[feature]\n        labels = params.get(feature, [])\n        if labels:\n            labels_val = validate_category_feature(labels, allowed_labels)\n            if labels_val:\n                params[feature] = labels_val\n\n\n    return params\n```\n\n이 접근 방식은 지리적 영역에만 적용되지 않으며, 전자 상거래에서 브랜드나 모델을 선별하는 등 다른 영역에도 구현할 수 있습니다. 이는 다음과 같이 더 넓은 범위의 가드레일 집합으로 구현할 수 있습니다.\n\n```js\ndef search_params_guardrails(params):\n  ... 이전 로직\n  # 범주형 필터가 API 허용 값을 준수하는지 확인\n  params = validate_category_filters(params, [\"district\", \"subdistrict\"])\n\n  ... 후속 로직\n\n  return params\n```\n\n<div class=\"content-ad\"></div>\n\n## 3. 제한적인 필터를 완화함으로써 실패한 API 호출을 재시도하세요\n\n마지막 마일 배송 문제의 또 다른 부분은 LLMs가 사용자의 요청에 가능한 한 많은 필터를 맞추려고 하는 경향이 있다는 것입니다. 예를 들어, 사용자가 저렴한 가격대 내에서 편안한 아파트를 요청했을 때, LLM은 샤워, 욕조, 식기 세척기, 발코니 등 모든 편의 시설을 추가해야 한다고 판단할 수 있습니다. 저렴한 가격 요구 사항과 결합하여 API 호출에 전달되는 최종 필터가 제로 집합으로 끝날 수 있습니다.\n\n모델이 매개변수 설정을 재시도할 기회를 주더라도 이는 다른 LLM 호출을 의미하며 이로 인해 비용과 대기 시간이 증가합니다. 대신, 나는 가장 제한적인 필터 세트를 순차적으로 제외하면서 API 호출을 재시도하기로 결정했습니다. 그렇게 하면 결국 유효한 답변을 얻을 수 있을 거라는 희망을 품게 되었습니다.\n\n```js\ndef get_offers_count_with_loosening_filters(params):\n\n    # 빈 응답일 경우 삭제할 선택적 필터 목록\n    optional_filters = [\"interior_standard\", \"amenities\", \"building_type\", \"build_year\", \"market\"]\n    valid_response = False\n    dropped_filters = {}\n\n    while True:\n        # 선택된 필터 내에서 활성 제공 건 수에 대한 정보를 반환하는 API 호출\n        offer_json, valid_response = call_api(params)\n\n        if valid_response:\n            available_offers = offer_json.get(\"unique_offers_pool\", 0)\n\n            output = f\"{available_offers}개의 제공 건이 발견되었습니다. 다음 필터와 일치합니다: {params}\"\n\n            if dropped_filters:\n                output += f\", 그러나 이 요구 사항에 맞는 {dropped_filters} 필터를 제외해야 합니다.\"\n\n            return output\n\n        else:\n           \n            if not optional_filters:\n                # 모든 선택적 필터를 소진했을 경우 예외 발생\n                return f\"{params}와(과) 일치하는 제공 건을 찾을 수 없습니다. 사용 가능한 제공 건을 찾으려면 필터링을 덜 엄격하게 설정하세요.\"\n            else:\n                # params에서 한 개의 선택적 필터를 제거하고 다시 시도합니다.\n                dropped_filter = optional_filters.pop(0)\n                if dropped_filter in params:\n                    dropped_filters[dropped_filter] = params.pop(dropped_filter, None)\n```\n\n<div class=\"content-ad\"></div>\n\n이 함수가 모든 출력을 완전한 문장으로 반환하는 것을 알 수 있습니다. LLM 에이전트가 사용하는 전체 텍스트-파라미터 도구를 통해 대화 형식의 설명과 함께 도구 출력이 반환되면 에이전트 추론에 더 쉽게 구현할 수 있습니다. 검색 가능하게 만들기 위해 삭제된 필터의 명확한 설명은 에이전트가 최종 사용자에게 설명하는 데 도움이 됩니다.\n\n# 요약\n\n전망 가능한 미래에도 빠른 LLM 개발에도 불구하고, 그들은 에너지 비용과 각 답변을 처리하는 데 많은 시간이 필요한 대형 생물체로 남아있을 것입니다. 필요한 곳에서 이 파워를 활용하되 가능한 경우 간단하고 검증된 솔루션으로 돌아가도 두려워하지 마세요. 이러한 접근 방식에 대해 행성과 당신의 지갑이 감사할 것입니다.\n\n이 글은 효율적이고 신뢰할 수 있는 LLM 기반 앱을 구축하는 실용적인 팁에 중점을 둔 시리즈의 일부입니다. 새로운 글이 게시될 때 알림을 받으려면 제 프로필을 구독하세요.\n\n<div class=\"content-ad\"></div>\n\n## 시간 내어 주셔서 감사합니다!","ogImage":{"url":"/assets/img/2024-06-19-ImproveLLMOutputReliabilitywithPythonGuardrails_0.png"},"coverImage":"/assets/img/2024-06-19-ImproveLLMOutputReliabilitywithPythonGuardrails_0.png","tag":["Tech"],"readingTime":10},{"title":"데이터 과학, NLP 및 대형 언어 모델에 대한 직관적인 통찰력","description":"","date":"2024-06-19 04:02","slug":"2024-06-19-IntuitiveInsightsintoDataScienceNLPandLargeLanguageModels","content":"\n\n## 데이터 과학, 기계 학습, 자연어 처리 및 대형 언어 모델의 핵심 간소화\n\n![이미지](/assets/img/2024-06-19-IntuitiveInsightsintoDataScienceNLPandLargeLanguageModels_0.png)\n\n- 소개\n- 섹션 1: 데이터 과학과 기계 학습의 직관\n  - 데이터 과학이란 무엇인가?\n  - 기계 학습의 기본\n- 섹션 2: 자연어 처리(NLP) 이해\n  - NLP란 무엇인가?\n  - 주요 NLP 작업\n  - NLP 모델의 진화\n- 섹션 3: 대형 언어 모델(LLMs) 소개\n  - LLMs란 무엇인가?\n  - 주요 특성\n  - 트랜스포머\n  - 인기 있는 LLMs\n- 섹션 4: 주요 개념 심층 탐구\n  - 임베딩\n  - 유사성 측정\n  - 파인튜닝\n  - 프롬프트 엔지니어링\n  - 에이전트\n- 결론\n- 참고 및 추가 독서\n\n# 소개\n\n<div class=\"content-ad\"></div>\n\n저희 초보자를 위한 데이터 과학, 기계 학습 및 관련 개념 안내에 오신 것을 환영합니다. 이 글은 검색 증강 생성 (RAG)과 같은 고급 주제를 더 잘 이해하기 위해 필요한 기본 지식을 제공합니다. 이 분야에 처음 접하셨거나 간단한 짧은 복습이 필요한 경우라면, 이 가이드를 통해 중요한 개념을 쉽고 직관적인 방법으로 이해하는 데 도움이 됩니다.\n\n# 섹션 1: 데이터 과학과 기계 학습의 직관\n\n## 데이터 과학이란?\n\n데이터 과학은 통계, 컴퓨터 과학 및 영역 지식을 결합하여 데이터에서 통찰을 추출하는 분야입니다. 범죄를 해결하는 대신에, 데이터 과학자는 데이터 내에 숨겨진 패턴과 트렌드를 발견합니다. 데이터 과학자는 조직이 정보에 기반한 결정을 내릴 수 있도록 데이터를 수집, 정제, 분석하고 시각화합니다.\n\n<div class=\"content-ad\"></div>\n\n## 기계 학습의 기본 사항\n\n기계 학습은 데이터 과학의 하위 집합으로, 우리는 컴퓨터에게 데이터에서 배우도록 가르칩니다. 명시적으로 프로그램 규칙을 작성하는 대신 컴퓨터에게 데이터를 공급하고 자체적으로 패턴을 찾게 합니다.\n\n- 피쳐와 레이블: 피쳐는 입력 변수(나이, 키 등)이고, 레이블은 출력 변수(누군가의 몸무게 예측과 같은)입니다.\n- 학습과 테스트: 데이터를 학습 및 테스트 세트로 나눕니다. 학습 세트는 모델을 가르치는 데 사용되고, 테스트 세트는 그 성능을 평가하는 데 사용됩니다.\n\n기계 학습의 종류:\n\n<div class=\"content-ad\"></div>\n\n- 지도 학습: 모델이 라벨이 붙은 데이터에서 학습합니다. (예: 과거 데이터를 기반으로 한 집 값 예측)\n- 비지도 학습: 모델이 라벨이 없는 데이터에서 패턴을 찾습니다. (예: 고객을 다른 세그먼트로 클러스터링하는 것)\n- 강화 학습: 모델이 시행착오를 통해 학습하며 올바른 행동에 대해 보상을 받습니다. (예: 로봇에 미로를 탐험시키는 것)\n\n## 섹션 2: 자연어 처리(NLP) 이해하기\n\n### NLP란 무엇인가요?\n\n자연어 처리(NLP)는 컴퓨터와 사람 간의 상호 작용에 초점을 맞춘 인공지능 분야입니다. 이는 컴퓨터에게 사람의 언어를 이해하고 생성할 수 있도록 가르치는 것을 의미합니다.\n\n<div class=\"content-ad\"></div>\n\n## 중요한 NLP 작업\n\n토큰화: 텍스트를 개별 단어나 토큰으로 분리하는 작업입니다.\n어간 추출과 표제어 추출: 단어를 그들의 기본 형태나 어간으로 줄이는 작업입니다 (예: \"running\"을 \"run\"으로).\n개체명 인식 (NER): 텍스트에서 이름, 날짜, 위치 같은 엔티티를 식별하는 작업입니다.\n품사 태깅 (POS): 문장 내 각 단어에 명사, 동사와 같은 품사를 할당하는 작업입니다.\n\n## NLP 모델의 진화\n\n전통적인 모델: 초기 NLP 모델은 n-그램과 TF-IDF와 같은 기법을 사용했으며, 이는 주로 수동 제작된 규칙과 통계적 방법에 의존했습니다.\n현대적인 모델: 요즘 NLP는 딥러닝을 활용합니다. Word2Vec와 GloVe와 같은 모델은 단어 임베딩을 만들어냅니다 (단어의 벡터 표현), 반면에 BERT와 GPT는 문맥을 더 효과적으로 이해하기 위해 트랜스포머를 사용합니다.\n\n<div class=\"content-ad\"></div>\n\n# 섹션 3: 대규모 언어 모델 (LLM) 소개\n\n## LLM이란?\n\n대규모 언어 모델(LLM)은 방대한 양의 텍스트 데이터로 훈련된 고급 모델입니다. 이러한 모델은 놀라운 정확도로 텍스트를 생성하고 이해할 수 있습니다.\n\n## 주요 특성\n\n<div class=\"content-ad\"></div>\n\n문맥 이해력: 이전 모델과는 달리 LLM은 단어가 사용된 문맥을 이해하여 더 정확한 결과를 제공합니다.\n다재다능함: 번역부터 텍스트 생성까지 다양한 작업을 수행할 수 있습니다.\n\n## 트랜스포머\n\n트랜스포머는 대부분의 현대 LLM의 중추를 이룹니다. 자기 주의 메커니즘(self-attention)을 도입하여 문장에서 다양한 단어의 중요성을 가중 평가하여 예측을 수행할 수 있게 했습니다.\n\n자기 주의 메커니즘: 이것은 모델이 입력 텍스트의 관련 부분에 집중하여 문맥을 더 잘 이해할 수 있게 합니다.\n혜택: 트랜스포머는 고도로 병렬화되며 RNN(순환 신경망)과 같은 이전 아키텍처보다 텍스트의 장거리 종속성을 더 잘 처리할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n## 인기있는 LLMs\n\nGPT (Generative Pre-trained Transformer): 일관된 문맥과 관련된 텍스트를 생성하는 능력으로 유명합니다.\n\nBERT (Bidirectional Encoder Representations from Transformers): 문장 속 단어들의 문맥을 이해하는 데 능숙하여, 질문응답 및 감성 분석과 같은 작업에 탁월합니다.\n\nT5 (Text-To-Text Transfer Transformer): 모든 NLP 작업을 텍스트 대 텍스트 형식으로 변환하므로, 다양한 응용 분야에 대해 매우 다재다능하고 효과적입니다.\n\n<div class=\"content-ad\"></div>\n\n# 섹션 4: 주요 개념 심층 탐색\n\n## 임베딩\n\n임베딩은 단어나 문장의 의미와 맥락을 포착한 수치적 표현입니다. 비슷한 단어들이 가까이 모여 있는 다차원 공간에서의 좌표로 생각해보세요.\n\n![임베딩 이미지](/assets/img/2024-06-19-IntuitiveInsightsintoDataScienceNLPandLargeLanguageModels_1.png)\n\n<div class=\"content-ad\"></div>\n\n어떻게 사용되나요: 임베딩은 유사도 측정, 클러스터링, 및 분류와 같은 다양한 NLP 작업에 사용됩니다.\n\n## 유사성 측정\n\n유사성 측정은 두 개의 텍스트가 얼마나 비슷한지를 결정하는 데 도움을 줍니다. 일반적인 측정 방법으로는 다음이 있습니다:\n\n코사인 유사도: 두 벡터 사이의 각도의 코사인을 측정합니다. 벡터가 같은 방향을 가리킨다면 코사인 유사도는 1입니다.\n유클리드 거리: 공간에서 두 점 사이의 직선 거리를 측정합니다. 작은 거리는 더 높은 유사성을 나타냅니다.\n\n<div class=\"content-ad\"></div>\n\n## 세밀한 조정\n\n세밀한 조정은 사전 훈련된 모델을 가져와서 작은 과제별 데이터 세트를 사용하여 특정 작업에 적응하는 과정입니다. 이를 통해 모델은 사전 훈련 중에 얻은 방대한 지식을 활용하면서 새로운 작업에 특화됩니다.\n\n사전 훈련 대 세밀한 조정: 사전 훈련은 일반 교육과 같으며, 세밀한 조정은 특정 작업을 위한 전문 훈련과 같습니다.\n실제 예시: 감성 분석을 위한 BERT 세밀한 조정 또는 사용자 지정 텍스트 생성을 위한 GPT 세밀한 조정.\n\n## 프롬프트 엔지니어링\n\n<div class=\"content-ad\"></div>\n\n프롬프트 엔지니어링은 언어 모델로부터 원하는 결과를 얻기 위한 입력을 만드는 것을 의미합니다. 가장 좋은 성능을 얻기 위해 질문이나 지시 사항을 제공하는 올바른 방법을 찾는 것이 중요합니다.\n\n프롬프트 유형: 직접적인 질문, 지시 사항 또는 예시.\n효과적인 프롬프트 디자인: 명확하고 구체적인 언어를 사용하고, 문맥을 제공하며 때로는 모델을 안내할 예시를 포함합니다.\n\n## 에이전트\n\n에이전트는 NLP 및 기타 AI 기술을 사용하여 자율적으로 작업을 수행하는 시스템입니다.\n\n<div class=\"content-ad\"></div>\n\n에이전트 유형: 챗봇, 가상 어시스턴트, 추천 시스템.\n에이전트 구축: 상호 작용 흐름 설계, 관련 데이터에 대한 교육, 사용자와 상호 작용할 수 있는 환경에 배포 포함됩니다.\n도전 과제: 정확성 보장, 모호한 입력 처리, 대화에서 맥락 유지하기.\n\n# 결론\n\nRAG와 같은 고급 주제로 물들기 전에 데이터 과학, 기계 학습, NLP 및 LLMs의 기본을 이해하는 것이 중요합니다. 이러한 기본 개념은 RAG가 어떻게 작동하는지와 그 중요성을 이해하는 데 필요한 배경을 제공합니다.\n\n# 참고 자료 및 추가 독서\n\n<div class=\"content-ad\"></div>\n\n일반 데이터 과학 및 기계 학습:\n\n- [스탠포드 대학의 데이터 과학 입문](https://datascience.stanford.edu/) \n- [구글의 기계 학습 총정리](https://developers.google.com/machine-learning/crash-course)\n- [분류 모델이 작동하는 방식 이해하기](https://towardsdatascience.com/classification-lets-understand-the-basics-78baa6fbff48)\n\n자연어 처리 (NLP):\n\n- [파이썬에서의 강력한 자연어 처리 - spaCy 문서](https://spacy.io/usage/projects) \n- [Jalammar의 Illustrated Transformer](https://jalammar.github.io/illustrated-transformer/)\n- [스탠포드 대학의 NLP 강좌: 대화형 에이전트 구현하기](https://web.stanford.edu/class/cs224n/)\n\n<div class=\"content-ad\"></div>\n\n대형 언어 모델 (LLMs):\n\n- [OpenAI 블로그: GPT-3 공개](https://openai.com/news/)\n- [Google AI 블로그: BERT - 언어 이해를 위한 깊고 양방향 트랜스포머에 대한 프리 트레이닝 공개](https://blog.research.google/2018/11/open-sourcing-bert-state-of-art-pre.html)\n- [Colin Raffel 등에 의한 텍스트-투-텍스트 전송 트랜스포머 (T5)](https://arxiv.org/pdf/1910.10683)\n\n구체적인 개념:\n\n- [단어 임베딩 설명 - Towards Data Science](https://towardsdatascience.com/a-guide-to-word-embeddings-8a23817ab60f)\n- [코사인 유사도 - 위키백과](https://en.wikipedia.org/wiki/Cosine_similarity)\n- [트랜스포머로 파인 튜닝 - Hugging Face](https://huggingface.co/docs/transformers/en/training)\n- [대형 언어 모델을 위한 좋은 프롬프트 작성 방법 - Hugging Face](https://huggingface.co/docs/transformers/en/tasks/prompting)\n- [챗봇의 종류 - Chatbots Magazine](https://chatbotsmagazine.com/the-complete-beginner-s-guide-to-chatbots-8280b7b906ca)","ogImage":{"url":"/assets/img/2024-06-19-IntuitiveInsightsintoDataScienceNLPandLargeLanguageModels_0.png"},"coverImage":"/assets/img/2024-06-19-IntuitiveInsightsintoDataScienceNLPandLargeLanguageModels_0.png","tag":["Tech"],"readingTime":6},{"title":"파이-3와 Azure PDF 데이터 추출  ExtractThinker","description":"","date":"2024-06-19 04:00","slug":"2024-06-19-Phi-3andAzurePDFDataExtractionExtractThinker","content":"\n\nPDF 및 이미지에서 구조화된 데이터를 추출하는 것은 어려울 수 있지만, 광학 문자 인식 (OCR)과 언어 모델 (LLMs)을 결합하면 강력한 솔루션을 제공할 수 있습니다. Azure 생태계 내에서 문서 지능 서비스를 활용하면 문서를 분석할 때 좋은 선택이 될 것입니다.\n\n이 글에서는 Azure AI 스튜디오의 Phi-3 미니 모델을 활용하여 데이터 추출 프로세스를 개선하는 방법을 보여드리겠습니다. Phi-3 미니 모델은 38억 개의 매개변수를 가진 작은 언어 모델(SML)로 효율적이고 정확한 결과를 제공하여 이 작업에 이상적인 선택지입니다. 이 예제는 Azure에 중점을 두고 있지만, 이와 유사한 도구를 사용하여 다른 제공업체에서도 적용할 수 있는 원칙을 다룹니다.\n\n해당 솔루션은 다른 클라우드 제공업체에도 쉽게 복제되며, 비슷한 품질, 가격, 기능을 제공합니다.\n\n# OCR 선택하기 - Azure 문서 지능\n\n<div class=\"content-ad\"></div>\n\nAzure Document Intelligence은 Microsoft 생태계에 속하는 OCR 제품입니다. 가격 측면에서는 아래 이미지에서 볼 수 있듯이 세 가지 계층으로 나뉩니다:\n\n![이미지](/assets/img/2024-06-19-Phi-3andAzurePDFDataExtractionExtractThinker_0.png)\n\n\"read\"는 단락과 필기 텍스트만 추출합니다. 기본적으로 전통적인 OCR입니다. 대부분의 문서 추출에는 충분하지만 복잡한 문서에는 부족할 수 있습니다.\n\n\"prebuilt\" 레이아웃은 작업에 가장 적합한 선택지이며 나머지는 LLM이 처리합니다. 이 옵션에는 영수증, 송장, 신분증, W-2 등 여러 템플릿이 있지만, 표와 확인란과 같은 구조를 강조해야 하는 추출이 필요합니다. 이를 위해 \"prebuilt-layout\"을 문서 유형으로 사용할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n마지막으로 가장 비싼 옵션은 \"사용자 정의\" 레이아웃입니다. 시스템에 공급될 문서 및 추출해야 할 필드에 따라 교육되어야 합니다. LLM 분야의 발전을 고려할 때, 이 기사에서 설명된 대로 폐기되고 수행되어야 합니다.\n\n# Azure Ai studio의 Phi-3\n\nPhi-3는 Microsoft의 주력 모델 그룹입니다. 그들은 작고 OpenAI에서 다루지 않는 시장 점유율을 차지하고 있습니다. OpenAI는 세계 최고의 모델을 제공하는 데 빛을 발합니다.\n\n![이미지](/assets/img/2024-06-19-Phi-3andAzurePDFDataExtractionExtractThinker_1.png)\n\n<div class=\"content-ad\"></div>\n\n허깅 페이스에 대한 이 모델 요약에 따르면, 이 모델은 3.3조 토큰을 학습했습니다. 이 작은 모델은 추출 및 분류와 같은 작업에 우수한 결과를 제공할 수 있습니다. 게다가 각 클래스는 컨텍스트 창 옵션을 제공합니다: 4k 컨텍스트 창과 128k 컨텍스트 창이 있습니다. 이 경우 약간 낮은 품질과 약간 높은 비용의 상충이 있습니다. \"토큰 당 유연한 요금제\" 모델의 가격은 다음과 같습니다:\n\n![이미지](/assets/img/2024-06-19-Phi-3andAzurePDFDataExtractionExtractThinker_2.png)\n\n먼저, 이 기사 발행 당시 \"유연한 요금제\"에 비전 모델이나 작은 모델이 포함되어 있지 않습니다. 위 이미지에 표시된 모델만 사용할 수 있지만, 전용 머신에 호스팅해야 합니다.\n\n그러나 가격은 중요합니다. 요금 측면에서 미니 모델은 GPT 3.5 터보의 50% 비용이 들며, 위의 벤치마크 결과에 따르면 영어 기반 텍스트에서 비슷한 성능을 발휘합니다. 왜냐하면 Mixtral 7x8B는 GPT 3.5 (이전 버전)과 비슷한 성능을 보였기 때문입니다. 중간 모델은 GPT 3.5 터보와 비슷한 비용을 가지며 영어 기반 텍스트에서 약간 더 나은 성과를 내지만, 다른 언어에는 적합하지 않습니다. 따라서 사용 사례 분리는 다중 언어에 적합한 경우 \"GPT 3.5 터보를 선택하는 것이 좋을 것\"입니다.\n\n<div class=\"content-ad\"></div>\n\n# 코드 구현\n\n전체 예시는 여기에서 찾을 수 있지만, 이 섹션에서는 코드가 어떻게 작동하는지에 대해 자세히 설명해 드릴 것입니다. 이 예시는 Azure와 Phi-3에 초점을 맞추고 있지만, 다른 구성 요소를 사용할 때도 유사하게 작동합니다.\n\n## 내부 작동 방식\n\n<img src=\"/assets/img/2024-06-19-Phi-3andAzurePDFDataExtractionExtractThinker_3.png\" />\n\n<div class=\"content-ad\"></div>\n\n위 이미지는 ExtractThinker가 여러 조각들과 함께 작동하는 방법을 보여줍니다. Azure DI는 이 예에서 \"Layout\"를 문서 유형으로 사용하여 라인, 테이블 및 확인란과 같은 구조를 가진 콘텐츠를 추출합니다. 이는 데이터 매핑할 때 모델에 추가 정보를 제공합니다. 추출기 구성 요소는 그런 다음 모델 메시지에 삽입될 프롬프트를 생성합니다. 이는 비전 모델이며 이미지도 결과를 증가시키기 위해 추가할 수 있습니다.\n\n아래는 ExtractThinker에 이를 아카이빙하는 방법입니다:\n\n```js\nsubscription_key = os.getenv(\"AZURE_SUBSCRIPTION_KEY\")\nendpoint = os.getenv(\"AZURE_ENDPOINT\")\napi_key = os.getenv(\"AZURE_AI_API_KEY\")\n\nextractor = Extractor()\nextractor.load_document_loader(\n    DocumentLoaderAzureForm(subscription_key, endpoint)\n)\n\nllm = LLM(model=\"azure/Phi-3-mini-128k-instruct\",\n          api_base=\"https://Phi-3-mini-128k-instruct-qjsac-serverless.swedencentral.inference.ai.azure.com\",\n          api_key=api_key,\n          api_version=\"v1\")\n\nextractor.load_llm(llm)\n\ncontent = extractor.extract(\"path\\\\driverLicense.jpg\", InvoiceContract)\n```\n\n## 확장성\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-19-Phi-3andAzurePDFDataExtractionExtractThinker_4.png)\n\n추출 관점에서 고전적인 문서는 운전면허증, 매매 계약서, 송장 등이 될 수 있습니다. 이러한 문서들은 보통 작거나 한두 장 정도이므로 이미지에서 보듯이 크기가 다른 두 모델을 최적화하여 흐름을 조정할 수 있습니다. 4k 창을 초과하는 문서의 일부 (예: 5%)가 작성될 경우, 다음 코드를 사용하여 창을 초과할 경우 예외 처리를 할 수 있습니다:\n\n```js\ndef router():\n    model_list = [\n        {\n            \"model_name\": \"azure/Phi-3-mini-4k-instruct\",\n            \"litellm_params\": {\n                \"model\": \"azure/Phi-3-mini-4k-instruct\",\n                \"api_base\": os.getenv(\"AZURE_API_BASE\"),\n                \"api_key\": os.getenv(\"AZURE_API_KEY\")\n            },\n        },\n        {\n            \"model_name\": \"azure/Phi-3-mini-128k-instruct\",\n            \"litellm_params\": {\n                \"model\": \"azure/Phi-3-mini-128k-instruct\",\n                \"api_base\": os.getenv(\"AZURE_API_BASE\"),\n                \"api_key\": os.getenv(\"AZURE_API_KEY\")\n            }\n        },\n    ]\n\n    # 라우터 구성 정의\n    router = Router(\n        model_list=model_list,\n        default_fallbacks=[\"azure/Phi-3-mini-128k-instruct\"],\n        context_window_fallbacks=[\n            {\"azure/Phi-3-mini-4k-instruct\": [\"azure/Phi-3-mini-128k-instruct\"]},\n        ],\n        set_verbose=True\n    )\n\n    return router\n```\n\n# 추출용 미니 모델, 분류용 중간 모델\n\n\n<div class=\"content-ad\"></div>\n\n문서 및 페이지의 분류에 관련된 경우, 더 큰 모델을 사용하는 것이 좋습니다 (중간). 이 모델에 대한 입력 비용은 미니 모델의 출력보다 저렴합니다 ($0.5 대 $0.8 당 MT), 그리고 출력물은 몇 개의 토큰일 것입니다 (예: 출력물은 \"송장(Invoice)\"이라는 1에서 3개의 토큰을 포함할 수 있습니다).\n\n다음은 코드입니다:\n\n```js\n# 분류\n분류들 = [\n    Classification(name=\"운전 면허증(Driver License)\", description=\"이것은 운전 면허증입니다\"),\n    Classification(name=\"송장(Invoice)\", description=\"이것은 송장(Invoice)입니다\"),\n]\n\n추출기 = Extractor()\n추출기.load_document_loader(DocumentLoaderAzureForm(subscription_key, endpoint))\n\nllm = LLM(model=\"azure/Phi-3-medium-4k-instruct\",\n          api_base=\"https://Phi-3-medium-4k-instruct-qjsac-serverless.swedencentral.inference.ai.azure.com\",\n          api_key=\"...\",\n          api_version=\"v1\",)\n\n추출기.load_llm(llm)\n\n결과 = 추출기.classify_from_path(\"경로\\\\운전면허증.jpg\", 분류들)\n```\n\n# 비용 절감\n\n<div class=\"content-ad\"></div>\n\n비용을 절약할 때 맞춤형 모델과 비교해야 합니다. 어떤 계약도 추출에 사용할 수 있기 때문에 결과는 개발 비용을 고려하지 않고 훈련된 모델의 결과와 유사해야 합니다. 대부분의 과중한 작업은 LLM이 수행하기 때문입니다.\n\n[이미지](/assets/img/2024-06-19-Phi-3andAzurePDFDataExtractionExtractThinker_5.png)\n\n숫자는 여유를 두고 보수적으로 유지되어, \"맞춤형\" 레이아웃과 비교할 수 있도록 했습니다. 가능한 최대한 비용을 낮추는 것이 목표라면 \"문서 유형\"을 \"읽기\"로 설정하고 phi-3 mini 가격을 사용하여 $2를 초과하지 않을 수 있습니다.\n\n# 결론\n\n<div class=\"content-ad\"></div>\n\nAzure Document Intelligence 및 Phi-3 모델을 결합하여 PDF 및 이미지에서 구조화된 데이터를 효율적으로 추출할 수 있어요. 이 과정은 광학 문자 인식(OCR)을 사용하여 텍스트와 문서 구조를 인식하고, 언어 모델(LLMs)을 활용하여 관련 데이터를 정확하게 추출하는 것을 포함합니다.\n\n이 방법은 문서 추출을 위한 Azure의 미리 구축된 레이아웃과 처리를 위한 Phi-3 미니 모델을 활용하여 비용 효율적이고 효율적인 결과를 도출합니다.\n\n확장 가능한 솔루션을 구현하고 대체 매커니즘을 활용하여 다양한 문서 유형 및 크기를 신뢰성 있게 처리할 수 있어요.","ogImage":{"url":"/assets/img/2024-06-19-Phi-3andAzurePDFDataExtractionExtractThinker_0.png"},"coverImage":"/assets/img/2024-06-19-Phi-3andAzurePDFDataExtractionExtractThinker_0.png","tag":["Tech"],"readingTime":7},{"title":"미세 조정에 대한 깊이 있는 탐구","description":"","date":"2024-06-19 03:55","slug":"2024-06-19-ADeepDiveintoFine-Tuning","content":"\n\n## \"컴포트 존\"을 벗어나는 것 - LLM에 대한 도메인 적응 접근 방식에 대한 심층 탐구 3/3\n\n![이미지](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_0.png)\n\n특정 도메인이나 사용 사례에 대한 대형 언어 모델 (LLMs)의 도메인 적응을 탐색하고 계십니까? 이 3부작 블로그 시리즈에서는 도메인 적응의 동기에 대해 설명하고 이를 수행하는 다양한 옵션에 대해 깊이 파고들었습니다. 또한 인기있는 트레이드오프를 다루는 도메인 적응 여정을 마스터할 수 있는 상세 안내서가 제공됩니다.\n\n부분 1: 도메인 적응 소개 - 동기, 옵션, 트레이드오프\n부분 2: 컨텍스트 학습에 대한 심층 탐구\n부분 3: 파인튜닝에 대한 심층 탐구 - 여기 있습니다!\n\n<div class=\"content-ad\"></div>\n\n참고: 모든 이미지는 별도로 언급되지 않는 한 저자가 제공했습니다.\n\n# 복습\n\n이 블로그 시리즈의 이전 부분에서는 인컨텍스트 학습의 개념을 탐색하여 대형 언어 모델(Large Language Models, LLMs)의 \"쾌적 영역\" 제한을 극복하는 강력한 방법으로 다뤘습니다. 이러한 기술이 어떻게 사용될 수 있는지, 작업을 변환하고 모델의 전문 분야로 이동하여 성능 향상 및 Helpfulness, Honesty, Harmlessness와 같은 주요 설계 원칙과의 일치를 도모하는 방법에 대해 논의했습니다. 이번 세 번째 부분에서는 두 번째 도메인 적응 접근 방법인 파인튜닝으로 주목을 기울일 것입니다. 파인튜닝의 세부 사항을 탐구하면서, 모델의 \"쾌적 영역\"을 확장하고 특정 도메인 및 작업에 적응시켜 성능을 향상시킬 수 있는 방법에 대해 알아볼 것입니다. 프롬프트 엔지니어링과 파인튜닝 사이의 트레이드오프에 대해 논의하고, 데이터 속도, 작업 모호성 및 기타 고려 사항과 같은 요소에 기반하여 언제 어느 접근 방식을 선택해야 하는지에 대한 안내를 제공할 것입니다.\n\n# 트랜스포머 101\n\n<div class=\"content-ad\"></div>\n\n최첨단 LLM은 대부분 트랜스포머 아키텍처에 기반을 두고 있어요. 이 아키텍처는 2017년 Vaswani 등이 제안한 이후, 자연어 처리 분야를 혁명시킨 깊은 신경망 아키텍처의 가족입니다. 이 아키텍처 패밀리의 핵심 차별점은 콘텍스트에서 사용된 단어나 자연어의 더 큰 조각의 의미를 포착하는 데 뛰어난 \"어텐션\" 개념입니다.\n\n트랜스포머 아키텍처는 두 가지 근본적으로 다른 구성 요소로 구성되어 있어요. 한쪽에는 \"인코더\" 블록이 있어 자연어의 의미를 이른바 문맥화된 임베딩으로 번역하는 데 집중합니다. 이는 벡터 공간에서의 수학적 표현입니다. 인코더 모델은 이러한 벡터 표현을 하위 결정론적 또는 확률적 작업인 분류 문제, NER 또는 의미 검색과 같은 곳에서 활용하는 데 특히 유용합니다. 반면, 디코더 블록은 다음 토큰 예측에 훈련되어 있어, 재귀적으로 사용될 경우 텍스트를 생성할 수 있는 능력을 가지고 있습니다. 이 블록은 텍스트 생성에 의존하는 모든 작업에 사용될 수 있어요. 이러한 구성 요소는 서로 독립적으로 사용할 수 있지만, 조합해서 사용할 수도 있습니다. 오늘날 생성적 AI 분야에서 언급되는 대부분의 모델이 디코더 전용 모델입니다. 그래서 이 블로그 글은 이 유형의 모델에 초점을 맞출 거예요.\n\n\n![ADeepDiveintoFine-Tuning](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_1.png)\n\n\n# E2E 파인 튜닝 파이프라인\n\n<div class=\"content-ad\"></div>\n\nFine-tuning은 LLaMA2와 같은 기본 모델에 특정 분야 전문성을 효율적으로 주입하기 위해 전이 학습을 활용합니다. 이 과정은 도메인별 데이터에 대한 모델의 가중치를 업데이트하면서 전체 네트워크 구조를 변경하지 않는 방식으로 이루어집니다. 대규모 데이터셋과 컴퓨팅 파워가 필요한 전체 사전 학습과는 달리, fine-tuning은 매우 샘플 및 컴퓨팅 효율적입니다. 전체적으로, 이 과정은 다음 단계로 분해될 수 있습니다:\n\n![Fine-Tuning Phases](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_2.png)\n\n- 데이터 수집과 선택: 모델에 투입될 전용 데이터 집합을 신중하게 선택해야 합니다. 더불어, fine-tuning 목적에 따라 데이터가 아직 사용 가능하지 않을 수 있으며 목적에 맞게 수집되어야 합니다. 데이터의 양적 또는 질적 특성이 다른 경우도 있습니다. 또한 데이터 품질과 함께 데이터 소스, 기밀성 및 지적 재산권, 라이선스, 저작권, 개인 식별 정보 등의 측면을 고려해야 합니다.\n\nLLM 사전 학습은 일반적으로 웹 스크랩 및 정돈된 말뭉치를 활용합니다. fine-tuning은 도메인 적응 방식으로 데이터셋이 주로 조직, 지식 또는 작업 특정 도메인의 레이블 또는 미레이블 데이터로 구성되어 있다는 것을 의미합니다.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_3.png\" />\n\n이 데이터는 다양한 곳에서 수집될 수 있습니다(문서 저장소, 사람이 작성한 콘텐츠 등). 미세 조정을 위해서는 품질에 대해 신중하게 선택하는 것이 중요하지만 위에서 언급한 것처럼 기밀 유지 및 지적 재산권(IP), 라이센스, 저작권, 개인 식별 정보(PII) 등과 같은 주제를 고려해야 합니다.\n\n<img src=\"/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_4.png\" />\n\n또 다른 중요한 차원은 훈련 데이터 집합을 라벨이 지정된(labeled) 및 지정되지 않은(unlabeled) 부분(선호도 포함)으로 분류하는 것입니다. 도메인 적응 미세 조정은 라벨이 지정되지 않은 텍스트 데이터가 필요합니다(그림 4를 참조하십시오). 다시 말해, 관련 콘텐츠와 충분한 품질로 간주되는 어떤 자연어의 전문 문서를 사용할 수 있습니다. 실제 사용 사례에 따라 사용자 매뉴얼, 내부 문서 또는 심지어 법적 계약서 등이 될 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n한편, 명시적으로 레이블이 지정된 데이터셋인 지시-맥락-응답 데이터셋과 같은 것들은 지도 미세 조정 방법에 사용될 수 있습니다. 최근에는 모델을 실제 사용자 피드백에 맞추기 위한 강화 학습 방법이 큰 성과를 보여주며, 이는 인간 또는 기계가 생성한 선호 데이터를 활용합니다. 예를 들어, 이진 인간 피드백(좋아요/싫어요)이나 다중 응답 순위와 같은 것들이 있습니다.\n\n레이블이 지정되지 않은 데이터와는 달리, 레이블이 지정된 데이터셋은 특히 규모와 충분한 도메인 전문 지식을 갖추기 위해서 수집하기 어렵고 비용이 많이 듭니다. HuggingFace Datasets와 같은 오픈 소스 데이터 허브는 레이블이 지정된 데이터셋에 대한 좋은 소스일 수 있습니다, 특히 적절한 인간 인구 그룹의 광범위한 부분이 동의한 지역에서(예: 레드팀에 대한 독성 데이터셋)이고, 오픈 소스 데이터셋을 사용하여 모델의 실제 사용자 선호도를 대변할 수 있습니다.\n\n그럼에도 불구하고, 많은 사용 사례는 보다 구체적이며 오픈 소스 프록시 데이터셋만으로 충분하지 않습니다. 실제 인간들이 레이블을 지정한 데이터셋이 필요한 경우도 있습니다. Amazon SageMaker Ground Truth와 같은 도구를 사용하면, 완전히 관리되는 사용자 인터페이스 및 워크플로 또는 전체 직원을 제공함으로써 데이터 수집을 돕을 수 있습니다.\n\n최근에는 합성 데이터 수집이 미세 조정 분야에서 점점 더 중요해지고 있습니다. 강력한 LLM(Large Language Model)을 사용하여 레이블이 지정된 데이터셋을 합성적으로 생성하는 것이 실제로 이루어지고 있습니다. 이는 SFT 또는 선호 정렬을 위한 것일 수 있습니다. 이 방법은 이미 유망한 결과를 보여주었지만, 현재로선 추가적인 연구가 더 필요하며, 실무에서 규모에 맞게 유용함을 입증해야 합니다.\n\n<div class=\"content-ad\"></div>\n\n- 데이터 전처리: 선택한 데이터는 하류 학습 알고리즘에게 \"잘 소화될 수 있도록\" 전처리 되어야 합니다. 인기 있는 전처리 단계는 다음과 같습니다:\n  - 품질 관련 전처리, 예를 들어 포맷 지정, 중복 제거, PII 필터링\n  - 섬세한 조정 접근 방식 관련 전처리: 예를 들어 감독형 섬세 조정을 위한 프롬프트 템플릿으로 랜더링\n  - NLP 관련 전처리, 예를 들어 토큰화, 임베딩, 쪼개기 (문맥 창에 따라)\n- 모델 학습: 선택한 섬세 조정 방식에 따라 딥 뉴럴 네트워크를 학습합니다. 아래에서 자세히 논의할 인기 있는 섬세 조정 방식은 다음과 같습니다:\n  - 계속된 사전 훈련, 즉 도메인 적응 섬세 조정: 풀 텍스트 데이터에 대한 훈련, 다음 토큰 예측 작업과 연동된 정렬\n  - 감독형 섬세 조정: 레이블된 데이터를 활용한 섬세 조정 접근 방식, 타깃 레이블로 정렬\n  - 선호도 정렬 접근 방식: 선호 데이터를 활용한 섬세 조정 접근 방식, 모델/시스템의 실제 사용자가 정의한 원하는 동작과 일치시킴\n\n이어서 단계별로 자세히 살펴보겠습니다. 학습 접근 방식과 다양한 섬세 조정 접근 방식 소개부터 데이터셋 및 데이터 처리 요구사항으로 이동하기 전에 시작해보겠습니다.\n\n# 학습\n\n이 섹션에서는 디코더 트랜스포머 모델을 학습하는 방법을 탐구합니다. 이는 사전 학습과 섬세 조정 모두에 적용됩니다.\n레이블이 지정되지 않은 데이터로 비지도 학습이나 레이블이 지정된 데이터로 지도 학습과 같은 전통적인 ML 학습 방식과 달리, 트랜스포머 모델의 학습은 자가지도 학습이라고 불리는 혼합 접근 방식을 활용합니다. 이는 레이블이 지정되지 않은 텍스트 데이터가 공급되더라도, 알고리즘이 실제로는 특정 입력 토큰을 가림으로써 내재적으로 자기 감독하고 있기 때문입니다. 아래의 입력 토큰 시퀀스 \"Berlin is the capital of Germany.\"을 고려하면, 이는 y가 가려진 토큰이고 X가 나머지인 지도 학습 예제로 이어집니다.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_5.png\" />\n\n위에서 언급한 자가 지도 학습 접근 방식은 모델 가중치를 언어 모델링(LM) 특정 손실 함수로 최적화합니다. 인코더 모델 훈련은 무작위로 토큰을 마스킹하여 양방향 컨텍스트를 활용하는 마스킹 언어 모델링(MLM)을 사용하며, 디코더 전용 모델은 시퀀스의 가장 오른쪽 토큰을 항상 마스킹하여 단방향 컨텍스트를 가지는 인과 언어 모델링(CLM) 방식으로 매핑됩니다. 간단히 말하면, 이는 이전의 의미적 문맥을 바탕으로 이후 토큰을 예측하는 방식으로 자가 회귀적으로 훈련된다는 것을 의미합니다. 이외에도 순열 언어 모델링(PLM)과 같은 다른 LM 접근 방식이 있으며, 해당 방식은 모델을 사용하여 무작위로 섞인 토큰 시퀀스를 정렬된 순서로 되돌리도록 조건부화하는 것입니다.\n\n<img src=\"/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_6.png\" />\n\nCLM 작업을 대리로 사용하여 예측과 실제 값이 생성되며, 이를 사용하여 예측 손실을 계산할 수 있습니다. 따라서 모델 어휘 전체의 토큰에 대한 예측 확률 분포는 그라운드 트루스인 실제 값과 비교되며, 실제 값을 나타내는 토큰에 대한 확률이 1.0인 희소 벡터입니다. 사용한 실제 손실 함수는 특정 모델 아키텍처에 따라 다르지만, 토큰 예측과 같은 범주형 문제 공간에서 잘 작동하는 교차 엔트로피나 헷갈림 손실과 같은 손실 함수가 일반적으로 사용됩니다. 손실 함수는 깊은 신경망 역전파에 의한 경사 하강을 수행하여 매 반복할 때마다 손실을 점진적으로 최소화하고 모델 가중치를 우리의 교육 목표로 최적화하는 데 활용됩니다.\n\n<div class=\"content-ad\"></div>\n\n# 세밀한 조정 변형 - 시나리오\n\n이론에는 식상하니, 실전으로 넘어가 봐요. 생물기술 분야의 기관으로 가정해보겠습니다. COVID-19 백신 연구를 중심으로 다양한 NLP 사용 사례를 위한 기반 모델로 LLM을 활용하려고 하는 중입니다. 불행하게도 이 도메인은 표준 제공형 사전 훈련된 LLM의 \"편안한 영역\"에 포함되지 않아 예상 수준 이하의 성능을 낸다고 하네요. 다음 섹션에서 우리가 상상한 시나리오에서 LLaMA2의 성능을 기대 이상으로 끌어올리는 데 도움을 줄 수 있는 다양한 세밀한 조정 방법에 대해 논의해볼 거예요.\n\n# 세밀한 조정 변형 - 계속된 사전 훈련인 도메인 적응 세밀한 조정\n\n제목이 나타내는 대로, 이 분야가 \"계속된 사전 훈련\"이라는 용어로 수렴하려고 하는 가운데, 이 섹션에서 논의되는 세밀한 조정 방법에 대한 명확한 용어는 아직 커뮤니티에서 합의되지 않은 상태입니다. 그렇다면 이 세밀한 조정 방법이 정확히 어떤 것을 의미하는 걸까요?\n\n<div class=\"content-ad\"></div>\n\n바이오테크 분야의 연구 논문들은 글쓰기 스타일이 꽤 독특하며, 도메인 특화 지식과 산업 또는 기관 별 약어가 가득합니다 (예: Polack et al, 2020; Figure 7 참조).\n\n![Figure 7](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_7.png)\n\n반면에, 메타 LLaMA 모델의 사전 훈련 데이터 혼합물의 자세한 조사(Touvron et al., 2023; Figure 8)와 TII Falcon 모델 패밀리(Almazrouei et al., 2023; Figure 9)는 2.5% 및 2%만큼 일반용도의 LLMs가 연구 또는 심지어 바이오테크 도메인의 데이터를 매우 적게 포함하고 있음을 나타냅니다 (LLaMA 3 패밀리의 사전 훈련 데이터 혼합물은 블로그 게시 시점에 공개되지 않았습니다).\n\n![Figure 8](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_8.png)\n\n<div class=\"content-ad\"></div>\n\n![2024-06-19-ADeepDiveintoFine-Tuning_9.png](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_9.png)\n\n따라서, 이와 같은 차이를 줄이기 위해 파인 튜닝을 활용하여 모델의 \"편안 영역\"을 확대하여 구체적인 작업에 대한 성능을 향상시켜야 합니다. 지속적인 사전 훈련은 정확히 위에서 언급한 차원에서 뛰어난 성과를 보여줍니다. 이것은 특정 데이터 집합에 대해 미리 훈련된 LLM의 매개변수 지식에 모델의 반응을 조정하기 위해 도메인별 정보 (도메인별 언어, 약어 등) 또는 원시 전문 텍스트에 암시적으로 포함된 정보와 같은 도메인별 정보를 주입하기 위한 기술로, 평문 텍스트 데이터로 구성된 특정 데이터 집합에 대해 미리 훈련된 LLM을 조정하는 과정을 포함합니다. 이 접근 방식에서 사전 훈련된 디코더 모델은 레이블이 없는 텍스트 데이터를 사용하여 다음 토큰 예측을 위해 파인 튜닝됩니다. 이로써 미지의 텍스트 데이터를 사용한 지속적인 사전 훈련은 사전 훈련에 가장 유사한 파인 튜닝 접근 방식이 됩니다.\n\n우리의 예시에서는, 언급된 논문의 내용과 유사한 분야의 관련 문헌을 결합하여 연결된 텍스트 파일로 변환할 수 있습니다. 튜닝 목표 및 기타 요구 사항에 따라 필요없는 콘텐츠(예: 저자, 목차 등)의 제거, 중복 데이터 제거, 또는 PII 감소와 같은 데이터 정리 단계를 적용할 수 있습니다. 마지막으로, 데이터 집합은 모델 훈련에 사용되기 전에 일부 NLP-특정 전 처리(예: 토큰 분리, 컨텍스트 창에 따른 청킹 등 -위 참조-)을 거칩니다. 훈련 자체는 이전 장에서 논의된 것과 같이 전통적인 CLM 기반 훈련입니다. 바이오테크 도메인의 연구 논문 집합에 계속된 사전 훈련을 통해 LLaMA2를 조정한 후, 이제 해당 도메인에서 이를 \"BioLLaMA2\" 텍스트 완성 모델로 활용할 수 있습니다.\n\n# 파인 튜닝 변형 — 감독된 파인 튜닝 (SFT)\n\n<div class=\"content-ad\"></div>\n\n안타깝게도, 우리 사람들은 해결하고 싶은 문제를 순수한 텍스트 완성/토큰 예측 형태로 제시하는 것을 선호하지 않아요. 대화를 선호하며, 특히 일을 처리하고자 할 때에는 수다스럽거나 지시적인 행동을 하는 경향이 있는 사람들이랍니다.\n\n그래서 모델이 간단한 다음 토큰 예측을 넘어서도 미래를 예측할 때에는 약간의 세련된 요소가 필요해요. 여기서 감독된 세밀 조정 방식이 등장해요. 감독된 세밀 조정(SFT)은 사전 훈련된 LLM을 특정 데이터셋과 레이블이 지정된 예제들과 일치시키는 과정을 말해요. 이 기술은 모델의 응답을 특정 도메인이나 작업(예: 상기한 대화적 성격 또는 지시 따름)에 맞게 조정하는 데 중요하답니다. 대상 응용 프로그램을 잘 대표하는 데이터셋으로 학습함으로써, SFT는 LLM이 심층적인 이해를 개발하고 전문적인 요구 사항과 행동에 부합하는 더 정확한 출력물을 생산할 수 있게 해줘요.\n\n상기한 것들 외에도, 좋은 SFT의 예시는 Q&A 모델의 훈련, 개체 인식과 같은 데이터 추출 작업, 또는 해로운 응답을 방지하는 레드팀 활동 등이 있을 수 있어요.\n\n![이미지](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_10.png)\n\n<div class=\"content-ad\"></div>\n\n위에서 이해한 대로, SFT에는 레이블이 지정된 데이터셋이 필요합니다. 오픈 소스에는 일반 목적의 레이블이 지정된 데이터셋이 많이 있지만, 모델을 귀하의 특정 사용 사례, 산업 또는 지식 도메인에 가장 적합하게 맞추기 위해 사용자 정의 데이터셋을 수동으로 작성하는 것이 의미가 있을 수 있습니다. 최근에는 Claude 3나 GPT-4와 같은 강력한 LLM을 사용하여 이러한 데이터셋을 만드는 접근 방식이 인간 레이블링 대안으로 발전되어왔습니다.\n\n\"dolly-15k\" 데이터셋은 Databricks 직원들에 의해 수동으로 만들어진 인기 있는 일반 목적의 오픈 소스 명령어 미세 조정 데이터셋입니다. 이 데이터셋에는 명령문과 문맥이 원하는 응답과 함께 레이블이 지정된 대략 15,000개의 예시가 포함되어 있습니다. 이 데이터셋은 우리의 BioLLaMA2 모델을 지시어를 따르는 작업, 예를 들어 닫힌 Q&A 작업에 맞게 조정하는 데 사용될 수 있습니다. 지시어를 따르는 SFT를 위해, 데이터셋의 각 항목을 전체 텍스트 프롬프트로 변환하고, 모델을 맞추고자하는 작업을 나타내는 프롬프트 구조에 포함하여 진행할 것입니다. 이는 다음과 같이 보일 수 있습니다:\n\n```js\n### 명령:\n{item.instruction}\n### 문맥:\n{item.context}\n### 응답:\n{item.response}\n```\n\n프롬프트 템플릿은 모델 패밀리에 따라 다양할 수 있으며, 일부 모델은 해시태그보다 HTML 태그나 다른 특수 문자를 선호할 수 있습니다. 이 절차는 데이터셋의 각 항목에 대해 적용되며, 모든 항목이 큰 텍스트 조각으로 연결되기 전에 수행됩니다. 최종적으로 위에서 설명한 NLP 특정 전 처리 후, 이 파일은 다음 토큰 예측을 활용하여 모델로 훈련될 수 있으며, CLM 기반의 훈련 목표를 사용할 것입니다. 이 특정 프롬프트 구조에 지속적으로 노출되므로 모델은 그에 따라 작동하고 해당 방식으로 행동하는 것을 배울 것입니다 — 이 경우에는 지시어를 따릅니다. BioLLaMA2를 dolly-15k 데이터셋에 맞춘 후, BioLLaMA2-instruct 모델은 프롬프트를 통해 제출된 지시를 철저히 따를 것입니다.\n\n<div class=\"content-ad\"></div>\n\n# 파인튜닝 변형 — 인간 선호도 조정 기술 (RLHF/PPO, DPO, KTO, ORPO)\n\nBioLLaMA2와 함께, 우리는 생물 기술 연구 영역에 적합한 모델을 가지고 있으며, 사용자가 기대하는 대로 편리하게 우리의 지시에 따릅니다. 하지만 기다려봐 — 모델이 실제 사용자와 일치하는 것일까? 지금까지 논의된 파인튜닝 접근 방식의 핵심 문제가 돋보입니다. 사용한 데이터셋은 우리가 사용자가 좋아하거나 필요로 한다고 생각하는 것의 대리인입니다: 선별된 연구 논문에서의 내용, 언어, 머리글, 그리고 일부 Databricks 직원들이 제작한 dolly-15k의 원하는 지시 행동과 같은 것들입니다. 이는 사용자 중심의 제품 개발 개념과 대비됩니다. 이는 기민한 제품 개발의 핵심적이고 잘 수립된 원리 중 하나입니다. 실제 대상 사용자로부터 반복적으로 피드백을 받는 것이 훌륭한 제품을 개발할 때 매우 성공적이라는 것이 입증되었습니다. 사실, 사용자를 위한 훌륭한 경험을 구축하려는 경우 우리가 해야 할 일이지 않을까요!\n\n![이미지](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_11.png)\n\n이를 염두에 두고, 연구자들은 인간 피드백을 성능 향상에 통합하는 방법을 찾는 데 상당한 노력을 기울였습니다. 이에따라, 그들은 (심층적인) 강화 학습 (RL) 과 상당한 중첩이 있다는 것을 깨달았는데, 이것은 환경 내에서 행동을 수행하는 자율 에이전트들에 대한 것으로, 다음 상태를 생성하며 항상 보상과 결합됩니다. 에이전트들은 훈련 단계에서 보상을 극대화하기 위해 점진적으로 최적화된 정책이나 가치지도에 따라 행동합니다.\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_12.png)\n\n이 개념은 LLM의 세계로 프로젝션될 때 LLM 자체가 에이전트로 작용하는 것으로 이어집니다. 추론 과정에서 자동 회귀 토큰 예측의 각 단계마다 모델의 어휘가 작업 공간이고 환경은 가능한 토큰 조합이 되는 행동을 수행합니다. 새로운 추론 주기마다 새로운 상태가 형성되며, 이는 이상적으로 어떤 인간 피드백과 관련된 보상과 함께 함께합니다.\n\n이 아이디어에 기반하여 여러 인간의 선호 정렬 접근 방식이 제안되고 시험되었습니다. 다음에서는 가장 중요한 몇 가지 접근 방법에 대해 살펴보겠습니다:\n\n## 인간 피드백에 대한 강화학습 (RLHF) 및 근접 정책 최적화 (PPO)\n\n\n<div class=\"content-ad\"></div>\n\n![여기에 이미지가 있습니다](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_13.png)\n\n인간 피드백을 통한 강화 학습은 초기 창조적 AI 혹평 중요한 기술적 기반 중 하나였으며, Anthropi Claude나 GPT-3.5와 같은 대형 디코더 모델들의 위험의 동반자가 된 획기적인 성과를 거두고 사용자 맞춤 방향으로 추가적인 동기 부여를 제공했습니다. RLHF는 두 단계로 작동하며 Figures 13과 14에서 설명되어 있습니다.\n\n1단계 (Figure 13): 먼저, 실제 RL을 통한 교육 접근에서 나중에 사용할 보상 모델을 훈련해야 합니다. 따라서, 목적과 일치하는 프롬프트 데이터 집합(우리의 BioLLaMA2-instruct 모델의 경우, 지시와 문맥의 쌍일 것입니다)이 모델에 공급되어 세부 조정되며, 단 하나가 아닌 두 개 이상의 추론 결과를 요청합니다. 이러한 결과는 최적화 목표에 따라 인간 레이블러에게 제공되고, 1등, 2등, 3등 등과 같이 점수 매기기를 기반으로 합니다. \"Anthropic/hh-rlhf\"와 같은 몇 가지 오픈 소스 기호 순위 데이터 집합도 있으며, 이것은 red-teaming 및 정직성 및 무해성 목표에 맞게 설계되어 있습니다. 정규화 단계와 보상 값으로의 변환 후, 보상 모델이 단일 샘플-보상 쌍을 기반으로 훈련되고, 여기서 샘플은 단일 모델 응답입니다. 보상 모델 아키텍처는 일반적으로 세부 값으로 잠재 공간을 투사하는 정보 대신 토큰에 대한 확률 분포가 됩니다. 그러나 이 모델의 매개 변수의 이상적인 크기는 여전히 연구 대상이며, 지난 시간에 모델 제공 업체에 의해 다양한 접근 방식이 선택되어 왔습니다.\n\n![여기에 이미지가 있습니다](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_14.png)\n\n<div class=\"content-ad\"></div>\n\n단계 2 (그림 14): 새 보상 모델을 사용하여 실제 모델을 학습하는 단계로 넘어갑니다. 따라서 해당 모델을 조정하기 위해 다른 일련의 프롬프트가 모델을 통해 공급됩니다 (도면의 회색 상자), 결과적으로 각각 하나의 응답이 생성됩니다. 이후 이러한 응답은 각각 개별 보상을 검색하기 위해 보상 모델에 공급됩니다. 그런 다음, 보상이 할당된 모델의 답변을 최대화하기 위해 Proximal Policy Optimization (PPO)이라는 정책 기반 강화 학습 알고리즘이 사용되어 모델의 가중치를 점진적으로 조정합니다. CLM과는 달리, 그라디언트 하강 대신에 이 접근 방식은 이제 목표 (보상)를 최대화하려 하기 때문에 그라디언트 상승(또는 그라디언트 하강 오버 1 − 보상)을 활용합니다. 학습 중에 모델 동작의 지나친 드리프트를 방지하기 위한 알고리즘적 안정성을 높이기 위해서 PPO와 같은 강화 학습 기반 알고리즘에 의해 야기될 수 있는 너무 큰 드리프트를 예방하기 위해 예측 변화 벌점이 보상 항에 추가되어, 초기 언어 모델의 입력 프롬프트에 대한 예측 확률 분포에서 너무 많이 벗어나는 답변을 벌한다.\n\nPPO와 함께 RLHF 이상의 다른 접근 방법이 개발되어 왔으며, 현재는 선호 정렬을 위해 가장 널리 사용되고 검증된 접근 방법입니다. 다음 몇 섹션에서는 조금 더 고급 수준으로 이러한 접근법 중 일부에 대해 자세히 살펴볼 것입니다. 이는 고급 독자를 대상으로 한 내용이므로 딥 러닝 및 강화 학습에 대한 경험 수준에 따라 직접 다음 섹션인 \"의사결정 흐름도 - 선택할 모델, 선택할 파인튜닝 경로\"로 건너뛰고자 할 수도 있습니다.\n\n## 직접 정책 최적화 (DPO)\n\n직접 정책 최적화(Direct Policy Optimization, DPO)은 RLHF에서 유래한 선호 정렬 접근 방식으로, RLHF의 두 가지 주요 약점을 해결하는 것이 목표입니다.\n\n<div class=\"content-ad\"></div>\n\n- 먼저 보상 모델을 훈련하는 것은 추가적인 자원 투자를 필요로 하며, 보상 모델의 크기에 따라 상당히 중요할 수 있습니다.\n- PPO를 사용한 RLHF의 훈련 단계는 대규모 연산 클러스터가 필요합니다. 초기 LM, 조정된 LM, 보상 모델의 3개 복제본이 저지연 설정에서 동시에 호스팅 및 조정되어야 합니다.\n- RLHF는 불안정한 절차가 될 수 있습니다 (→ 예측 변동 페널티가 이를 완화하려고 시도합니다)\n\n![image](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_15.png)\n\nDPO는 대안적인 선호 정렬 접근법으로 Rafailov 등(2023)에 의해 제안되었습니다. DPO의 주요 아이디어는 보상 모델 훈련을 건너뛰고 최종 선호 정렬 LLM을 선호 데이터에 직접 조정하는 것입니다. 이는 보상 모델의 매개변수화(보상 항목)를 손실 함수(figure 16)로 변환하는 몇 가지 수학적 수정을 적용하고 실제 보상 값들을 선호 데이터에 대한 확률 값으로 대체함으로써 달성됩니다.\n\n![image](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_16.png)\n\n<div class=\"content-ad\"></div>\n\n이는 선호도에 맞는 모델로 나아가면서 계산 및 알고리즘 복잡성을 줄입니다. 논문은 RLHF와 비교하여 성능 향상도 보여주고 있지만, 이 방법은 최근에 제안된 것이기 때문에 결과는 실질적인 증명을 필요로 합니다.\n\n## 칸먼-트벽시 최적화 (KTO)\n\nRLHF와 DPO와 같은 인간 피드백과 언어 모델을 조정하는 기존 방법들은 입력에 대해 하나가 다른 것을 선호하는 출력 쌍처럼 선호 데이터가 필요합니다. 그러나 규모별로 고품질의 선호 데이터를 수집하는 것은 현실 세계에서 어렵고 비싸며 많은 노이즈, 불일치 및 비교 불가능성으로 인해, 서로 다른 인간 평가자들이 어떤 출력이 더 나은지에 대해 상이한 견해를 가질 수 있습니다. KTO는 Ethayarajh 등에 의해 (2024) 제안된 대안적 방법으로, 간단하고 풍부한 신호와 함께 작동할 수 있는 접근법으로 소개되었습니다 — 주어진 출력이 특정 입력에 대해 바람직한지 또는 바람직하지 않은지만 알고 있으면 되며, 출력 간의 상대적인 선호를 알 필요가 없습니다.\n\n![이미지](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_17.png)\n\n<div class=\"content-ad\"></div>\n\nKTO(카네만-트버스키 최적화)는 세대의 상대적 \"좋음\"을 포착하는 보상 함수를 정의한 후, 모델을 최적화하여 카네만-트버스키 가치 함수하에서 이 보상의 기대값을 최대화하는 방식으로 작동합니다. 카네만과 트버스키의 전망 이론은 인간이 편향되었지만 명확히 정의된 방식으로 불확실한 결과에 대한 결정을 내리는 방법을 설명합니다. 이 이론은 이득에서 오목하고 손실에서 오목한 가치 함수에 의존하며, 수익과 손실을 분리하는 기준점이 존재합니다(17번 그림 참조). KTO는 선호도의 가능성을 극대화하는 것이 아니라 사람의 유틸리티 개념을 직접 최적화합니다.\n\nKTO의 주요 혁신점은 선호 가능 여부에 대한 이진 신호만 필요하다는 점입니다. 이는 전체 선호도 쌍 대신 더 데이터 효율적으로 사용할 수 있도록 합니다. 바이너리 피드백 신호는 훨씬 풍부하고 수집 비용이 저렴하기 때문에 선호도 기반 방법보다 데이터 효율적입니다(18번 그림 참조).\n\nKTO는 선호도 데이터가 부족하거나 비용이 많이 드는 상황에서 특히 유용하지만, 모델 출력의 품질에 대한 바이너리 피드백의 대량을 사용할 수 있는 경우입니다. 논문에 따르면, 모델 규모가 클 때 선호도 기반 방법인 DPO와 같은 성능을 극대화하거나 심지어 능가할 수 있습니다. 그러나 실제 환경에서 규모별로 확인되어야 합니다. KTO는 선호도 기능성을 극대화하는 것이 목표일 때 선호될 수 있습니다. 그러나 선호도 데이터가 노이즈가 적거나 추이가 없는 고 품질일 때라면 선호도 기반 방법이 여전히 더 나은 선택일 수 있습니다. KTO는 일부 경우에는 극도의 데이터 불균형을 처리하고 감독된 세밀 조정을 회피하는 측면에서 이론적 장점을 가지고 있습니다.\n\n<div class=\"content-ad\"></div>\n\n## Odds Ration Preference Optimization (ORPO)\n\nORPO의 주된 동기는 기존의 선호 정렬 방법인 RLHF 및 DPO와 같은 제한 사항을 해결하는 데에 있습니다. 이러한 방법들은 종종 별도의 지도적 세세조정(SFT) 단계, 참조 모델 또는 보상 모델이 필요합니다. 홍 등(2024)의 논문은 SFT만 사용하면 원하지 않는 스타일로 토큰을 생성할 가능성이 높아진다고 주장합니다. 교차 엔트로피 손실이 비선호하는 응답에 대해 직접적인 처벌을 제공하지 않기 때문입니다. 동시에 그들은 SFT가 강력한 선호 정렬 모델에 수렴하는 데 중요하다고 주장합니다. 이로 인해 자원을 많이 소모하는 두 단계 정렬 프로세스가 발생합니다. 이러한 단계를 결합하여 ORPO는 SFT의 도메인 적응 이점을 유지하면서 동시에 선호 정렬 접근 방식에 의해 목표로 하는 원치 않는 생성 스타일을 파악하고 완화하려고 합니다. (그림 19 참조)\n\n![image](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_19.png)\n\nORPO는 기존의 인과 언어 모델링에 연결된 손실(예: 교차 엔트로피 손실)에 오즈 비율이 기반된 처벌을 통합하는 혁신적인 선호 정렬 알고리즘을 소개합니다. ORPO의 목적 함수는 두 구성 요소로 이루어집니다: SFT 손실과 상대 비율 손실 (LOR). LOR 항목은 선호하는 응답과 비선호하는 응답을 생성하는 우도 사이의 오즈 비율을 최대화하여 모델에게 거부 응답에 높은 확률을 할당하는 것에 대한 처벌을 효과적으로 적용합니다.\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_20.png\" />\n\nORPO는 미리 학습된 언어 모델을 세부 도메인이나 작업에 적응시키면서 모델의 출력이 인간의 선호와 일치하도록 보장하고 싶을 때 특히 유용합니다. 이는 UltraFeedback 또는 HH-RLHF 데이터셋과 같이 pairwise preference 데이터셋에 액세스할 수 있는 시나리오에서 적용할 수 있습니다. 이를 염두에 둔 ORPO는 별도의 참조 모델, 보상 모델 또는 두 단계의 미세 조정 접근 방식이 필요하지 않아 RLHF 및 DPO에 대한 더 효율적이고 효과적인 대안으로 설계되었습니다.\n\n# 의사결정 플로우 차트 - 어떤 모델을 선택하고 어떤 미세 조정 경로를 선택할 것인가\n\n여러 미세 조정 접근 방식을 심층적으로 살펴본 후에 특정 요구사항에 따라 시작할 모델과 선택할 접근 방법에 대한 명확한 질문이 제기됩니다. 미세 조정 목적에 적합한 올바른 모델을 선택하기 위한 접근 방법은 두 단계 접근 방식입니다. 첫 번째 단계는 어떤 미세 조정 의도도 없는 기본 모델을 선택하는 과정과 유사하며, 다음 차원을 고려하여 보다 적합한 모델을 선택합니다(완전하지 않음):\n\n<div class=\"content-ad\"></div>\n\n- 사용할 플랫폼: 각 플랫폼은 해당 플랫폼을 통해 액세스할 수 있는 일련의 모델을 제공합니다. 이를 고려해야 합니다. 지역별 모델 가용성에 대한 차이가 있을 수 있음을 유의하십시오. 이에 대한 자세한 정보는 해당 플랫폼의 문서를 확인하시기 바랍니다.\n- 성능: 조직은 특정 작업에 최소한의 모델을 사용해야 합니다. 이에 대해 일반적인 지침은 제공되지 않지만 세밀한 조정은 모델의 성능을 크게 향상시킬 수 있습니다 (더 작은 세밀하게 조정된 모델이 더 큰 일반적인 모델보다 성능을 능가할 수 있음). 기본 모델의 평가 결과를 활용하는 것은 중요한 지표가 될 수 있습니다.\n- 예산 (TCO): 일반적으로 더 큰 모델은 더 많은 컴퓨팅 및 잠재적으로 멀티 GPU 인스턴스를 필요로 하며, 복수의 가속기에 걸쳐 교육 및 제공을 위해 이에 직접적인 영향을 미칩니다. 이는 교육 및 추론 비용, 교육 및 추론의 복잡성, 필요한 자원 및 기술 등, 모델의 전체 수명 주기 중 TCO의 일부로 고려되어야 합니다. 이는 단기 및 장기 예산 할당과 일치해야합니다.\n- 라이선스 모델: 모델마다 도메인 및 상업적 이용에 따라 라이선스 제약사항이 있습니다. 이를 고려해야 합니다.\n- 지배 체제, 윤리, 책임 있는 인공 지능: 모든 조직은 이러한 차원과 함께 규정 가이드라인을 가지고 있습니다. 모델 선택 시 반드시 고려되어야 합니다.\n\n예시: 조직은 기본 모델의 평가 결과를 바탕으로 LLaMA 2 모델을 고려하고, 기본 모델을 기반으로 한 Anthropic Claude 또는 AI21Labs Jurassic과 같은 프로프라이어터리 모델의 사용을 배제하기로 결정할 수 있습니다. 더 나아가, 그들은 이 모델의 7B-파라미터 버전만 사용하기로 결정하여 단일 GPU 인스턴스에서 교육 및 제공할 수 있도록 합니다.\n\n두 번째 단계는 실험 단계를 위해 고려해야 할 1-몇 개 모델로 초기 모델 선택을 좁히는데 관련되어 있습니다. 구체적인 접근 방식을 선택할 최종 결정은 아래 그림에서 언어 모델의 미세 조정 수명주기에 대한 원하는 진입점에 따라 달라집니다.\n\n<img src=\"/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_21.png\" />\n\n<div class=\"content-ad\"></div>\n\n따라서, 다음 차원을 고려해야 합니다:\n\n- 수행할 작업: 각각의 사용 사례는 특정 모델 동작을 요구합니다. 어떤 사용 사례에는 간단한 텍스트 완성 모델 (다음 토큰 예측)이 충분할 수 있지만, 대부분의 사용 사례에서는 수다성, 지시사항 준수 또는 다른 작업 특정 동작이 필요합니다. 이 요구 사항을 충족하기 위해 우리는 수행할 작업을 역발상하는 접근 방식을 취할 수 있습니다. 즉, 원하는 작업을 수행할 모델에 맞게 정의해야 합니다. 이는 일러스트를 기준으로 모델이 원하는 모델 동작과 일치하여 파란색, 주황색 또는 녹색 원 안에서 끝나야 함을 의미합니다. 동시에 세부 튜닝 여정을 흘러가는 흐름도의 가능한 경로와 함께 정의해야 합니다.\n- 올바른 시작점 선택 (합리적인 범위 내에서): 세부 튜닝 여정이 끝나야 할 위치에 대해 명확해져야 하지만, 해당 흐름도에서 어디서든 출발할 수 있습니다. 그러나 이는 합리적이어야 합니다 — 수백만 개의 게시된 모델이 있는 모델 허브 시대에는 다른 사람이 이미 세부 튜닝 단계를 수행했고 결과 모델을 공유한 경우 체크하는 것이 의미있을 수 있습니다.\n- 세부 튜닝은 반복적이고 재귀적인 프로세스입니다: 원하는 모델까지 여러 번의 연속적인 세부 튜닝 작업을 수행할 수 있습니다. 그러나 모델의 가중치에 무한한 양의 정보를 인코드할 수 없으므로 추월하는 것을 염두에 둬야 합니다. 이를 해소하기 위해 이 논문과 블로그에서 보여주는 LoRA와 같은 매개변수 효율 세부 튜닝 방법을 활용할 수 있습니다.\n- 특정 작업 성능 향상에 초점을 맞춤: 세부 튜닝은 특정 작업에서 모델의 성능을 향상시키기 위해 수행됩니다. 언어 패턴(도메인별 언어, 약어 등)이나 귀하의 훈련 데이터에 암시적으로 포함된 정보에서 성능 향상을 원한다면 계속해서 사전 훈련을 진행해야 합니다. 특정 작업으로의 성능 향상을 원한다면 지도 세부 튜닝을 선택해야 합니다. 모델 동작을 실제 사용자와 일치시키고자 하는 경우 인간의 선호에 맞게 조정하는 것이 올바릅니다.\n- 데이터 가용성: 훈련 데이터도 우리가 선택하는 경로에 영향을 미칠 것입니다. 일반적으로 조직은 레이블이 지정되지 않은 텍스트 데이터를 보유하고 있는 경우가 많습니다. 레이블이 지정된 데이터를 획득하는 것은 비용이 많이 들 수 있습니다. 흐름도를 통해 탐색할 때 이 차원을 고려해야 합니다.\n\n이와 같은 역발상 방식을 흘러가는 접근과 상기된 흐름도를 통해 시작할 모델과 세부 튜닝 흐름도를 따라갈 경로를 식별할 수 있습니다.\n\n좀 더 명확히 이해하실 수 있도록 두 가지 예제를 제공해 드리겠습니다:\n\n<div class=\"content-ad\"></div>\n\n![image](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_22.png)\n\n예시 1: 위의 튜닝 섹션에 설명된 예시를 따라가면, 특정 사용 사례에 맞는 가르침 모델을 형성할 수 있습니다. 그러면 실제 사용자의 선호도에 부합되며, 바이오테크 분야의 성능을 향상시키고 싶습니다. 연구 논문 형태의 레이블되지 않은 데이터가 제공됩니다. 우리는 시작점으로 LLaMA-2-7b 모델 패밀리를 선택합니다. Meta가 LLaMA-2-7b 가르침 모델을 발표하지 않았으므로, 텍스트 완성 모델인 LLaMA-2-7b-base에서 출발합니다. 그런 다음, 연구 논문 코퍼스에서 계속된 사전 훈련을 수행한 후, dolly-15k 데이터셋과 같은 오픈 소스 가르침 데이터셋에서 지도 학습 미세 조정을 수행합니다. 이로써 LLaMA-2-7B-base의 가르침으로 조정된 바이오테크 버전인 BioLLaMA-2-7b-instruct가 생성됩니다. 다음 단계에서는 모델을 실제 사용자의 선호도에 맞추고 싶습니다. 선호도 데이터셋을 수집하고 보상 모델을 훈련한 후, PPO를 사용하여 RLHF를 통해 모델을 선호도에 맞춥니다.\n\n![image](/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_23.png)\n\n예시 2: 이 예시에서는 채팅 모델을 사용하려고 합니다. 그러나 실제 사용자의 선호도에 부합되도록 조정하고 싶습니다. 시작점으로 LLaMA-2-7b 모델 패밀리를 선택합니다. Meta가 제공하는 사용자 지정 채팅 모델인 LLaMA-2-7b-chat을 시작점으로 사용할 수 있음을 알게 됩니다. 다음 단계에서는 모델을 실제 사용자의 선호도에 맞추고 싶습니다. 사용자로부터 선호도 데이터셋을 수집하고, 보상 모델을 훈련한 후 PPO를 사용하여 RLHF를 통해 모델을 선호도에 맞춥니다.\n\n<div class=\"content-ad\"></div>\n\n# 결론\n\n생성 모델 인공지능은 기업과 조직에 많은 흥미로운 사용 사례를 제공합니다. 그러나 이러한 응용 프로그램은 대개 개별 소비자용으로 레시피나 연설을 생성하는 것과 같은 것보다 훨씬 복잡합니다. 기업에서는 인공지능이 조직의 특정 도메인 지식, 프로세스 및 데이터를 이해해야 합니다. 기존 기업 시스템 및 애플리케이션과 통합되어야 합니다. 또한 다양한 직원과 역할에 맞는 맞춤형 경험을 제공하면서 안전하게 작동해야 합니다. 기업 환경에서 생성 모델 인공지능을 성공적으로 구현하려면 기술이 조직의 고유한 요구 사항에 맞게 신중하게 설계되고 맞춤화되어야 합니다. 일반적으로 공개적으로 학습된 모델을 사용하는 것만으로 충분하지 않을 것입니다.\n\n이 블로그 글에서는 도메인 적응이 모델이 \"편안한 영역\"을 벗어난 작업에 직면했을 때 이러한 갭을 메우는 데 도움이 되는 방법으로 어떻게 도메인 적응이 도움이 될 수 있는지에 대해 설명했습니다. 문맥 내 학습과 세밀한 조정을 통해 도메인 적응을 위한 두 가지 강력한 접근법에 대해 깊이 파고들었습니다. 마지막으로, 이러한 접근법 사이에서 선택할 때 고려해야 할 절충안에 대해 논의했습니다. \n\n강력한 인공지능 능력과 실제 비즈니스 요구 사항 사이의 이 갭을 성공적으로 메우는 것은 기업을 위해 생성 모델 인공지능의 궁극적인 잠재력을 발휘하는 데 중요합니다.","ogImage":{"url":"/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_0.png"},"coverImage":"/assets/img/2024-06-19-ADeepDiveintoFine-Tuning_0.png","tag":["Tech"],"readingTime":21},{"title":"LLM은 어떻게 창의적인가요","description":"","date":"2024-06-19 03:52","slug":"2024-06-19-HowareLLMscreative","content":"\n\n## LLMs의 창의성에 대한 과학 - Softmax, 온도\n\nGPT, Llama 등의 생성 모델을 사용해 보았다면 '온도'라는 용어를 만난 적이 있을 것입니다.\n\n![이미지](/assets/img/2024-06-19-HowareLLMscreative_0.png)\n\n우선, '온도'는 생성된 콘텐츠의 창의성을 제어하는 매개변수입니다.\n\n<div class=\"content-ad\"></div>\n\n하지만 기다려봐, 그건 엄청나게 소위 '너드' 같지 않나요? 처음에 이를 들었을 때 나는 분명히 멋진 물리학적 현상이 일어나고 있을 것이라고 생각했어요. 그리고 왜냐하면 대부분의 사람들이 온도와 연결짓는 것이기 때문이죠.\n\n이 게시물에서, 나는 생성모델에 대한 온도를 설명하고 특히 LLM (Large Language Models)에서의 작동 방식과 창의력을 수학적으로 보여드릴 거에요.\n\n대형 언어 모델(LLMs)은 자기 회귀 모델의 한 종류입니다. 자기 회귀 모델이란 무엇일까요? 간단히 말해, 이는 과거 값을 사용하여 미래 값을 예측하는 통계 모델들을 의미합니다. LLM의 경우, 과거 값은 당신이 입력하고, 미래 값은 생성된 토큰입니다.\n\nLLMs은 한 번에 전체 문장을 생성할 수 없다는 것을 알아두어야 합니다. 왜냐하면 그들은 다음 토큰을 예측하는데 사용되는 자기 회귀형 모델이기 때문입니다. 이 토큰은 입력에 추가되어 다른 토큰을 생성하기 위해 사용되며, 그 체인은 'EOT'란 끝 토큰이 생성될 때까지 계속됩니다. 이는 모델에게 생성을 중단하도록 신호를 보냅니다.\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](https://miro.medium.com/v2/resize:fit:1400/1*mrIpGPlXZHL_K-e640HFaw.gif)\n\n다음 토큰을 생성하기 위해 LLM은 어휘 사전에 있는 모든 가능한 토큰에 대한 확률 목록을 출력합니다.\n\n![이미지](/assets/img/2024-06-19-HowareLLMscreative_1.png)\n\nLLM의 어휘 사전 크기가 100이면, 한 번에 이 100개의 토큰 중 하나만 생성할 수 있습니다. 이 100개의 토큰 각각에 대해 해당 토큰이 다음 시퀀스에서 얼마나 가능성 있는지를 나타내는 확률 점수가 반환됩니다. 실제로, 어휘 사전 크기는 훨씬 더 큽니다. 예를 들어, GPT-4V는 32K 토큰의 어휘 사전 크기를 가지고 있습니다.\n\n\n<div class=\"content-ad\"></div>\n\n한 마디로 LLM은 토큰 시퀀스를 입력으로 받아 처리하고, 어휘 사전의 각 토큰에 대한 확률 목록을 출력합니다. 일반적으로, 가장 높은 확률을 가진 토큰이 다음 세대의 토큰으로 반환됩니다.\n\n## 소프트맥스\n\n확률 목록을 계산하는 작업은 소프트맥스 레이어에 의해 수행됩니다. 모든 LLM은 로짓 벡터(로짓은 각 토큰에 연관된 비정규화된 raw scores입니다)를 입력으로 받고, 적절한 확률 분포를 출력하는 '마법 같은' 레이어를 최종 레이어로 갖습니다.\n\n일단 소프트맥스를 내려놓고 효율적으로 확률을 생성하기 위한 자체 함수를 만들어봅시다. 우리의 함수는 특정 기준을 충족해야 합니다. 성공하면 왜 소프트맥스를 사용해야 하죠?\n\n<div class=\"content-ad\"></div>\n\n- 1. 입력 벡터를 가져와 동일한 크기의 출력 벡터를 생성합니다.\n- 2. 출력 벡터의 각 요소가 음수가 아닌지 확인합니다(확률은 음수일 수 없음).\n- 3. 입력 값이 클수록 출력 값이 클 수 있도록 합니다.\n- 4. 출력 벡터의 모든 요소가 1이 되도록 합니다(확률 분포임).\n\n위의 조건을 만족하기 위해 각 요소별 변환을 수행하게 됩니다. 변환은 음이 아닌 값이어야 하며, 항상 양의 정수가 출력되는 함수를 사용해야 합니다. 또한, 입력 값이 클수록 항상 더 큰 출력 값으로 변환되도록 하는 단조 증가함수여야 합니다.\n\neˣ 함수는 위의 모든 조건(1~3)을 모두 만족합니다.\n\n[이미지](/assets/img/2024-06-19-HowareLLMscreative_2.png)\n\n<div class=\"content-ad\"></div>\n\n우리의 전략은 입력 벡터의 각 요소에 eˣ 함수를 적용하여, 길이는 동일하지만 모든 양수인 숫자로 이루어진 벡터를 생성합니다.\n\n![image](/assets/img/2024-06-19-HowareLLMscreative_3.png)\n\n하지만 우리가 가장 중요하게 놓친 요구 사항이 있었어요, 그거 발견했나요?\n\n출력 벡터의 값들이 1보다 큽니다. 곡선에서 볼 수 있듯이, x = 0일 때 y = 1이고, x가 0을 초과하면 y가 1을 초과합니다. 이는 우리의 경우에 맞지 않는데, 확률이 필요하기 때문입니다. 각 값이 1보다 작아야 하고, 모든 값이 합쳐서 1이 되어야 합니다.\n\n<div class=\"content-ad\"></div>\n\n이 문제를 해결하기 위해 출력 벡터의 모든 요소를 출력 벡터의 모든 요소의 합으로 나눌 수 있습니다. 이렇게하면 각 값이 1보다 작아지고 모두 1로 합산됩니다. 이 단계를 정규화라고 합니다.\n\n![이미지](/assets/img/2024-06-19-HowareLLMscreative_4.png)\n\n이제 소프트맥스에 도착했습니다. 하하. 네, 이것이 바로 우리가 이해하기 위해 도출한 소프트맥스 함수입니다. 단순히 설명하는 것보다 더 나은 이해를 도모했죠.\n\n참고: 변환 함수는 미분 가능해야 하므로 손실을 전파할 수 있습니다. 이것이 소프트맥스에서 'e'를 선택하는 또 다른 이유입니다. 사실 지수 함수의 도함수를 계산하는 것이 가장 쉬운 일이라고 믿습니다. :)\n\n<div class=\"content-ad\"></div>\n\n이제 우리는 Softmax 함수를 사용하여 LLM에서 확률이 어떻게 생성되는지 이해했어요. 모델에 어떻게 창의성을 도입할 수 있는지 알아보겠어요.\n\n## AI 모델에서의 창의성, 정말?\n\n일부 창의성을 도입하려면 Softmax에 의해 생성된 확률 분포를 \"평평하게(flatten)\" 만들어야 해요. \"평평하게\"라고 무슨 뜻일까요?\n\n![이미지](/assets/img/2024-06-19-HowareLLMscreative_5.png)\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-19-HowareLLMscreative_6.png)\n\n한 예를 통해 이해해 봅시다.\n\nLLM에 입력되는 내용:\n\n“대화를 완성하세요.”\n\n\n<div class=\"content-ad\"></div>\n\nA: \"안녕, 어떻게 지내니?\"\n\nB: \"LLM은 이제 B가 말하는 첫 번째 토큰을 예측하도록 지정되었습니다.\n\n간단하게 하기 위해 단어 vocab을 5개만 고려합시다.\"\n\n<div class=\"content-ad\"></div>\n\n이 모델은 이 입력을 처리하여 로짓 벡터를 생성하며, 이 벡터는 소프트맥스에 의해 확률로 변환됩니다. 소프트맥스 레이어의 입력인 로짓 벡터는 [0.1, 0,0.5,1, 4, 0.6]이며, 토큰[‘Ni Hao’, ‘Konnichiwa’, ‘Hola’, ‘Namaste’, ‘Hello’, ‘Ciao’]에 대한 출력은 [0.01, 0.01 0.02 0.04 0.86 0.02]입니다.\n\n‘Hello’(목록에서 다섯 번째 단어)을 다음 토큰으로 선택할 확률은 86%입니다. 그러나 확률 점수 중 하나가 지배하는 경우 재미가 없죠? 즉, ‘Hello’가 출력으로 선택될 가능성이 거의 확실하다는 것이죠. 동일한 상황이 발생하면 모델이 항상 \"Hello\" 토큰을 선택할 확률이 높습니다. 이는 매우 예측성이 강하며 창의성이 아니라 반대입니다. 랜덤성에 대한 공간이 없으며 다양한 유효한 토큰을 시도할 여지가 없습니다.\n\n만약 같은 토큰[‘Ni Hao’, ‘Konnichiwa’, ‘Hola’, ‘Namaste’, ‘Hello’, ‘Ciao’]에 대해 소프트맥스 출력이 [0.13 0.12 0.14 0.15 0.28 0.14]라면 어떻게 될까요?\n\n“Hello”가 선택될 가능성은 여전히 높지만, 이전보다 다른 토큰들도 좋은 기회를 갖고 있습니다.\n\n<div class=\"content-ad\"></div>\n\n이 경우, 모델이 일반적인 \"안녕\"을 생성하는 것에서 조금 벗어나 \"남테\", \"올라\" 등을 시도할 여지가 있습니다. 기본적으로 약간의 무작위성을 통합하는 것이죠. 이는 파급 효과를 일으키며 대화 전체가 가장 예상치 못한 방향으로 전개될 수 있습니다. 예를 들어, B가 일본어로 말하고 A가 A가 한 언어를 알아보려고 노력하는 상황 등이 발생할 수 있습니다. 이 창조적으로 들리지 않나요? 저에게는 더 나은 정의가 없어요 :-)\n\n온도 매개변수('T')의 목표는 생성된 내용의 무작위성을 제어하는 것입니다.\n\n소프트맥스 함수를 수정하여 출력 벡터가 주로 우세한 확률 점수를 갖지 않도록 만드는 방법에 대해 이해해 보겠습니다(i.e., 확률 분포를 평평하게 만드는 것).\n\n소프트맥스 함수는 각 요소를 입력 벡터에서 eˣ로 변환합니다. 이를 통해 eˣ 함수를 살펴봐야 한다는 아이디어가 얻어집니다.\n\n<div class=\"content-ad\"></div>\n\n가장 간단한 예로서 2차원 입력 벡터 [1,2]를 살펴보고, 이를 이해하기 위해 Softmax를 적용해 봅시다.\n\n![Softmax 예시 이미지](/assets/img/2024-06-19-HowareLLMscreative_7.png)\n\n요소별로 eˣ 변환을 수행하면, [2.71, 7.39]를 얻을 수 있습니다.\n\n그리고 최종 Softmax 결과는 [2.71/(2.71+7.39), 7.39/(2.71+7.39)]이 될 것입니다.\n\n<div class=\"content-ad\"></div>\n\n= [0.25, 0.75]\n\n두 번째 항목이 50%의 큰 마진으로 우세함을 나타냅니다. \n\n그러나 우리의 목표는 두 값의 소프트맥스 출력을 가깝게 만드는 것이죠, 그렇지 않나요?\n\neˣ 곡선을 살펴보면 이 차이가 주로 eˣ 곡선의 성질 때문인 것으로 추측할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n그렇다면, 이제 우리의 목표는 eˣ 함수를 조정하여 eˣ(1)과 eˣ(2)의 차이가 크지 않도록 만드는 것으로 전환됩니다. 만약 ||eˣ(1) - eˣ(2) ||가 작다면, 그것은 확률 간의 차이를 작게 만들 것이고 이것은 본질적으로 확률의 평탄화라고 불리게 됩니다. 다시 말해, eˣ 곡선의 가파른 정도를 줄입니다.\n\n<img src=\"/assets/img/2024-06-19-HowareLLMscreative_8.png\" />\n\n어떨 때, 파란색 곡선에서 ||eˣ(1) — eˣ(2) ||의 차이가 주황색 곡선보다 더 작은 것을 볼 수 있습니다.\n\n주황색 곡선: eˣ 함수\n\n<div class=\"content-ad\"></div>\n\n파란색 곡선: e^(1/2 ⋅ x) 함수, 우리는 분모를 온도 'T'라 부르며, 이 경우에는 2와 같습니다.\n\n‘T’가 증가하면 곡선이 덜 가파르게 변해 확률이 더 가까워진다는 뜻입니다. 아래는 Softmax with Temperature에 대한 대화식 desmos 그래프 링크이니, 곡선의 가파름을 제어하는 방법에 대해 더 나은 직관을 얻을 수 있도록 살펴보세요.\n\n이 섹션을 건너뛰셔도 됩니다. 이것은 미적분적이며 'e^(1/2 ⋅ x)'가 어떤 지점에서 'eˣ'보다 작은 도함수를 가지는 이유로 증명하는 부분입니다.\n\n파란색 곡선을 사용한 Softmax 과정(T=2)은 다음과 같을 것입니다:\n\n<div class=\"content-ad\"></div>\n\n\n<img src=\"/assets/img/2024-06-19-HowareLLMscreative_9.png\" />\n\n바닐라 소프트맥스로 [0.25, 0.75]을 얻었지만 온도 (T)가 2일 때 [0.38, 0.62]를 얻었어요. 상당한 진전이죠, 알겠죠?\n\n매개변수 'T'를 증가시킴으로써 확률 분포를 더 평평하게 만들 수 있어요. T = 1이면 바닐라 소프트맥스와 본질적으로 같아지며, T가 1보다 낮게 설정되면 출력이 더 예측 가능해져요. 온도를 계속 증가시키면 어느 정도 지나면 생성된 콘텐츠가 암호화된 텍스트처럼 보일거에요.\n\n```js\nimport numpy as np\n\n\ndef softmax(xs):\n    return np.exp(xs) / sum(np.exp(xs))\ndef softmax_t(xs, t):\n    return np.exp(xs/t) / sum(np.exp(xs/t))\nxs = np.array([ 1 , 2 ])\nprint(softmax(xs))\nprint(softmax_t(xs, 2))\nprint(softmax_t(xs, 5))\nOUTPUT:\n[0.26894142 0.73105858]    #T = 1\n[0.37754067 0.62245933]    #T = 2\n[0.450166 0.549834]        #T = 5\n```\n\n<div class=\"content-ad\"></div>\n\nMistral 7B 모델에게 네팔에 대해 작성하도록 요청했어요. 첫 번째 텍스트에서 온도 'T'를 1로 설정했고, 두 번째 텍스트에서는 온도 'T'를 2로 설정했어요.\n\n차이를 확인해보세요\n\nT = 0.5\n\n네팔은 중국과 인도 사이에 위치한 아름다우며 다양한 나라로 알려져 있어요. 세계에서 가장 높은 산인 에베레스트를 비롯해 멋진 산악 풍경으로 유명해요.\n\n<div class=\"content-ad\"></div>\n\nT = 2\n\n네팔의 중심지에는 겨울에 종종 온도가 섭씨 4도까지 떨어지는 곳이 있습니다. 세계에서 가장 숨 막히는 눈이 덮인 산들 중 일부를 발견할 수 있어요.\n\n네, 두 번째 텍스트가 좀 더 창의적인 느낌이죠??\n\n한 마디로, 물리학적으로 온도는 분자의 무작위성의 정도이며, 이를 통해 우리에게 몸체에 함유된 열 에너지에 대한 감각을 제공합니다.\n\n<div class=\"content-ad\"></div>\n\n표 태그를 마크다운 형식으로 변경해 주세요.\n\n<div class=\"content-ad\"></div>\n\nhttps://en.wikipedia.org/wiki/Softmax_function","ogImage":{"url":"/assets/img/2024-06-19-HowareLLMscreative_0.png"},"coverImage":"/assets/img/2024-06-19-HowareLLMscreative_0.png","tag":["Tech"],"readingTime":7},{"title":"어쩌면 GPT가 최상이 아닐 수도 있습니다 BERT가 생성 기반 컨텍스트 학습을 능숙하게 다룰 수 있습니다","description":"","date":"2024-06-19 03:50","slug":"2024-06-19-MaybeGPTIsnttheBestBERTsCanMasterGenerativeIn-ContextLearning","content":"\n\n## |LLM|GPT|컨텍스트 학습|\n\n<img src=\"/assets/img/2024-06-19-MaybeGPTIsnttheBestBERTsCanMasterGenerativeIn-ContextLearning_0.png\" />\n\n트랜스포머가 발표되었을 때 기계 번역 분야에 혁명적인 영향을 미쳤습니다. 곧 이후에는 이 능력이 더 많은 작업으로 확장될 수 있다는 것이 깨달렸습니다. 실제로 트랜스포머는 많은 작업에 사용할 수 있는 언어 표현을 학습합니다.\n\n이 기간 동안 트랜스포머를 위한 두 가지 특별한 학습 패러다임이 제시되었습니다:\n\n<div class=\"content-ad\"></div>\n\n- 인과언어 모델링. 모델은 시퀀스에서 다음 토큰을 예측함으로써 학습합니다.\n- 마스킹된 언어 모델. 모델은 가려진 토큰을 예측해야 합니다.\n\n초기에는 BERT와 같은 모델이 다양한 작업에 융통성이 있어서 더 성공적이었습니다. 하지만 GPT3의 출시로 모든 것이 변했습니다.\n\nGPT3는 문맥 내 학습이라는 새로운 기능을 보여줬기 때문입니다. 몇 가지 예시를 받아들여서, 모델은 작업 자체를 매핑하고 실행할 수 있었습니다. 이것이 프롬프트 엔지니어링을 폭발시키고 대형 언어 모델에 대한 관심을 불러일으키는 촉매였습니다. 미세 조정을 수행할 필요 없이 모델이 새 작업을 학습할 수 있었습니다.\n\n![이미지](/assets/img/2024-06-19-MaybeGPTIsnttheBestBERTsCanMasterGenerativeIn-ContextLearning_1.png)\n\n<div class=\"content-ad\"></div>\n\nIn-context learning은 패러다임 변화와 커뮤니티 관심을 이끌었습니다. 이전에는 GPT-3 마스킹 모델이 가장 인기 있었지만, 이후 연구는 자기 회귀 모델로 전환되었습니다. 대부분의 연구가 이러한 유형의 모델에 집중되어 왔으며, 오늘날 대부분의 모델이 자기 회귀로 되어 있습니다.\n\n더욱이, 이러한 모델들은 이 기사에서 제안된 것처럼 생성할 능력이 없다고 여겨집니다.\n\n또한, 이러한 모델들은 생성이 불가능하다고 여겨지는 이 기사의 제안과 관련된 매우 중요한 두 가지 질문이 발생합니다.\n\n최근에 발표된 기사에서 이 질문들에 정확하게 다루었습니다.\n\n<div class=\"content-ad\"></div>\n\n이것이 MLM의 목적은 아니에요. 그러나 저자들은 별도의 훈련이나 세밀한 조정 없이 MLM을 사용하고 싶어해요. 그래서 그들은 두 가지 잠재적인 방법을 사용하기로 결정해요:\n\n자기 회귀 LLM은 특별히 텍스트 생성을 학습하는 반면, MLM은 빈칸 채우기(마스크 토큰)를 학습해요. 저자들은 텍스트 프롬프트 옆에 [MASK] 토큰을 놓고 모델이 다음 토큰을 생성하도록 텍스트를 생성해요. 그 다음 [MASK] 토큰이 추가되고 그런 식으로 계속해요.\n\nMLM은 조건부 로그 우도를 추정하지 않아요. 저자들은 추가적인 훈련을 피하기 위해 방정식을 수정하여 의사 로그 우도(PLL)를 얻어요. 이 접근법은 토큰 간의 강력한 지역 의존성이 있을 때 모델이 부정확하지 않도록 조정됐어요. 모델은 양방향 셀프 어텐션을 사용하기 때문에 지역 의존성에 민감해요.\n\n<img src=\"/assets/img/2024-06-19-MaybeGPTIsnttheBestBERTsCanMasterGenerativeIn-ContextLearning_2.png\" />\n\n<div class=\"content-ad\"></div>\n\n그러나 이 두 가지 방법에는 특히 계산 비용 측면에서 제한 사항이 있지만, 저자들은 시스템 최적화에는 관심이 없다.\n\n저자들은 DeBERTa (BERT의 파생물)를 사용했는데, 이 모델은 상대적인 위치 임베딩으로 훈련되었기 때문에 512 토큰을 넘어 확장될 수 있습니다. 그러나 저자들은 모델이 512보다 긴 컨텍스트 길이에 대해 일반화할 수 있는지 테스트했으며, 이를 통해 후속학습(few-shot 설정에 대한 테스트)에서 사용할 수 있도록 하였습니다. Needle in the Haystack(랜덤하게 생성된 6자리 숫자(바늘)가 긴 에세이 모음(쌀집)에 숨겨져 있고 모델이 그것을 찾아야 하는 테스트)에서 DeBERTa가 증가하는 크기의 시퀀스에서 바늘을 찾을 수 있는지 테스트했습니다. 관측 결과, DeBERTa는 512 토큰을 넘어 확장할 수 있고, 그 결과 특수한 학습 상황에서 사용할 수 있다는 것을 보여줍니다.\n\nDeBERTa는 GPT3보다 훨씬 작고, 적은 토큰으로 훈련되었음에도 불구하고, 2020년에 출시되었습니다. 저자들은 두 모델을 생성 및 분류와 같은 동일 유형의 작업에서 비교하기로 결정했습니다.\n\n<div class=\"content-ad\"></div>\n\n가장 흥미로운 결과 중 하나는 두 모델 모두 성능이 모델 크기와 비례한다는 것입니다(더 많은 매개변수는 더 나은 성능을 보여줍니다).\n\n![image](/assets/img/2024-06-19-MaybeGPTIsnttheBestBERTsCanMasterGenerativeIn-ContextLearning_4.png)\n\n또한, 둘 다 소수의 데이터로도 잘 작동하는 것을 확인할 수 있습니다(더 많은 예제가 두 모델을 도와줍니다).\n\n![image](/assets/img/2024-06-19-MaybeGPTIsnttheBestBERTsCanMasterGenerativeIn-ContextLearning_5.png)\n\n<div class=\"content-ad\"></div>\n\n자세한 분석 결과, DeBERTa는 제로샷 및 퓨샷 설정 모두에서 언어 이해 작업에 대해 GPT3보다 우수한 것으로 보입니다 (저자들은 인기 있는 기준인 SuperGLUE를 사용했습니다). 저자들은 GPT3의 유사 크기 버전 (1.4 B)과 DeBERTa를 비교하며 뚜렷한 차이를 발견했습니다. 또한:\n\n![이미지](/assets/img/2024-06-19-MaybeGPTIsnttheBestBERTsCanMasterGenerativeIn-ContextLearning_6.png)\n\n저자들은 또한 Winograd 스타일 및 텍스트 완성 작업에 대해 모델을 테스트했습니다. 이러한 작업은 상식적 추론, 언어 이해 및 복잡한 공용 참조 해상도가 필요한 더 복잡한 작업입니다. 예를 들어, 이야기에 대한 최적의 끝을 선택하거나 문장을 완성하는 것 등이 있습니다. 다시 한번, 가령 가리워진 언어 모델의 승리가 관찰되는 것으로 보입니다. 또 다른 흥미로운 점은 스케일링 비율이 더 높다는 것입니다: 매개변수를 증가시킴으로써 MLM의 성능이 더욱 빠르게 증가하는 것으로 보입니다.\n\n저자들은 또한 두 모델을 번역 작업에 대해 테스트했습니다. 번역 작업은 모델이 다른 언어에 능숙해야 하며, 여전히 훈련 데이터의 구성에 의존합니다. 이 경우, GPT3가 명백하게 우승자로 나타났으며, DeBERTa는 성능이 떨어지는 것으로 보입니다. 그러나 DeBERTa는 단일 언어 말뭉치만으로 훈련되었으므로 명확하게 불리한 시작을 합니다.\n\n<div class=\"content-ad\"></div>\n\n![2024-06-19-MaybeGPTIsnttheBestBERTsCanMasterGenerativeIn-ContextLearning_7](/assets/img/2024-06-19-MaybeGPTIsnttheBestBERTsCanMasterGenerativeIn-ContextLearning_7.png)\n\n이 두 모델은 클로즈드 북 질문에 대한 답변 및 상식적 추론에 대해 테스트되었습니다. 실제로 이 모델들은 고유의 지식을 보유하고 있으며, 그들의 매개변수에서 많은 정보를 저장할 수 있습니다. 또한, 오늘날의 LLM이 정보를 다시 찾아내는 능력이 중요한 측면입니다.\n\n또한, 오늘날 우리는 LLM이 일반적인 추론 능력을 조금은 갖고 있다고 기대합니다. 그래서 두 모델은 트리비아(온라인 퀴즈 데이터 세트), 실제 세계 이해를 테스트하기 위한 물리적 상호 작용 데이터 세트, 그리고 학년별 과학 문제를 테스트하기 위한 데이터 세트에서 테스트되었습니다.\n\nDeBERTa의 답변은 GPT3보다 상당히 나쁩니다. 저자들은 이는 모델의 교육과 구조에서 비롯된 것이라고 생각합니다:\n\n<div class=\"content-ad\"></div>\n\n모델은 지식 면에서 빛을 발하지는 않지만 상식적 추론 능력과 행동 척도에서는 GPT3와 비슷하게 잘 수행하는 것으로 보입니다.\n\n![이미지](/assets/img/2024-06-19-MaybeGPTIsnttheBestBERTsCanMasterGenerativeIn-ContextLearning_8.png)\n\n관심이 있는 분들을 위해 저자들은 해당 모델을 HuggingFace에서 공개했습니다.\n\n이 기사에서 저자들은 두 가지 핵심 포인트를 보여줍니다: MLMs도 콘텍스트 학습이 가능하며, 이러한 스킬들은 스케일을 키울수록 향상됩니다.\n\n<div class=\"content-ad\"></div>\n\nGPT3가 발표된 이후, 이러한 모델들이 오래되었고 인텍스트 학습이 불가능하다고 생각되었습니다. 이는 생성 작업에 사용할 수 없다는 것을 의미하며, 따라서 모든 현대적인 응용 프로그램에도 해당되지 않는다는 것을 의미합니다. 대신, 저자들은 BERT와 유사한 모델들이 비슷한 수준으로 능력을 갖추고 있음을 보여줍니다. 저자들의 데이터에 따르면, 동일한 규모의 DeBERTa가 언어 이해 작업에서 우월하다는 것을 나타낸다. 이는 상당히 강한 주장이며, 이것이 사실인지 아닌지 이해하기 위해 더 많은 실험이 필요합니다. 저자들이 원인 연구를 수행하지 않은 것은 유감스럽지만, 이러한 작업과 관련된 양방향 주의의 역할을 이해하는 것이 흥미로울 것입니다.\n\n매개 변수 수에 따라 능력이 확장되는 사실은 중요한 사실입니다. 10B 이상으로 LLM을 확장하는 이유 중 하나는 바로 신생 속성의 존재 때문입니다.\n\n이러한 신생 속성이 존재하는지 여부는 또 다른 문제입니다. 최근에는 확장 법칙 자체가 다소 의문이 제기되었습니다. 그러나 모델의 성능이 매개 변수 수, 훈련 데이터 차원 및 컴퓨팅 예산과 비례하여 증가하는 것이 원하는 동작이라는 사실은 여전히 유지됩니다.\n\n어쨌든, 이 작업은 매우 흥미로운데, 데이터가 BERT와 유사한 모델이 인텍스트 학습자일 수 있는 능력을 갖춘다는 것을 보여주고 있습니다. 우리는 어떤 학습 모드가 다른 것보다 어떤 이점을 가지는지 자세히 검토해야 합니다. 미래에는 새로운 모델이 혼합 모드로 훈련되거나 다른 방식을 찾아 그들의 이점을 결합하는 대안을 찾을 수 있을 것입니다.\n\n<div class=\"content-ad\"></div>\n\n## 이에 대해 어떻게 생각하십니까? GPT와 유사한 LLM 지배력을 다시 평가해야 할 필요가 있다고 생각하십니까? 댓글로 알려주세요!\n\n# 이 내용이 흥미로우셨다면:\n\n제 다른 기사들을 찾아보거나 LinkedIn에서 저와 연락하실 수도 있습니다. 주간 업데이트되는 머신러닝 및 인공지능 뉴스가 포함된 이 저장소를 확인해보세요. 저는 협업과 프로젝트에 열려 있으며 LinkedIn을 통해 저에게 연락하실 수 있습니다. 또한 새로운 이야기를 게시할 때 알림을 받으려면 무료로 구독할 수 있습니다. \n\n제 GitHub 저장소 링크는 여기에서 확인하실 수 있습니다. 머신러닝, 인공지능 및 그 외 다른 자원과 관련된 코드 및 여러 자료를 수집하고 있는 곳입니다.\n\n<div class=\"content-ad\"></div>\n\n혹은 제 최근 글 중 하나에 관심 있을지도 모릅니다:\n\n# 참고 자료\n\n이 글을 작성하는 데 참고한 주요 참고 자료 목록입니다. 각 논문에 대해 첫 번째 저자의 이름만 인용되었습니다.\n\n- Radford, Improving Language Understanding by Generative Pre-Training, 링크\n- Devlin, 2019, BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding, 링크\n- Brown, 2020, Language Models are Few-Shot Learners, 링크\n- Tay, 2023, UL2: Unifying Language Learning Paradigms, 링크\n- Samuel, 2024, BERTs are Generative In-Context Learners, 링크","ogImage":{"url":"/assets/img/2024-06-19-MaybeGPTIsnttheBestBERTsCanMasterGenerativeIn-ContextLearning_0.png"},"coverImage":"/assets/img/2024-06-19-MaybeGPTIsnttheBestBERTsCanMasterGenerativeIn-ContextLearning_0.png","tag":["Tech"],"readingTime":7},{"title":"Numerai Crypto 소개 암호화폐 시장 예측의 미래","description":"","date":"2024-06-19 03:48","slug":"2024-06-19-IntroducingNumeraiCryptoTheFutureofCryptocurrencyMarketPrediction","content":"\n\nNumerai는 분산화되고 대중화된 예측 시장의 선두 주자로 손꼽혀 왔습니다. 2017년에는 이더리움의 가치가 단지 12달러였던 시점에서 우리의 토큰 Numeraire(NMR)를 출시했습니다. 전 세계에서 수천 명의 가장 우수한 데이터 과학자들을 모아 매일 우리 플랫폼에 1300만 달러 가치 이상의 NMR을 걸고 협업하고 있습니다. 매일 수천 개의 머신 러닝 모델을 실행하여 매년 100억 건 이상의 세계 주식 예측을 생성합니다. 우리는 앙상블에 대한 모델 기여를 평가하는 고급 지표인 MMC를 만들어 독특한 신호 성능을 확인할 수 있도록 했습니다.\n\nNumerai와 Signals에 담긴 이 선도적 노력들은 예측 시장의 표준을 설정하며 이 분야에서 다양한 프로젝트들을 영감을 받게 했습니다. Numerai의 예측 시장의 규모는 2024년에만 글로벌 주식 거래 액면에서 20억 달러 이상의 거래량에 영향을 끼치고 있습니다.\n\n하지만... 왜 주식 시장일까요?\n\n아마도 주식 시장이 잘 정립되어 있고 트렌드가 잘 연구되어 있기 때문일 수도 있습니다... 또는 머신 러닝에 적합한 데이터가 가장 간단하고 고품질인 것이 원인일 수도 있습니다. Numerai 커뮤니티가 주식 시장을 예측하는 데 성공을 거두어 그것이 익숙하고 편안하기 때문일 수도 있습니다.\n\n<div class=\"content-ad\"></div>\n\n주식 시장이 크라우드소싱 인텔리전스가 성공할 수 있는 유일한 곳인가요? 그리고 메타 모델은 Numerai의 전용 IP가 될 수밖에 없나요?\n\n아니요.\n\n오늘, Numerai는 처음으로 누구나 암호화폐의 미래를 예측할 수 있는 새로운 예측 플랫폼을 만들었습니다:\n\nNumerai Crypto\n\n<div class=\"content-ad\"></div>\n\n거래를 하려고 하는데요. 팔기 버튼 위에 커서를 올려놓고 \"전반적인 시장 매물 매입\" 속에서 최근 기사들을 의존하고 있습니다. 그런데 갑자기 미래의 라이브 피드를 보게 됩니다. 이 피드는 Numerai의 최고 데이터 과학자들에 의해 구축되었는데, 그들은 모든 데이터 소스와 인공 지능 기술을 사용하여 모델을 학습할 수 있습니다. 수천 개의 모델에서 나온 최고의 예측이 통합되어 당신에게 전달됩니다. 이 피드가 다가올 주에 시장을 과performers-performers로 예측할 수 있다면 어떨까요?\n\nNumerai는 이 상황을 상상할 뿐만 아니라 경험했습니다. 오늘부터 Numerai Crypto Meta Model을 12개월 동안 무료로 제공하게 됩니다. 이제 여러분도 이를 경험할 수 있습니다.\n\n지금 암호화폐의 미래를 보세요.\n\n# Numerai Crypto는 선두 주자입니다.\n\n<div class=\"content-ad\"></div>\n\n우리의 기존 플랫폼은 전통 주식 시장에만 초점을 맞추고 있었지만, 우리는 오랫동안 암호화폐 시장을 흥미롭게 생각해 왔습니다. Numerai Crypto를 통해 우리의 목표는 다음과 같습니다:\n\n- 우리 커뮤니티에 새롭고 매력적인 도전 과제를 제공합니다. 주식 시장 신호의 탐색 공간이 아직 다 exhaust 되지 않았지만, 우리는 커뮤니티가 암호 화폐 시장에서 얼마나 많은 알파를 얻을 수 있는지 알아보고 싶습니다. 또한 Numerai는 당사의 헤지 펀드를 구축한 커뮤니티를 강화하고 확장하기 위해, NMR의 세 번째 사용 사례를 제공함으로써 신뢰와 유틸리티를 높이려고 노력하고 있습니다.\n- 암호화폐 시장의 예측 가능성을 향상시킵니다. 암호화폐 시장은 비교적 탐험되지 않았습니다. 이 \"일반적인 판매 압박\"은 무엇을 이끌고 있으며 시장은 빨리 회복될까요? 신뢰할 수 있는 요인 모델은 아직 개발되지 않았고 고품질의 데이터 제공 업체가 희소하기 때문에 질문에 대답하기 어렵습니다. 우리는 이를 바꾸고자 노력합니다.\n- 집단 지성의 힘을 세계에 되돌려줍니다. 지금까지 Numerai만이 우리의 크라우드소싱 예측의 힘을 이용할 수 있었습니다. Numerai Crypto Meta Model을 공개함으로써 우리는 이 힘을 세계와 공유할 것입니다.\n\nNumerai는 참여자들의 예측이나 Numerai Crypto Meta Model을 거래에 사용하지 않겠지만, 이를 관찰하는 것은 흥미로울 것입니다. 암호화폐 헤지 펀드, 소매 투자자, MEV 탐색자 및 기타 시장 참가자들은 미래의 공개 피드를 검토하는 데 관심이 있을 수 있습니다. 우리는 Numerai 커뮤니티가 암호화폐 시장을 얼마나 잘 예측할 수 있는지, 개인 또는 기관이 이러한 예측을 거래 결정 또는 리스크 관리에 활용할지에 대해 기대하고 있습니다.\n\n# 암호화폐의 미래에 함께하세요!\n\n<div class=\"content-ad\"></div>\n\nNumerai Crypto는 새로운 도전 방법을 제공하며 데이터 과학을 배우고 암호화폐의 미래에 영향을 미치고 NMR을 벌거나 태우는 것이 가능합니다. 여러분이 참여할 수 있는 방법은 다음과 같습니다:\n\n- 가입하기: Numerai Crypto를 방문하여 계정을 생성하고 가입하세요. 이 계정으로 세계에서 가장 어려운 데이터 과학 대회에 참여할 수 있습니다.\n- 데이터 다운로드: 우리는 유동성이 있는 암호화폐들의 우주를 생성하고 이를 사용하여 과거의 수익 대상을 생성했습니다. 이 대상은 우리의 우주가 이후 4주 동안 경험한 순위별 수익을 대표합니다. 여러분의 역할은 모델이 시간이 지남에 따라 토큰들의 상대 수익을 학습하는 데 사용할 수 있는 올바른 예측 데이터를 찾는 것입니다.\n- 예측하고 제출하기: 매일 우리의 우주의 미래 순위별 수익을 예측하세요. 예측을 업로드하기 위해 웹사이트나 API(예: NumerAPI 또는 RNumerai와 같은 패키지를 통해)를 사용하세요. 저희 API는 여러분의 제출을 확인할 것입니다. 제출 예시는 다음과 같습니다:\n![numerai-crypto-submission](/assets/img/2024-06-19-IntroducingNumeraiCryptoTheFutureofCryptocurrencyMarketPrediction_0.png)\n\n- 관찰하기: 여러분이 예측을 제출한 후 약 일주일 후에 평가가 시작되며 실제 암호화폐 시장과 비교하여 그 다음 한 달 동안 진행됩니다. 이 기간 동안 여러분의 모델이 어떻게 수행되는지 확인하세요. 4주가 지나면 점수가 확정되며 여러분의 모델은 Numerai Crypto 리더보드에 위치하게 됩니다.\n- 스테이크하기: 원하는 경우 예측에 NMR을 걸어 성능에 따라 벌거나 태우는 옵션을 선택할 수 있습니다. 이 과정은 필수가 아니며 신뢰할 수 있는 모델에만 스테이크하세요. 모든 스테이크 참여자의 평균 예측은 Numerai Crypto 메타 모델을 형성합니다.\n- 탐색하고 공유하기: Numerai 커뮤니티 포럼과 디스코드에 가입하여 기계 학습 및 암호화폐 시장 전략에 대한 아이디어를 탐구, 실험하고 공유하세요.\n\n<div class=\"content-ad\"></div>\n\nNumerai Crypto에 대한 자세한 내용은 문서에서 확인할 수 있어요.\n\n# 곧 시작합니다\n\nNumerai Crypto 2024 시즌이 곧 시작됩니다. Numerai 그랜드마스터의 자격을 얻을 기회를 제공하며, 리더보드를 통해 랭킹을 올려 모델을 개선하고 고유한 데이터를 발견하여 커뮤니티에서 눈에 띄게 차별화되세요.\n\n또한 예제 모델을 공개하고 토큰 유니버스와 목표를 생성하는 데 사용된 코드를 오픈 소스로 공개하기 시작할 예정입니다. 이를 통해 Numerai와 Numerai Crypto에서 경쟁하는 데이터 과학자들이 함께 협력하여 최고 수준의 암호화폐 예측 시장을 만들어 나갈 수 있기를 바랍니다.\n\n<div class=\"content-ad\"></div>\n\nNumerai는 암호화폐 거래를 하지 않으며, Numerai의 헤지 펀드는 Numerai Crypto와 관련이 없습니다. Numerai Crypto 토너먼트는 실험적인 대회이며, Numerai Crypto 메타 모델은 투자 조언이 아니며 거래 결정에 사용되는 것을 의도하지 않습니다. 모델의 공개와 성능 추적은 정보 및 오락 목적으로만 사용됩니다. Numerai는 Numerai Crypto 메타 모델을 기반으로 한 개인 또는 기관의 재정 결정에 대해 책임지지 않습니다.","ogImage":{"url":"/assets/img/2024-06-19-IntroducingNumeraiCryptoTheFutureofCryptocurrencyMarketPrediction_0.png"},"coverImage":"/assets/img/2024-06-19-IntroducingNumeraiCryptoTheFutureofCryptocurrencyMarketPrediction_0.png","tag":["Tech"],"readingTime":5},{"title":"KAN  콜모고로프-아놀드 네트워크 뒤에 숨은 수학","description":"","date":"2024-06-19 03:45","slug":"2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks","content":"\n\n## 클래식 다층 퍼셉트론 대안이 나왔어요. 왜 더 정확하고 해석 가능한 건가요? 수학과 코드 심층 탐구.\n\n![다음 이미지 참고](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_0.png)\n\nAI 세계에서 신경망은 끊임없는 혁신과 발전을 이끌어옵니다. 많은 획기적인 발전의 핵심에는 복잡한 함수를 근사하는 능력으로 유명한 다층 퍼셉트론(MLP)이 있습니다. 그러나 AI가 얼마나 많이 이루어 낼 수 있는지 경계를 늘릴 때, 우리는 클래식 MLP보다 더 나은 것을 할 수 있을까요?\n\n여기 Kolmogorov-Arnold Networks(KANs)가 나왔습니다. Kolmogorov-Arnold 표현 정리에서 영감을 받은 신경망에 대한 새로운 접근법입니다. 기존 MLP가 각 뉴런에서 고정 활성화 함수를 사용하는 반면, KANs는 네트워크의 가중치(엣지)에 학습 가능한 활성화 함수를 사용합니다. 이 간단한 변경은 정확성, 해석 가능성, 효율성에서 새로운 가능성을 열어줍니다.\n\n<div class=\"content-ad\"></div>\n\n이 기사는 KAN이 신경망 설계에서 혁명적인 발전을 이루는 이유를 탐구합니다. 우리는 그들의 수학적 기초에 대해 자세히 살펴보고, MLP(Multi-Layer Perceptrons)와의 주요 차이점을 강조하며, KAN이 전통적인 방법을 능가할 수 있는 방법을 보여줄 것입니다.\n\n# 1: MLP의 한계\n\n![이미지](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_1.png)\n\n다층 퍼셉트론(MLP)은 현대 신경망의 핵심 구성 요소입니다. 각각의 뉴런은 데이터로부터 학습하여 복잡한 비선형 함수를 근사하는 것을 목표로 설계된 상호 연결된 노드 레이어로 구성되어 있습니다. 각 뉴런은 입력의 가중 합에 고정된 활성화 함수를 사용하여 입력 데이터를 원하는 출력으로 변환함으로써 여러 계층의 추상화를 통해 동작합니다. MLP는 컴퓨터 비전에서부터 음성 인식까지 다양한 분야에서 앞도적인 성과를 이루어 왔습니다.\n\n<div class=\"content-ad\"></div>\n\n그러나 MLP에는 몇 가지 중요한 제한 사항이 있습니다:\n\n- 노드에 고정된 활성화 함수: MLP의 각 노드에는 ReLU나 Sigmoid와 같은 미리 정의된 활성화 함수가 있습니다. 이러한 고정 함수는 많은 경우에 효과적이지만 네트워크의 유연성과 적응성을 제한합니다. 이는 MLP가 특정 유형의 함수를 최적화하거나 특정 데이터 특성에 적응하는 데 어려움을 겪을 수 있게 만들 수 있습니다.\n- 해석 가능성 문제: MLP는 종종 \"블랙 박스\"로 비판받습니다. 복잡해지면서, 그들의 의사 결정 과정을 이해하기가 더 어려워집니다. 고정된 활성화 함수와 복잡한 가중치 행렬은 네트워크의 내부 작업을 가리고, 깊이 분석 없이 모델의 예측을 해석하고 신뢰하기 어렵게 만듭니다.\n\n이러한 단점은 더 큰 유연성과 해석 가능성을 제공하는 대안이 필요함을 강조하며, Kolmogorov-Arnold Networks (KANs)와 같은 혁신을 위한 길을 열어줍니다.\n\n# 2: Kolmogorov-Arnold Networks (KANs)\n\n<div class=\"content-ad\"></div>\n\n![이미지](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_2.png)\n\n콜모고로프-아놀드 표현 이론은 수학자 안드레이 콜모고로프와 블라디미르 아놀드가 정립한 이론으로, 이론은 다변수 연속 함수를 단일 변수의 연속 함수와 덧셈 작업의 유한 구성으로 표현할 수 있다고 주장합니다. 이 이론은 복잡한 레시피를 각각의 간단한 단계로 분해하는 것으로 생각할 수 있습니다. 전체 레시피 전체적으로 다루는 대신에 각 단계를 개별적으로 처리하여 전반적인 프로세스를 더 효율적으로 만듭니다. 이 이론은 복잡한 고차원 함수를 간단한 단일 변수 함수로 분해할 수 있다는 것을 시사합니다.\n\nKAN(Kolmogorov-Arnold Networks)은 콜모고로프-아놀드 이론의 힘을 활용하여 신경망의 구조를 근본적으로 변경합니다. 전통적인 MLP에서는 각 노드에 고정된 활성화 함수가 적용되지만, KAN은 네트워크의 가중치에 학습 가능한 활성화 함수를 배치합니다. 이러한 주요 차이점은 고정된 활성화 함수 세트가 아닌, KAN이 학습 중에 적용할 최상의 함수를 적응적으로 학습한다는 것을 의미합니다. KAN의 각 가중치는 데이터를 기반으로 한 다이내믹하고 세밀한 조정이 가능한 스플라인으로 매개변수화된 단일 변수 함수를 나타냅니다.\n\n이 변화는 네트워크의 유연성을 향상시키고 데이터의 복잡한 패턴을 포착할 수 있는 능력을 강화하여 전통적인 MLP에 대한 해석 가능하고 강력한 대안을 제공합니다. KAN은 가장 최적의 성능을 위해 엣지에 있는 학습 가능한 활성화 함수에 초점을 맞춘 결과, 다양한 AI 작업에서 성능이 향상됩니다.\n\n<div class=\"content-ad\"></div>\n\n# 3: 수학적 기초\n\n콜모고로프-아놀드 네트워크(KANs)의 핵심은 이러한 네트워크가 입력 데이터를 처리하고 변환하는 방식을 정의하는 일련의 방정식입니다. KANs의 기초는 콜모고로프-아놀드 표현 정리에 있으며, 이는 네트워크의 구조와 학습 과정에 영감을 주는 개념입니다.\n\n입력 벡터 x=[x1,x2,…,xn]가 있다고 상상해보세요. 이 벡터는 처리하려는 데이터 포인트를 나타냅니다. 이 입력 벡터를 레시피의 재료 목록으로 생각해보세요.\n\n이 정리는 어떤 복잡한 레시피(고차원 함수)라도 보다 간단한 단계(일변량 함수)로 분해할 수 있다는 것을 명시합니다. KANs에서는 각 재료(입력 값)가 네트워크의 가장자리에 배치된 일련의 간단한 단계(일변량 함수)를 통해 변환됩니다. 이를 수학적으로 표현하면:\n\n<div class=\"content-ad\"></div>\n\n![image](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_3.png)\n\n여기서 ϕ_q,p는 학습 중에 학습되는 단변량 함수입니다. ϕ_q,p를 각 재료에 대한 개별 조리 기술로 생각하고, Φ_q를 이러한 준비된 재료를 결합하는 최종 조립 단계로 생각해보세요.\n\nKAN의 각 층은 이러한 요리 기술을 사용하여 재료를 더 변형합니다. 층 l에 대해, 변형은 다음과 같이 주어집니다:\n\n![image](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_4.png)\n\n<div class=\"content-ad\"></div>\n\n여기서 x(l)은 l번째 레이어에서 변환된 재료를 나타내고, ϕ_l,i,j는 l레이어와 l+1 레이어 사이의 학습 가능한 일변량 함수입니다. 이를 각 단계마다 재료에 다양한 조리 기술을 적용하여 중간 요리를 얻는 것으로 생각해보세요.\n\nKAN의 출력은 이러한 레이어 변환의 합성입니다. 중간 요리를 결합하여 최종 식사를 만드는 것처럼, KAN은 변환을 결합하여 최종 출력물을 생성합니다:\n\n![image](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_5.png)\n\n여기서 Φl은 l번째 레이어의 일변량 함수 행렬을 나타냅니다. KAN의 전체 함수는 이러한 레이어의 합성으로, 각각이 변환을 더욱 세밀하게 다듬습니다.\n\n<div class=\"content-ad\"></div>\n\nMLP 구조\n전통적인 MLP에서 각 노드는 입력에 고정된 활성화 함수 (예: ReLU 또는 sigmoid)를 적용합니다. 이를 생각해보면 각각의 성질에 관계없이 모든 재료에 동일한 조리 기술을 적용하는 것과 같습니다.\n\nMLPs는 이러한 고정 비선형 활성화 함수에 이어서 선형 변환을 사용합니다:\n\n![MLP Structure](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_6.png)\n\n여기서 W는 가중치 행렬을 나타내고, σ는 고정된 활성화 함수를 나타냅니다.\n\n<div class=\"content-ad\"></div>\n\n## 그리드 확장 기술\n\n![이미지](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_7.png)\n\n그리드 확장은 Kolmogorov-Arnold Networks (KANs)의 정확도를 향상시키기 위해 사용되는 강력한 기술로, 단변량 함수가 정의된 스플라인 그리드를 세밀하게 다듬는 데 사용됩니다. 이 과정을 통해 네트워크는 완전 재교육이 필요하지 않고도 데이터의 점점 더 세부적인 패턴을 학습할 수 있습니다.\n\n이 B-스플라인은 부드러운 곡선을 형성하기 위해 결합된 일련의 다항 함수입니다. KANs에서는 가장자리의 단변량 함수를 나타내는 데 사용됩니다. 스플라인은 그리드 포인트라고 불리는 일련의 간격을 통해 정의됩니다. 그리드 포인트가 많을수록 스플라인이 캡처할 수 있는 세부 정보가 더욱 섬세해집니다.\n\n<div class=\"content-ad\"></div>\n\n![KANKolmogorov-ArnoldNetworks_8](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_8.png)\n\n먼저, 네트워크는 거친 격자로 시작되어 그리드 포인트 사이의 간격이 적습니다. 이는 네트워크가 세부 사항에 깊이 빠지지 않고 데이터의 기본 구조를 학습할 수 있도록 합니다. 이는 세부 사항을 채우기 전에 대략적인 윤곽을 그리는 것과 유사합니다.\n\n학습이 진행됨에 따라 그리드 포인트의 수가 점진적으로 증가합니다. 이 과정을 그리드 세분화라고 합니다. 더 많은 그리드 포인트를 추가함으로써 스플라인이 더 자세해지고 데이터 내의 미세한 패턴을 잡을 수 있습니다. 이는 처음에 대략적인 스케치에 점차적으로 더 많은 세부 사항을 추가하여 자세한 그림으로 완성하는 것과 유사합니다.\n\n매 증가할 때마다 새로운 B-spline 기저 함수 B′_m(x)가 도입됩니다. 이러한 새로운 기저 함수에 대한 계수 c'_m은 새로운, 더 자세한 스플라인이 초기, 더 거친 스플라인과 밀접하게 일치하도록 조절됩니다.\n\n<div class=\"content-ad\"></div>\n\n이 작업을 수행하기 위해서는 최소 제곱 최적화가 사용됩니다. 이 방법은 계수 c'_m을 조정하여 원본 스플라인과 개선된 스플라인 간의 차이를 최소화합니다.\n\n![image](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_9.png)\n\n본질적으로, 이 과정은 개선된 스플라인이 원시 스플라인에 의해 학습된 데이터 패턴을 정확하게 나타내도록 보장합니다.\n\n## 간소화 기법\n\n<div class=\"content-ad\"></div>\n\nKANs의 해석 가능성을 향상시키기 위해, 네트워크를 이해하고 시각화하기 쉽게 만들기 위해 여러 간소화 기술이 사용될 수 있습니다.\n\n희박화 및 가지치기\n이 기술은 활성화 함수의 L1 노름에 기반한 손실 함수에 패널티를 추가하는 것을 포함합니다. 함수 ϕ에 대한 L1 노름은 모든 입력 샘플을 대상으로 함수의 평균 크기로 정의됩니다:\n\n![수학 공식](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_10.png)\n\n여기서 N_p는 입력 샘플 수이며, ϕ(x_s)는 입력 샘플 x_s에 대한 함수 ϕ의 값입니다.\n\n<div class=\"content-ad\"></div>\n\n스파스파이케이션은 방을 정리하는 것과 같습니다. 불필요한 항목을 제거하거나 중요하지 않은 기능을 줄임으로써 공간(또는 네트워크)을 더 정리하고 쉽게 이동할 수 있게 만듭니다.\n\nL1 규제를 적용한 후 활성화 함수의 L1 노름이 평가됩니다. 특정 임계값 이하의 노름을 가진 뉴런과 엣지는 중요하지 않다고 간주되어 제거됩니다. 가지치기를 위한 임계값은 가지치기를 얼마나 적극적으로 진행할지를 결정하는 하이퍼파라미터입니다.\n\n가지치기는 나무를 가지치는 것과 같습니다. 약한 또는 불필요한 가지를 제거함으로써, 나무가 더 강하고 중요한 부분에 리소스를 집중할 수 있게 되어 더 건강하고 관리하기 쉬운 구조를 만들어냅니다.\n\n상징화\n다른 방법은 배운 단변량 함수를 알려진 기호 형태로 대체하여 네트워크를 보다 해석하기 쉽게 만드는 것입니다.\n\n<div class=\"content-ad\"></div>\n\n잠재적인 상징적 형식 (예: sin⁡, exp)을 식별하는 작업입니다. 이 단계는 학습된 함수를 분석하고 모양과 행동에 기초하여 상징적 후보를 제안하는 것을 포함합니다.\n\n상징적 후보가 식별되면 상징적 함수가 학습된 함수를 근사화하도록 매개변수를 적합시키기 위해 그리드 서치 및 선형 회귀를 사용하십시오.\n\n# 4: KAN vs MLP in Python\n\nKolmogorov-Arnold Networks (KANs)와 전통적인 Multi-Layer Perceptrons (MLPs)의 능력을 시범하기 위해, PyTorch를 활용하여 함수를 생성한 데이터세트에 KAN 모델과 MLP 모델을 모두 적합시켜보겠습니다. 이들의 성능이 어떻게 보이는지 확인해봅니다.\n\n<div class=\"content-ad\"></div>\n\n우리가 사용할 함수는 KAN의 능력을 MLP(원본 논문 예제)과 비교하기 위해 논문 저자들이 사용한 것과 동일합니다. 그러나 코드는 다를 것입니다. 오늘 다룰 모든 코드는 이 노트북에서 찾을 수 있습니다:\n\n필요한 라이브러리를 가져와 데이터셋을 생성해 봅시다.\n\n```js\nimport numpy as np\nimport torch\nimport torch.nn as nn\nfrom torchsummary import summary\nfrom kan import KAN, create_dataset\nimport matplotlib.pyplot as plt\n```\n\n여기서 우리가 사용하는 것입니다:\n\n<div class=\"content-ad\"></div>\n\n- numpy: 숫자 연산에 사용됩니다.\n- torch: PyTorch 용으로, 신경망 구축 및 훈련에 사용됩니다.\n- torch.nn: PyTorch 내에서의 신경망 모듈에 사용됩니다.\n- torchsummary: 모델 구조를 요약하는 데 사용됩니다.\n- kan: KAN 모델 및 데이터셋 생성 함수를 포함하는 사용자 지정 라이브러리입니다.\n- matplotlib.pyplot: 그래프 그리기와 시각화에 사용됩니다.\n\n```js\n# 데이터셋 생성 함수 정의\nf = lambda x: torch.exp(torch.sin(torch.pi * x[:, [0]]) + x[:, [1]] ** 2)\n```\n\n이 함수에는 삼각함수(sin)와 지수함수(exp) 요소가 모두 포함되어 있습니다. 이 함수는 2차원 입력 x를 취하고 다음 공식을 사용하여 출력을 계산합니다:\n\n<img src=\"/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_11.png\" />\n\n<div class=\"content-ad\"></div>\n\n이제 [-2, 2] 사이에서 균일하게 분포된 100개의 점의 텐서를 이 함수에 맞춰 보겠습니다.\n\n![function](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_12.png)\n\n```js\n# 데이터셋 생성\ndataset = create_dataset(f, n_var=2)\n```\n\ncreate_dataset은 함수 f를 기반으로 데이터셋을 생성합니다. 이 데이터셋에는 신경망의 훈련 및 테스트에 사용될 입력-출력 쌍이 포함됩니다.\n\n<div class=\"content-ad\"></div>\n\n자, 이제 데이터셋을 사용하여 KAN 모델을 구축하고 훈련시킬 차례입니다. \n우리는 먼저 더 넓은 격자 (5 포인트)로 시작하여 점진적으로 더 섬세한 세부 사항을 캡처하기 위해 그것을 미세 조정할 것입니다(최대 100 포인트까지).\n이것은 데이터의 세부 사항을 잡아내어 모델의 정확도를 향상시킵니다.\n\n```js\ngrids = np.array([5, 10, 20, 50, 100])\ntrain_losses_kan = []\ntest_losses_kan = []\nsteps = 50\nk = 3\n\nfor i in range(grids.shape[0]):\n    if i == 0:\n        model = KAN(width=[2, 1, 1], grid=grids[i], k=k)\n    else:\n        model = KAN(width=[2, 1, 1], grid=grids[i], k=k).initialize_from_another_model(model, dataset['train_input'])\n    results = model.train(dataset, opt=\"LBFGS\", steps=steps, stop_grid_update_step=30)\n    train_losses_kan += results['train_loss']\n    test_losses_kan += results['test_loss']\n\n    print(f\"Train RMSE: {results['train_loss'][-1]:.8f} | Test RMSE: {results['test_loss'][-1]:.8f}\")\n```\n\n이 예시에서 우리는 [5, 10, 20, 50, 100]의 값으로 grids라는 배열을 정의했습니다. 이러한 격자들을 순차적으로 모델 적합에 사용하며, 새 모델을 이전 모델을 사용하여 초기화합니다.\n\n각 반복마다, k=3인 모델을 정의합니다. 여기서 k는 B-스플라인의 순서를 나타냅니다. 훈련 단계(또는 에포크) 수를 50으로 설정합니다. 모델의 아키텍처는 2개의 노드를 가진 입력 레이어, 1개의 노드를 가진 은닉 레이어 및 1개의 노드를 가진 출력 레이어로 구성됩니다. LFGBS 옵티마이저를 사용하여 훈련합니다.\n\n<div class=\"content-ad\"></div>\n\n아래는 훈련 과정 중의 훈련 및 테스트 손실입니다:\n\n![loss graph](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_13.png)\n\n이제 전통적인 MLP를 정의하고 훈련하여 비교해 보겠습니다.\n\n```python\n# MLP 정의\nclass MLP(nn.Module):\n    def __init__(self):\n        super(MLP, self).__init__()\n        self.layers = nn.Sequential(\n            nn.Linear(dataset['train_input'].shape[1], 64),\n            nn.ReLU(),\n            nn.Linear(64, 64),\n            nn.ReLU(),\n            nn.Linear(64, 1)\n        )\n    def forward(self, x):\n        return self.layers(x)\n\n# 모델 인스턴스화\nmodel = MLP()\nsummary(model, input_size=(dataset['train_input'].shape[1],))\n```\n\n<div class=\"content-ad\"></div>\n\nMLP는 입력 레이어, 64개의 뉴런을 가진 두 개의 히든 레이어 및 출력 레이어를 가지고 있습니다. 레이어 간에는 ReLU 활성화 함수가 사용됩니다.\n\n```js\ncriterion = nn.MSELoss()\noptimizer = torch.optim.Adam(model.parameters(), lr=1e-2)\ntrain_loss_mlp = []\ntest_loss_mlp = []\n\nepochs = 250\nfor epoch in range(epochs):\n    optimizer.zero_grad()\n    output = model(dataset['train_input']).squeeze()\n    loss = criterion(output, dataset['train_label'])\n    loss.backward()\n    optimizer.step()\n    train_loss_mlp.append(loss.item()**0.5)\n\n    # 모델 테스트\n    model.eval()\n    with torch.no_grad():\n        output = model(dataset['test_input']).squeeze()\n        loss = criterion(output, dataset['test_label'])\n        test_loss_mlp.append(loss.item()**0.5)\n\n    print(f'에폭 {epoch+1}/{epochs}, 훈련 손실: {train_loss_mlp[-1]:.2f}, 테스트 손실: {test_loss_mlp[-1]:.2f}', end='\\r')\r\n```\n\n평균 제곱 오차 (MSE) 손실과 Adam 옵티마이저를 사용하고 모델을 250 에폭 동안 훈련하여 훈련 및 테스트 손실을 기록합니다.\n\nMLP에서 훈련 및 테스트 RMSE가 어떻게 나타나는지 보여드리겠습니다:\n\n<div class=\"content-ad\"></div>\n\n아래는 비교를 위해 손실 그래프를 나란히 두어 보겠습니다:\n\n![](/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_15.png)\n\n이 그래프는 KAN 모델이 MLP 모델보다 더 낮은 훈련 RMSE를 달성하여 더 나은 함수 맞추기 능력을 나타낸다는 것을 보여줍니다. 마찬가지로, KAN 모델은 시험 세트에서 MLP를 능가하여 뛰어난 일반화 능력을 보여줍니다.\n\n<div class=\"content-ad\"></div>\n\n이 예시는 KAN이 유연하고 적응적인 구조 덕분에 복잡한 함수들을 전통적인 MLP보다 더 정확하게 맞출 수 있다는 것을 보여줍니다. 격자를 세밀하게 조정하고 가장자리에 학습 가능한 일변량 함수를 사용함으로써, KAN은 MLP가 놓치는 데이터의 복잡한 패턴을 포착하여 함수 맞추기 작업에서 성능을 향상시킵니다.\n\n그렇다면 우리는 영구적으로 KAN 모델로 전환해야 한다는 것을 의미합니까? 꼭 그렇지는 않습니다.\n\n이 예시에서 KAN은 훌륭한 결과를 보여주었지만, 다른 실제 데이터 시나리오에서 KAN을 시험한 결과, MLP가 더 좋은 성능을 내는 경우가 많았습니다. KAN 모델을 사용할 때 주목해야 할 점은 하이퍼파라미터 최적화에 대한 민감성입니다. 또한, KAN은 주로 스플라인 함수를 사용하여 테스트되었는데, 이는 저희 예시와 같이 부드럽게 변하는 데이터에는 잘 맞지만 다른 상황에서는 그렇지 않을 수 있습니다.\n\n요약하자면, KAN은 분명히 매력적이고 많은 잠재력을 가지고 있지만, 실제로 효과적으로 작동하기 위해서는 다른 데이터셋 및 알고리즘 내부 동작에 대해 더 많은 연구가 필요합니다.\n\n<div class=\"content-ad\"></div>\n\n# 5: KAN의 장점\n\n## 정확성\n\nKolmogorov-Arnold Networks (KANs)의 두드러진 장점 중 하나는 전통적인 Multi-Layer Perceptrons (MLPs)에 비해 적은 매개변수로 더 높은 정확도를 달성할 수 있는 능력입니다. 이는 주로 에지에 있는 학습 가능한 활성화 함수 때문에 가능한데, 이는 KAN이 데이터 내의 복잡한 패턴과 관계를 더 잘 포착할 수 있게 합니다.\n\n각 노드에 고정된 활성화 함수를 사용하는 MLP와 달리, KAN은 에지에서 단변량 함수를 사용하여 네트워크를 더 융통성 있게 만들고 학습 프로세스를 데이터에 더 잘 맞출 수 있도록 합니다.\n\n<div class=\"content-ad\"></div>\n\nKANs은 층간 기능을 동적으로 조절할 수 있기 때문에 더 적은 매개변수로 비교적 높은 정확도를 얻을 수 있습니다. 이 효율성은 데이터나 계산 리소스가 제한된 작업에 특히 유용합니다.\n\n## 해석가능성\n\nKANs은 전통적인 MLPs에 비해 해석력을 크게 향상시킵니다. 이 향상된 해석력은 의사 결정 과정을 이해하는 것이 결과만큼 중요한 응용 프로그램에 중요합니다.\n\nKANs은 희소화(sparsification) 및 가지치기(pruning)와 같은 기술을 통해 단순화될 수 있습니다. 이러한 기술은 해석력을 향상시키는 뿐만 아니라 가장 관련성이 높은 구성 요소에 집중함으로써 네트워크의 성능을 향상시킵니다.\n\n<div class=\"content-ad\"></div>\n\n일부 함수의 경우 활성화 함수의 기호적 형태를 식별할 수 있으며, 이를 통해 네트워크 내에서 발생하는 수학적 변환을 이해하기 쉬워집니다.\n\n## 확장성\n\nKAN은 MLP와 비교했을 때 더 빠른 신경 확장 법칙을 나타내며, 매개변수의 수가 증가함에 따라 더 신속하게 개선됩니다.\n\nKAN은 복잡한 함수를 더 단순한 단변량 함수로 분해할 수 있는 능력으로 인해 보다 유리한 확장 법칙을 갖게 되어, MLP보다 모델 복잡도가 증가함에 따라 더 효율적으로 낮은 오류율을 달성할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\nKANs는 훈련 중에 더 미세한 그리드까지 더욱 세분화된 그리드로 시작하여 계산 효율성과 정확도를 균형있게 유지하도록 합니다. 이 접근 방식은 MLPs보다 KANs가 보다 우아하게 확장될 수 있게 하며, 모델 크기를 증가시킬 때 완전히 재훈련이 필요한 MLPs보다 우수한 성능을 제공합니다.\n\n# 결론\n\nKolmogorov-Arnold Networks (KANs)는 전통적인 Multi-Layer Perceptrons (MLPs)에 비해 혁신적인 대안을 제시하여 이전 모델의 한계를 해소하는 핵심 혁신을 제공합니다. KANs는 노드에서 고정된 함수 대신 가장자리에 가중치가 있는 활성화 함수를 활용함으로써 새로운 수준의 유연성과 적응성을 도입합니다. 이 구조적인 변화로 인해 다음과 같은 장점을 제공합니다:\n\n- 향상된 정확도: 더 적은 매개변수로 더 높은 정확도를 달성하는 KANs는 다양한 작업에 더 효율적이고 효과적입니다.\n- 향상된 해석력: KANs를 시각화하고 단순화할 수 있는 능력은 건강 관리, 금융 및 자율 시스템과 같은 중요한 응용 분야에서 의사 결정 과정을 이해하는 데 도움이 됩니다.\n- 더 나은 확장성: KANs는 더 빠른 신경 확장 법칙을 나타내며 MLPs보다 증가하는 복잡성을 우아하게 처리할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n콜모고로프-아놀드 네트워크 소개는 신경망 분야에서 흥미로운 발전을 의미합니다. 이는 AI 및 머신 러닝에 대한 새로운 가능성을 열어줍니다.\n\n# 참고 자료\n\n- Ziming Liu, 등. “KAN: 콜모고로프-아놀드 네트워크”. https://arxiv.org/abs/2404.19756","ogImage":{"url":"/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_0.png"},"coverImage":"/assets/img/2024-06-19-TheMathBehindKANKolmogorov-ArnoldNetworks_0.png","tag":["Tech"],"readingTime":14}],"page":"94","totalPageCount":113,"totalPageGroupCount":6,"lastPageGroup":20,"currentPageGroup":4},"__N_SSG":true}