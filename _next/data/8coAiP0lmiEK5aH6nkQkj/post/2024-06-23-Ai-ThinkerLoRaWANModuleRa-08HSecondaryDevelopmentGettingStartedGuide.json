{"pageProps":{"post":{"title":"Ai-Thinker LoRaWAN 모듈 Ra-08H 2차 개발 가이드 시작하기","description":"","date":"2024-06-23 17:15","slug":"2024-06-23-Ai-ThinkerLoRaWANModuleRa-08HSecondaryDevelopmentGettingStartedGuide","content":"\n\n# 내용\n\n## 0. 소개\n\nAi-Thinker는 IoT 무선 디자인 전문가로, 제조와 배포가 간단하고 유연하며 쉬운 솔루션에 중점을 두고 있습니다. Ai-Thinker는 안정적인 성능과 저전력 소비를 갖춘 통합 SoC를 사용한 무선 시스템 수준 모듈 제품을 개발하고 설계합니다. 또한 Wi-Fi, LoRaWAN, Bluetooth 및 UWB 기능을 갖춘 다양한 모듈을 제공하며, 이러한 모듈은 우수한 RF 성능을 갖추고 있습니다.\n\nRa-08(H) 모듈은 Ai-Thinker 기술과 상하이 ASR 마이크로 일렉트로닉스(ASR)가 심층적으로 공동 개발한 LoRaWAN 모듈입니다. 이 리포지토리는 LoRaWAN 모듈 SoC의 이차 개발을 시작하는 가이드입니다. 해당 칩 모델은 ASR6601CB이며, 플래시 128 KB, SRAM 16 KB, 32비트 48 MHz ARM Cortex-M4 커널을 탑재하고 있습니다.\n\n<div class=\"content-ad\"></div>\n\nRa-08(H) 모듈에는 기본적으로 내장된 AT 펌웨어 프로그램이 있어 LoRaWAN 게이트웨이에 직접 연결할 수 있습니다. Ali LinkWAN에 연결해야 하는 경우, 이 저장소 코드를 프로그래밍해야 합니다.\n\n# 1.목적\n\n리눅스 환경을 기반으로 이 문서는 An-Thinker의 Ra-08(H) 모듈의 포인트 투 포인트 통신의 2차 개발 과정을 소개합니다. 참고용으로 제공됩니다.\n\n# 2.하드웨어 준비\n\n<div class=\"content-ad\"></div>\n\n• 리눅스 환경\n컴파일 및 프로그래밍 및 실행 작업에 필요한 환경으로, 이 문서는 (Ubuntu18.04)을 예로 듭니다.\n\n- 장비\nAi-Thinker의 알리바바 스토어에서 샘플을 받아 2개의 모듈과 안테나를 구해주세요.\n- USB 케이블\nPC와 Ra-08 개발 보드를 연결하여 프로그램을 업로드하고 다운로드하며 로그를 확인할 수 있습니다.\n\n# 3. Ra-08 개발 보드 준비\n\n판매 모듈지원 여부Ra-08지원Ra-08H지원\n\n<div class=\"content-ad\"></div>\n\n# 4. 컴파일러 환경 설정\n\n```js\nsudo apt-get install gcc-arm-none-eabi git vim python python-pip\npip install pyserial configparser\n```\n\n# 5. SDK 준비\n\n```js\ngit clone --recursive https://github.com/Ai-Thinker-Open/Ai-Thinker-LoRaWAN-Ra-08.git\n```\n\n<div class=\"content-ad\"></div>\n\n# 6. 컴파일 및 프로그래밍 및 실행\n\n# 6.1 컴파일\n\n# 6.1.1 환경 변수 구성\n\n```js\nsource build/envsetup.sh\n```\n\n<div class=\"content-ad\"></div>\n\n# 6.1.2 상호 통신 컴파일 예시\n\n```bash\ncd projects/ASR6601CB-EVAL/examples/lora/pingpong/\nmake\n```\n\n상호 통신 컴파일 예시\n\n```bash\n\"arm-none-eabi-size\" out/pingpong.elf\n   text    data     bss     dec     hex filename\n  21312    1092    4656   27060    69b4 out/pingpong.elf\n앱을 다운로드하려면 'make flash' 또는 다음 명령어를 실행하십시오.\npython /mnt/d/GitHub/ASR6601_AT_LoRaWAN/build/scripts/tremo_loader.py -p /dev/ttyUSB0 -b 921600 flash 0x08000000 out/pingpong.bin\n```\n\n<div class=\"content-ad\"></div>\n\n시리얼 포트를 확인하고, 예를 들어, 여기서 내 액세스 시리얼 포트는 /dev/ttyUSB2입니다：\n\n```js\npython /mnt/d/GitHub/ASR6601_AT_LoRaWAN/build/scripts/tremo_loader.py -p /dev/ttyUSB2 -b 921600 flash 0x08000000 out/pingpong.bin\n```\n\n# 6.2 프로젝트 컴파일 파일 제거 및 컴파일 및 플래시 및 펌웨어 다운로드 및 보기\n\nUSB 케이블을 장치와 PC에 연결하고, 프로그래밍 포트가 올바른지 확인한 후, 아래 단계를 따라 모듈을 다운로드 모드로 전환하세요.\n\n<div class=\"content-ad\"></div>\n\n\n![Ai-Thinker LoRaWAN Module Ra-08H Secondary Development Getting Started Guide](/assets/img/2024-06-23-Ai-ThinkerLoRaWANModuleRa-08HSecondaryDevelopmentGettingStartedGuide_0.png)\n\n첫 번째로 하드웨어에 연결하려면 기본 포트 번호와 보레이트를 수정하고, \\build\\make\\common.mk 파일에서 수정해주세요:\n\n```js\n# flash settings\nTREMO_LOADER := $(SCRIPTS_PATH)/tremo_loader.py\nSERIAL_PORT        ?= /dev/ttyUSB0\nSERIAL_BAUDRATE    ?= 921600\n```\n\n# 6.2.1 프로젝트 컴파일 파일 지우기\n\n\n<div class=\"content-ad\"></div>\n\n```js\nmake clean\n```\n\n## 6.2.2 프로그램 불러오기\n\n```js\nmake flash\n```\n\n## 6.2.3 실행하기\n\n<div class=\"content-ad\"></div>\n\n두 개의 Ra-08-Kit 개발 보드에서 RST 버튼을 누르면 다음 로그를 확인할 수 있습니다:\n\n```js\nReceived: PING\nSent: PONG\nReceived: PING\nSent: PONG\nReceived: PING\nSent: PONG\nReceived: PING\nSent: PONG\nReceived: PING\nSent: PONG\nReceived: PING\nSent: PONG\n```\n\nSDK: https://github.com/Ai-Thinker-Open/Ai-Thinker-LoRaWAN-Ra-08\n\n지원이 필요하시면 연락해주세요.\n\n<div class=\"content-ad\"></div>\n\nEmail: tara@aithinker.com\n\nWhatsapp/wechat: +8615817421307","ogImage":{"url":"/assets/img/2024-06-23-Ai-ThinkerLoRaWANModuleRa-08HSecondaryDevelopmentGettingStartedGuide_0.png"},"coverImage":"/assets/img/2024-06-23-Ai-ThinkerLoRaWANModuleRa-08HSecondaryDevelopmentGettingStartedGuide_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h1>내용</h1>\n<h2>0. 소개</h2>\n<p>Ai-Thinker는 IoT 무선 디자인 전문가로, 제조와 배포가 간단하고 유연하며 쉬운 솔루션에 중점을 두고 있습니다. Ai-Thinker는 안정적인 성능과 저전력 소비를 갖춘 통합 SoC를 사용한 무선 시스템 수준 모듈 제품을 개발하고 설계합니다. 또한 Wi-Fi, LoRaWAN, Bluetooth 및 UWB 기능을 갖춘 다양한 모듈을 제공하며, 이러한 모듈은 우수한 RF 성능을 갖추고 있습니다.</p>\n<p>Ra-08(H) 모듈은 Ai-Thinker 기술과 상하이 ASR 마이크로 일렉트로닉스(ASR)가 심층적으로 공동 개발한 LoRaWAN 모듈입니다. 이 리포지토리는 LoRaWAN 모듈 SoC의 이차 개발을 시작하는 가이드입니다. 해당 칩 모델은 ASR6601CB이며, 플래시 128 KB, SRAM 16 KB, 32비트 48 MHz ARM Cortex-M4 커널을 탑재하고 있습니다.</p>\n<div class=\"content-ad\"></div>\n<p>Ra-08(H) 모듈에는 기본적으로 내장된 AT 펌웨어 프로그램이 있어 LoRaWAN 게이트웨이에 직접 연결할 수 있습니다. Ali LinkWAN에 연결해야 하는 경우, 이 저장소 코드를 프로그래밍해야 합니다.</p>\n<h1>1.목적</h1>\n<p>리눅스 환경을 기반으로 이 문서는 An-Thinker의 Ra-08(H) 모듈의 포인트 투 포인트 통신의 2차 개발 과정을 소개합니다. 참고용으로 제공됩니다.</p>\n<h1>2.하드웨어 준비</h1>\n<div class=\"content-ad\"></div>\n<p>• 리눅스 환경\n컴파일 및 프로그래밍 및 실행 작업에 필요한 환경으로, 이 문서는 (Ubuntu18.04)을 예로 듭니다.</p>\n<ul>\n<li>장비\nAi-Thinker의 알리바바 스토어에서 샘플을 받아 2개의 모듈과 안테나를 구해주세요.</li>\n<li>USB 케이블\nPC와 Ra-08 개발 보드를 연결하여 프로그램을 업로드하고 다운로드하며 로그를 확인할 수 있습니다.</li>\n</ul>\n<h1>3. Ra-08 개발 보드 준비</h1>\n<p>판매 모듈지원 여부Ra-08지원Ra-08H지원</p>\n<div class=\"content-ad\"></div>\n<h1>4. 컴파일러 환경 설정</h1>\n<pre><code class=\"hljs language-js\">sudo apt-get install gcc-arm-none-eabi git vim python python-pip\npip install pyserial configparser\n</code></pre>\n<h1>5. SDK 준비</h1>\n<pre><code class=\"hljs language-js\">git clone --recursive <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//github.com/Ai-Thinker-Open/Ai-Thinker-LoRaWAN-Ra-08.git</span>\n</code></pre>\n<div class=\"content-ad\"></div>\n<h1>6. 컴파일 및 프로그래밍 및 실행</h1>\n<h1>6.1 컴파일</h1>\n<h1>6.1.1 환경 변수 구성</h1>\n<pre><code class=\"hljs language-js\">source build/envsetup.<span class=\"hljs-property\">sh</span>\n</code></pre>\n<div class=\"content-ad\"></div>\n<h1>6.1.2 상호 통신 컴파일 예시</h1>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-built_in\">cd</span> projects/ASR6601CB-EVAL/examples/lora/pingpong/\nmake\n</code></pre>\n<p>상호 통신 컴파일 예시</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-string\">\"arm-none-eabi-size\"</span> out/pingpong.elf\n   text    data     bss     dec     hex filename\n  21312    1092    4656   27060    69b4 out/pingpong.elf\n앱을 다운로드하려면 <span class=\"hljs-string\">'make flash'</span> 또는 다음 명령어를 실행하십시오.\npython /mnt/d/GitHub/ASR6601_AT_LoRaWAN/build/scripts/tremo_loader.py -p /dev/ttyUSB0 -b 921600 flash 0x08000000 out/pingpong.bin\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>시리얼 포트를 확인하고, 예를 들어, 여기서 내 액세스 시리얼 포트는 /dev/ttyUSB2입니다：</p>\n<pre><code class=\"hljs language-js\">python /mnt/d/<span class=\"hljs-title class_\">GitHub</span>/<span class=\"hljs-title class_\">ASR6601</span>_AT_LoRaWAN/build/scripts/tremo_loader.<span class=\"hljs-property\">py</span> -p /dev/ttyUSB2 -b <span class=\"hljs-number\">921600</span> flash <span class=\"hljs-number\">0x08000000</span> out/pingpong.<span class=\"hljs-property\">bin</span>\n</code></pre>\n<h1>6.2 프로젝트 컴파일 파일 제거 및 컴파일 및 플래시 및 펌웨어 다운로드 및 보기</h1>\n<p>USB 케이블을 장치와 PC에 연결하고, 프로그래밍 포트가 올바른지 확인한 후, 아래 단계를 따라 모듈을 다운로드 모드로 전환하세요.</p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-23-Ai-ThinkerLoRaWANModuleRa-08HSecondaryDevelopmentGettingStartedGuide_0.png\" alt=\"Ai-Thinker LoRaWAN Module Ra-08H Secondary Development Getting Started Guide\"></p>\n<p>첫 번째로 하드웨어에 연결하려면 기본 포트 번호와 보레이트를 수정하고, \\build\\make\\common.mk 파일에서 수정해주세요:</p>\n<pre><code class=\"hljs language-js\"># flash settings\n<span class=\"hljs-variable constant_\">TREMO_LOADER</span> := $(<span class=\"hljs-variable constant_\">SCRIPTS_PATH</span>)/tremo_loader.<span class=\"hljs-property\">py</span>\n<span class=\"hljs-variable constant_\">SERIAL_PORT</span>        ?= <span class=\"hljs-regexp\">/dev/</span>ttyUSB0\n<span class=\"hljs-variable constant_\">SERIAL_BAUDRATE</span>    ?= <span class=\"hljs-number\">921600</span>\n</code></pre>\n<h1>6.2.1 프로젝트 컴파일 파일 지우기</h1>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\">make clean\n</code></pre>\n<h2>6.2.2 프로그램 불러오기</h2>\n<pre><code class=\"hljs language-js\">make flash\n</code></pre>\n<h2>6.2.3 실행하기</h2>\n<div class=\"content-ad\"></div>\n<p>두 개의 Ra-08-Kit 개발 보드에서 RST 버튼을 누르면 다음 로그를 확인할 수 있습니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">Received</span>: <span class=\"hljs-variable constant_\">PING</span>\n<span class=\"hljs-title class_\">Sent</span>: <span class=\"hljs-variable constant_\">PONG</span>\n<span class=\"hljs-title class_\">Received</span>: <span class=\"hljs-variable constant_\">PING</span>\n<span class=\"hljs-title class_\">Sent</span>: <span class=\"hljs-variable constant_\">PONG</span>\n<span class=\"hljs-title class_\">Received</span>: <span class=\"hljs-variable constant_\">PING</span>\n<span class=\"hljs-title class_\">Sent</span>: <span class=\"hljs-variable constant_\">PONG</span>\n<span class=\"hljs-title class_\">Received</span>: <span class=\"hljs-variable constant_\">PING</span>\n<span class=\"hljs-title class_\">Sent</span>: <span class=\"hljs-variable constant_\">PONG</span>\n<span class=\"hljs-title class_\">Received</span>: <span class=\"hljs-variable constant_\">PING</span>\n<span class=\"hljs-title class_\">Sent</span>: <span class=\"hljs-variable constant_\">PONG</span>\n<span class=\"hljs-title class_\">Received</span>: <span class=\"hljs-variable constant_\">PING</span>\n<span class=\"hljs-title class_\">Sent</span>: <span class=\"hljs-variable constant_\">PONG</span>\n</code></pre>\n<p>SDK: <a href=\"https://github.com/Ai-Thinker-Open/Ai-Thinker-LoRaWAN-Ra-08\" rel=\"nofollow\" target=\"_blank\">https://github.com/Ai-Thinker-Open/Ai-Thinker-LoRaWAN-Ra-08</a></p>\n<p>지원이 필요하시면 연락해주세요.</p>\n<div class=\"content-ad\"></div>\n<p>Email: <a href=\"mailto:tara@aithinker.com\">tara@aithinker.com</a></p>\n<p>Whatsapp/wechat: +8615817421307</p>\n</body>\n</html>\n"},"__N_SSG":true}