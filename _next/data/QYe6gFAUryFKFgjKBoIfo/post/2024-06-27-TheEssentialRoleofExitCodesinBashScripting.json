{"pageProps":{"post":{"title":"Bash 스크립트에서 Exit Code의 필수 역할","description":"","date":"2024-06-27 18:35","slug":"2024-06-27-TheEssentialRoleofExitCodesinBashScripting","content":"\n\n## 파트 4: if 문과 함께 종료 코드 사용하기, 종료 코드를 강제로 조작하기.\n\n![이미지](/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_0.png)\n\n## 리눅스에서의 종료 코드란:\n\n리눅스 및 유닉스와 유사한 시스템에서는 종료 코드(exit code)란 명령어나 스크립트가 완료된 후에 반환되는 숫자 값입니다. 해당 코드는 명령어나 스크립트 실행의 성공 또는 실패를 나타냅니다.\n\n<div class=\"content-ad\"></div>\n\n여기 몇 가지가 있습니다:\n\n- 0: 성공. 명령 또는 스크립트가 오류 없이 성공적으로 실행되었습니다.\n- 1: 일반 오류. 명령이나 스크립트에서 오류가 발생했습니다.\n- 2: 쉘 내장 명령의 오용 (Bash 문서에 따라).\n- 127: 명령을 찾을 수 없음. 시스템의 PATH에서 찾으려는 명령을 찾을 수 없을 때 발생합니다.\n\n모든 0이 아닌 종료 코드는 일종의 실패로 간주될 수 있습니다.\n\n![이미지](/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_1.png)\n\n<div class=\"content-ad\"></div>\n\n```bash\n#!/bin/bash\n\napp=randomtext\n\nsudo apt install $app\n\necho \"The installation status for $app is: $?\"\n```\n\n<div class=\"content-ad\"></div>\n\n\n![Image](/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_3.png)\n\n## 작업 수행을 위한 종료 코드 사용:\n\n결과에 따라 조건문과 종료 코드를 사용해서 특정 작업을 수행할 수 있습니다.\n예를 들어, 하나가 실패할 경우 diff 명령어를 실행할 수 있습니다.\n\n```bash\n#!/bin/bash\n\napp=curly\n\nsudo apt install $app\n\n#echo \"The installation status for $app is: $?\"\n\nif [ $? -eq 0 ]\nthen\n        echo \"$app이(가) 설치되었습니다.\"\n        which $app\nelse\n        echo \"$app이(가) 설치에 실패했습니다. 스크립트를 확인해주세요.\"\nfi\n```\n\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_4.png)\n\n종료 상태를 확인할 때는 올바른 위치에 확인을 배치해야 합니다.\n\n예를 들어, 위 스크립트에서 echo 문을 주석 처리를 해제하면 결과가 다릅니다.\n\n![이미지](/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_5.png)\n\n\n<div class=\"content-ad\"></div>\n\n이 스크립트는 일반적인 apt 오류가 해당 패키지를 찾을 수 없다고 말하더라도 \"curly was installed\"를 출력합니다.\n\n왜냐하면? 이전 echo 문이 그렇습니다. echo의 실행이 성공적이었고 상태가 0으로 변경되었습니다. 이제 우리는 echo 이후의 상태를 확인하기 때문에 조건이 일치합니다.\n\n## 종료 상태 강제하기:\n\n\"exit\" 키워드를 사용하여 스크립트가 특정 종료 코드로 실행되도록 강제할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```bash\n#!/bin/bash\n\necho \"Hello World\"\n\necho \"위 명령문에 대한 정상 종료 코드는: $?, 'echo \\$?'로 확인하세요\"\n\nexit 155\n\necho \"Hi\"\n```\n\n이 스크립트는 처음 두 개의 echo 문을 출력하고 종료 코드는 설정한 값이 될 것입니다.\n\n![이미지](/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_6.png)\n\nexit 문은 설정한 값에 관계없이 스크립트 실행을 종료합니다.\n\n<div class=\"content-ad\"></div>\n\n비슷하게, 종료 코드를 0으로 설정했을 경우에는 명령 실패에도 상태가 0이 됩니다.\n\n```bash\n#!/bin/bash\n\nxyz\n\necho \"위 명령문의 일반적인 종료 코드는: $?, 'echo \\$?'로 확인하세요\"\n\nexit 0\n\necho \"안녕\"\n```\n\n![이미지](/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_7.png)\n\nif 블록 내부에서의 종료도 블록만 종료하는 것이 아니라 전체 스크립트를 종료합니다.\n\n<div class=\"content-ad\"></div>\n\n```bash\na=5 # try 7\n\nif [ $a -eq 5 ]\nthen\n   echo \"condition is true\"\n   exit 0\nelse\n    echo \"condition is false\"\n    exit 1\n    echo \"end else\"\nfi\necho \"the end\"\n```\n\n![Image](/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_8.png)\n\n참고: 코드가 없는 상태의 exit문도 스크립트를 종료합니다.\n\n이상으로 모두 설명했습니다.\n\n\n<div class=\"content-ad\"></div>\n\n참고 자료: LearnLinuxTV\n\n더 많은 내용을 보시려면 Bash를 참조하세요:","ogImage":{"url":"/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_0.png"},"coverImage":"/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h2>파트 4: if 문과 함께 종료 코드 사용하기, 종료 코드를 강제로 조작하기.</h2>\n<p><img src=\"/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_0.png\" alt=\"이미지\"></p>\n<h2>리눅스에서의 종료 코드란:</h2>\n<p>리눅스 및 유닉스와 유사한 시스템에서는 종료 코드(exit code)란 명령어나 스크립트가 완료된 후에 반환되는 숫자 값입니다. 해당 코드는 명령어나 스크립트 실행의 성공 또는 실패를 나타냅니다.</p>\n<div class=\"content-ad\"></div>\n<p>여기 몇 가지가 있습니다:</p>\n<ul>\n<li>0: 성공. 명령 또는 스크립트가 오류 없이 성공적으로 실행되었습니다.</li>\n<li>1: 일반 오류. 명령이나 스크립트에서 오류가 발생했습니다.</li>\n<li>2: 쉘 내장 명령의 오용 (Bash 문서에 따라).</li>\n<li>127: 명령을 찾을 수 없음. 시스템의 PATH에서 찾으려는 명령을 찾을 수 없을 때 발생합니다.</li>\n</ul>\n<p>모든 0이 아닌 종료 코드는 일종의 실패로 간주될 수 있습니다.</p>\n<p><img src=\"/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_1.png\" alt=\"이미지\"></p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/bash</span>\n\napp=randomtext\n\nsudo apt install <span class=\"hljs-variable\">$app</span>\n\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"The installation status for <span class=\"hljs-variable\">$app</span> is: $?\"</span>\n</code></pre>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_3.png\" alt=\"Image\"></p>\n<h2>작업 수행을 위한 종료 코드 사용:</h2>\n<p>결과에 따라 조건문과 종료 코드를 사용해서 특정 작업을 수행할 수 있습니다.\n예를 들어, 하나가 실패할 경우 diff 명령어를 실행할 수 있습니다.</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/bash</span>\n\napp=curly\n\nsudo apt install <span class=\"hljs-variable\">$app</span>\n\n<span class=\"hljs-comment\">#echo \"The installation status for $app is: $?\"</span>\n\n<span class=\"hljs-keyword\">if</span> [ $? -eq 0 ]\n<span class=\"hljs-keyword\">then</span>\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$app</span>이(가) 설치되었습니다.\"</span>\n        <span class=\"hljs-built_in\">which</span> <span class=\"hljs-variable\">$app</span>\n<span class=\"hljs-keyword\">else</span>\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$app</span>이(가) 설치에 실패했습니다. 스크립트를 확인해주세요.\"</span>\n<span class=\"hljs-keyword\">fi</span>\n</code></pre>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_4.png\" alt=\"이미지\"></p>\n<p>종료 상태를 확인할 때는 올바른 위치에 확인을 배치해야 합니다.</p>\n<p>예를 들어, 위 스크립트에서 echo 문을 주석 처리를 해제하면 결과가 다릅니다.</p>\n<p><img src=\"/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_5.png\" alt=\"이미지\"></p>\n<div class=\"content-ad\"></div>\n<p>이 스크립트는 일반적인 apt 오류가 해당 패키지를 찾을 수 없다고 말하더라도 \"curly was installed\"를 출력합니다.</p>\n<p>왜냐하면? 이전 echo 문이 그렇습니다. echo의 실행이 성공적이었고 상태가 0으로 변경되었습니다. 이제 우리는 echo 이후의 상태를 확인하기 때문에 조건이 일치합니다.</p>\n<h2>종료 상태 강제하기:</h2>\n<p>\"exit\" 키워드를 사용하여 스크립트가 특정 종료 코드로 실행되도록 강제할 수 있습니다.</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/bash</span>\n\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Hello World\"</span>\n\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"위 명령문에 대한 정상 종료 코드는: $?, 'echo \\$?'로 확인하세요\"</span>\n\n<span class=\"hljs-built_in\">exit</span> 155\n\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Hi\"</span>\n</code></pre>\n<p>이 스크립트는 처음 두 개의 echo 문을 출력하고 종료 코드는 설정한 값이 될 것입니다.</p>\n<p><img src=\"/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_6.png\" alt=\"이미지\"></p>\n<p>exit 문은 설정한 값에 관계없이 스크립트 실행을 종료합니다.</p>\n<div class=\"content-ad\"></div>\n<p>비슷하게, 종료 코드를 0으로 설정했을 경우에는 명령 실패에도 상태가 0이 됩니다.</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/bash</span>\n\nxyz\n\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"위 명령문의 일반적인 종료 코드는: $?, 'echo \\$?'로 확인하세요\"</span>\n\n<span class=\"hljs-built_in\">exit</span> 0\n\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"안녕\"</span>\n</code></pre>\n<p><img src=\"/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_7.png\" alt=\"이미지\"></p>\n<p>if 블록 내부에서의 종료도 블록만 종료하는 것이 아니라 전체 스크립트를 종료합니다.</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-bash\">a=5 <span class=\"hljs-comment\"># try 7</span>\n\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$a</span> -eq 5 ]\n<span class=\"hljs-keyword\">then</span>\n   <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"condition is true\"</span>\n   <span class=\"hljs-built_in\">exit</span> 0\n<span class=\"hljs-keyword\">else</span>\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"condition is false\"</span>\n    <span class=\"hljs-built_in\">exit</span> 1\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"end else\"</span>\n<span class=\"hljs-keyword\">fi</span>\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"the end\"</span>\n</code></pre>\n<p><img src=\"/assets/img/2024-06-27-TheEssentialRoleofExitCodesinBashScripting_8.png\" alt=\"Image\"></p>\n<p>참고: 코드가 없는 상태의 exit문도 스크립트를 종료합니다.</p>\n<p>이상으로 모두 설명했습니다.</p>\n<div class=\"content-ad\"></div>\n<p>참고 자료: LearnLinuxTV</p>\n<p>더 많은 내용을 보시려면 Bash를 참조하세요:</p>\n</body>\n</html>\n"},"__N_SSG":true}