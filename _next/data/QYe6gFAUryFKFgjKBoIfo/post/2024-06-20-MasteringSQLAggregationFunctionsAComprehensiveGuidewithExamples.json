{"pageProps":{"post":{"title":"SQL 집계 함수 마스터하기 예제와 함께 다루는 포괄적 가이드","description":"","date":"2024-06-20 15:48","slug":"2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples","content":"\n\n집계 함수는 데이터를 요약하고 분석할 때 SQL에서 중요한 역할을 합니다. 이들은 우리에게 통계 메트릭을 계산하고 데이터 그룹에 대한 계산을 수행하며 의미 있는 통찰을 얻을 수 있도록 해줍니다.\n\n![image](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_0.png)\n\n이 글에서는 COUNT, SUM, AVG, MIN, MAX, ROUND, GROUP BY, WITH ROLLUP, LIMIT, HAVING 등과 같은 가장 일반적으로 사용되는 10가지 MYSQL 집계 함수를 실제 예제와 함께 탐색해 보겠습니다.\n\n# 1. COUNT\n\n<div class=\"content-ad\"></div>\n\n해당 테이블의 열에서 비 널 값의 수를 반환하거나 테이블의 행 수를 반환합니다.\n\n예시:\nSELECT COUNT(*) AS total_rows\nFROM table_name;\n\nSELECT COUNT(column_name)\nFROM table_name;\n\n```js\n-- 저자 테이블에는 몇 개의 행이 있나요?\n\nSELECT COUNT(*) AS total_rows\nFROM authors;\n```\n\n<div class=\"content-ad\"></div>\n\n\n<img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_1.png\" />\n\n```js\n-- 데이터셋에 있는 작가는 몇 명인가요?\n\nSELECT COUNT(DISTINCT au_id) AS number_of_authors\nFROM authors;\n```\n\n<img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_2.png\" />\n\n```js\n-- 산호세 또는 솔트레이크시티에 거주하는 작가는 몇 명인가요?\n\nSELECT COUNT(au_id)\nFROM authors\nWHERE city IN (\"San Jose\", \"Salt Lake City\");\n```   \n\n\n<div class=\"content-ad\"></div>\n\n![image](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_3.png)\n\n```js\n-- 캘리포니아 주(CA)에 기반을 둔 상점의 수는?\n\nSELECT COUNT(DISTINCT stor_id) AS \"CA에 있는 상점 수\"\nFROM stores\nWHERE state = \"CA\";\n```\n\n![image](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_4.png)\n\n# 2. SUM\n\n<div class=\"content-ad\"></div>\n\n한 열의 값들의 합을 계산합니다.\n\n예시:\nSELECT SUM(column_name)\nFROM table_name;\n\n```js\n-- 수량에 따른 총 매출을 계산합니다.\n\nSELECT SUM(qty) AS sales_quantity\nFROM sales;\n```\n\n![이미지](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_5.png)\n\n<div class=\"content-ad\"></div>\n\n```js\n-- 각 상점의 판매량을 수량별로 찾아서 내림차순으로 정렬합니다.\n\nSELECT stor_id, SUM(qty) AS sales_quantity\nFROM sales\nGROUP BY stor_id\nORDER BY SUM(qty) DESC;\n```\n\n![마스터링 SQL 집계 함수: 예제를 활용한 포괄적인 가이드](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_6.png)\n\n# 3. AVG\n\n숫자 열의 평균 값을 계산합니다.\n\n<div class=\"content-ad\"></div>\n\n예시:\n\n```sql\n-- 테이블 sales에서 수량의 개수, 평균 및 합계를 표시합니다.\n\nSELECT COUNT(qty), AVG(qty), SUM(qty)\nFROM sales;\n```\n\n<img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_7.png\" />\n\n```sql\n-- 각 출판사가 가지고 있는 책의 수 및 책의 평균 가격을 찾습니다.\n\nSELECT pub_id, COUNT(title_id), AVG(price)\nFROM titles\nGROUP BY pub_id\nORDER BY COUNT(title_id) DESC;\n```\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_8.png)\n\n# 4. MIN\n\n특정 열에서 최솟값을 검색합니다.\n\n예시:\nSELECT MIN(열_이름)\nFROM 테이블_이름;\n\n\n<div class=\"content-ad\"></div>\n\n```sql\n-- 각 출판사의 책의 최소 가격을 찾아보세요.\n\nSELECT pub_id,  MIN(price) AS minimum_price\nFROM titles\nGROUP BY pub_id;\n```\n\n![이미지](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_9.png)\n\n# 5. MAX\n\n컬럼에서 최대값을 검색합니다.\n\n\n<div class=\"content-ad\"></div>\n\n예시:\n\n특정 발행사의 책들 중에서 가장 높은 가격을 알아봅시다.\n\n```js\nSELECT pub_id, MAX(price) AS maximum_price\nFROM titles\nGROUP BY pub_id;\n```\n\n<img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_10.png\" />\n\n# 6. ROUND\n\n<div class=\"content-ad\"></div>\n\n지정된 소수점 자리 수로 숫자 값을 반올림하는 데 사용됩니다.\n\n예시:\nSELECT ROUND(column_name, 소수점 자리 수)\nFROM table_name;\n\n```js\n-- 각 출판사의 책 평균 가격을 2자리 소숫점으로 표시합니다.\n\nSELECT pub_id,  ROUND(AVG(price),2) AS average_book_price\nFROM titles\nGROUP BY pub_id;\n```\n\n![이미지](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_11.png)\n\n<div class=\"content-ad\"></div>\n\n# 7. GROUP BY\n\n여러 열을 기반으로 행을 그룹화하고 각 그룹에 대해 집계를 수행합니다.\n\n예시:\n```sql\nSELECT column1, 집계_함수(column2)\nFROM table_name\nGROUP BY column1;\n```\n\n예시 코드:\n```sql\n-- 각 출판사의 누적 연간 매출을 찾아 내림차순으로 정렬합니다.\n\nSELECT pub_id,  SUM(ytd_sales)\nFROM titles\nGROUP BY pub_id\nORDER BY SUM(ytd_sales) DESC;\n```\n\n<div class=\"content-ad\"></div>\n\n\n![image](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_12.png)\n\n```js\n-- 각 발행사 및 각 제목의 총 YTD 판매량을 찾고 내림차순으로 정렬합니다.\n\nSELECT pub_id,  title,  SUM(ytd_sales)\nFROM titles\nGROUP BY pub_id, title;\n```\n\n![image](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_13.png)\n\n# 8. WITH ROLLUP\n\n\n<div class=\"content-ad\"></div>\n\n쿼리 결과에 여러 레벨에서 소계 및 총계를 생성합니다.\n\n*** 결과의 \"NULL\" 값은 소계 및 총계 행을 나타냅니다.\n\n예:\nSELECT column1, column2, Aggregate_function(column3)\nFROM table_name\nGROUP BY column1, column2\nWITH ROLLUP;\n\n```js\n// 각 publisher와 title의 평균 가격을 내림차순으로 정렬하여 보려면 다음과 같은 쿼리를 사용하세요.\n// 또한 WITH ROLLUP을 사용하여 소계 및 총계를 표시합니다.\n\nSELECT pub_id, title, SUM(ytd_sales)\nFROM titles\nGROUP BY pub_id, title\nWITH ROLLUP;\n```  \n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_14.png\" />\n\n# 9. LIMIT\n\n쿼리에서 반환되는 행의 수를 제한합니다.\n\n예시:\n```sql\nSELECT column1, column2\nFROM table_name\nLIMIT n;\n```\n\n<div class=\"content-ad\"></div>\n\n```sql\n-- 가장 많은 매출을 올린 상위 3개 매장을 찾아봅니다.\n\nSELECT stor_id, SUM(qty)\nFROM sales\nGROUP BY stor_id\nORDER BY SUM(qty) DESC\nLIMIT 3;\n```\n\n![링크](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_15.png)\n\n# 10. HAVING\n\n그룹화된 결과에 특정 조건을 기반으로 행을 필터링합니다.\nHAVING 절은 SUM, COUNT, AVG와 같은 집계 함수와 함께 사용됩니다.\n\n<div class=\"content-ad\"></div>\n\n**표** 태그를 마크다운 형식으로 변경해주세요.\n\n예시:\nWHERE 절과 유사하지만, WHERE 절에서는 집계 함수를 사용할 수 없습니다!\n\n예시:\n```js\n-- 판매 수량이 50개 이상인 가게 선택하기.\n\nSELECT stor_id, SUM(qty)\nFROM sales\nGROUP BY stor_id\nHAVING SUM(qty) > 50;\n```\n\n![이미지](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_16.png)\n\n<div class=\"content-ad\"></div>\n\n```sql\n-- 50개 이상의 판매 수량이 있는 가게를 선택한 다음 내림차순으로 정렬합니다.\n\n\nSELECT stor_id, SUM(qty)\nFROM sales\nGROUP BY stor_id\nHAVING SUM(qty) > 50\nORDER BY SUM(qty) DESC;\n```\n\n![이미지](/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_17.png)\n\n# 결론\n\nSQL 집계 함수는 데이터 분석과 보고에 꼭 필요합니다. 데이터를 요약하고 측정하며, 의사 결정에 유용한 통찰력을 제공합니다.\n\n<div class=\"content-ad\"></div>\n\n이러한 함수를 마스터하면 SQL에서 강력한 데이터 분석을 수행할 수 있게 됩니다. 계속 연습하고 탐험하여 SQL 기술을 향상시키세요.\n\n# SQL 기본 지식\n\n시간을 내주셔서 감사합니다! 🚀 SQL 기본 지식에서 더 많은 콘텐츠를 찾아볼 수 있습니다. 💫","ogImage":{"url":"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_0.png"},"coverImage":"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_0.png","tag":["Tech"],"readingTime":7},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>집계 함수는 데이터를 요약하고 분석할 때 SQL에서 중요한 역할을 합니다. 이들은 우리에게 통계 메트릭을 계산하고 데이터 그룹에 대한 계산을 수행하며 의미 있는 통찰을 얻을 수 있도록 해줍니다.</p>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_0.png\" alt=\"image\"></p>\n<p>이 글에서는 COUNT, SUM, AVG, MIN, MAX, ROUND, GROUP BY, WITH ROLLUP, LIMIT, HAVING 등과 같은 가장 일반적으로 사용되는 10가지 MYSQL 집계 함수를 실제 예제와 함께 탐색해 보겠습니다.</p>\n<h1>1. COUNT</h1>\n<div class=\"content-ad\"></div>\n<p>해당 테이블의 열에서 비 널 값의 수를 반환하거나 테이블의 행 수를 반환합니다.</p>\n<p>예시:\nSELECT COUNT(*) AS total_rows\nFROM table_name;</p>\n<p>SELECT COUNT(column_name)\nFROM table_name;</p>\n<pre><code class=\"hljs language-js\">-- 저자 테이블에는 몇 개의 행이 있나요?\n\n<span class=\"hljs-variable constant_\">SELECT</span> <span class=\"hljs-title function_\">COUNT</span>(*) <span class=\"hljs-variable constant_\">AS</span> total_rows\n<span class=\"hljs-variable constant_\">FROM</span> authors;\n</code></pre>\n<div class=\"content-ad\"></div>\n<img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_1.png\">\n<pre><code class=\"hljs language-js\">-- 데이터셋에 있는 작가는 몇 명인가요?\n\n<span class=\"hljs-variable constant_\">SELECT</span> <span class=\"hljs-title function_\">COUNT</span>(<span class=\"hljs-variable constant_\">DISTINCT</span> au_id) <span class=\"hljs-variable constant_\">AS</span> number_of_authors\n<span class=\"hljs-variable constant_\">FROM</span> authors;\n</code></pre>\n<img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_2.png\">\n<pre><code class=\"hljs language-js\">-- 산호세 또는 솔트레이크시티에 거주하는 작가는 몇 명인가요?\n\n<span class=\"hljs-variable constant_\">SELECT</span> <span class=\"hljs-title function_\">COUNT</span>(au_id)\n<span class=\"hljs-variable constant_\">FROM</span> authors\n<span class=\"hljs-variable constant_\">WHERE</span> city <span class=\"hljs-variable constant_\">IN</span> (<span class=\"hljs-string\">\"San Jose\"</span>, <span class=\"hljs-string\">\"Salt Lake City\"</span>);\n</code></pre>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_3.png\" alt=\"image\"></p>\n<pre><code class=\"hljs language-js\">-- 캘리포니아 주(<span class=\"hljs-variable constant_\">CA</span>)에 기반을 둔 상점의 수는?\n\n<span class=\"hljs-variable constant_\">SELECT</span> <span class=\"hljs-title function_\">COUNT</span>(<span class=\"hljs-variable constant_\">DISTINCT</span> stor_id) <span class=\"hljs-variable constant_\">AS</span> <span class=\"hljs-string\">\"CA에 있는 상점 수\"</span>\n<span class=\"hljs-variable constant_\">FROM</span> stores\n<span class=\"hljs-variable constant_\">WHERE</span> state = <span class=\"hljs-string\">\"CA\"</span>;\n</code></pre>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_4.png\" alt=\"image\"></p>\n<h1>2. SUM</h1>\n<div class=\"content-ad\"></div>\n<p>한 열의 값들의 합을 계산합니다.</p>\n<p>예시:\nSELECT SUM(column_name)\nFROM table_name;</p>\n<pre><code class=\"hljs language-js\">-- 수량에 따른 총 매출을 계산합니다.\n\n<span class=\"hljs-variable constant_\">SELECT</span> <span class=\"hljs-title function_\">SUM</span>(qty) <span class=\"hljs-variable constant_\">AS</span> sales_quantity\n<span class=\"hljs-variable constant_\">FROM</span> sales;\n</code></pre>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_5.png\" alt=\"이미지\"></p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\">-- 각 상점의 판매량을 수량별로 찾아서 내림차순으로 정렬합니다.\n\n<span class=\"hljs-variable constant_\">SELECT</span> stor_id, <span class=\"hljs-title function_\">SUM</span>(qty) <span class=\"hljs-variable constant_\">AS</span> sales_quantity\n<span class=\"hljs-variable constant_\">FROM</span> sales\n<span class=\"hljs-variable constant_\">GROUP</span> <span class=\"hljs-variable constant_\">BY</span> stor_id\n<span class=\"hljs-variable constant_\">ORDER</span> <span class=\"hljs-variable constant_\">BY</span> <span class=\"hljs-title function_\">SUM</span>(qty) <span class=\"hljs-variable constant_\">DESC</span>;\n</code></pre>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_6.png\" alt=\"마스터링 SQL 집계 함수: 예제를 활용한 포괄적인 가이드\"></p>\n<h1>3. AVG</h1>\n<p>숫자 열의 평균 값을 계산합니다.</p>\n<div class=\"content-ad\"></div>\n<p>예시:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- 테이블 sales에서 수량의 개수, 평균 및 합계를 표시합니다.</span>\n\n<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">COUNT</span>(qty), <span class=\"hljs-built_in\">AVG</span>(qty), <span class=\"hljs-built_in\">SUM</span>(qty)\n<span class=\"hljs-keyword\">FROM</span> sales;\n</code></pre>\n<img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_7.png\">\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- 각 출판사가 가지고 있는 책의 수 및 책의 평균 가격을 찾습니다.</span>\n\n<span class=\"hljs-keyword\">SELECT</span> pub_id, <span class=\"hljs-built_in\">COUNT</span>(title_id), <span class=\"hljs-built_in\">AVG</span>(price)\n<span class=\"hljs-keyword\">FROM</span> titles\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> pub_id\n<span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-built_in\">COUNT</span>(title_id) <span class=\"hljs-keyword\">DESC</span>;\n</code></pre>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_8.png\" alt=\"이미지\"></p>\n<h1>4. MIN</h1>\n<p>특정 열에서 최솟값을 검색합니다.</p>\n<p>예시:\nSELECT MIN(열_이름)\nFROM 테이블_이름;</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- 각 출판사의 책의 최소 가격을 찾아보세요.</span>\n\n<span class=\"hljs-keyword\">SELECT</span> pub_id,  <span class=\"hljs-built_in\">MIN</span>(price) <span class=\"hljs-keyword\">AS</span> minimum_price\n<span class=\"hljs-keyword\">FROM</span> titles\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> pub_id;\n</code></pre>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_9.png\" alt=\"이미지\"></p>\n<h1>5. MAX</h1>\n<p>컬럼에서 최대값을 검색합니다.</p>\n<div class=\"content-ad\"></div>\n<p>예시:</p>\n<p>특정 발행사의 책들 중에서 가장 높은 가격을 알아봅시다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-variable constant_\">SELECT</span> pub_id, <span class=\"hljs-title function_\">MAX</span>(price) <span class=\"hljs-variable constant_\">AS</span> maximum_price\n<span class=\"hljs-variable constant_\">FROM</span> titles\n<span class=\"hljs-variable constant_\">GROUP</span> <span class=\"hljs-variable constant_\">BY</span> pub_id;\n</code></pre>\n<img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_10.png\">\n<h1>6. ROUND</h1>\n<div class=\"content-ad\"></div>\n<p>지정된 소수점 자리 수로 숫자 값을 반올림하는 데 사용됩니다.</p>\n<p>예시:\nSELECT ROUND(column_name, 소수점 자리 수)\nFROM table_name;</p>\n<pre><code class=\"hljs language-js\">-- 각 출판사의 책 평균 가격을 <span class=\"hljs-number\">2</span>자리 소숫점으로 표시합니다.\n\n<span class=\"hljs-variable constant_\">SELECT</span> pub_id,  <span class=\"hljs-title function_\">ROUND</span>(<span class=\"hljs-title function_\">AVG</span>(price),<span class=\"hljs-number\">2</span>) <span class=\"hljs-variable constant_\">AS</span> average_book_price\n<span class=\"hljs-variable constant_\">FROM</span> titles\n<span class=\"hljs-variable constant_\">GROUP</span> <span class=\"hljs-variable constant_\">BY</span> pub_id;\n</code></pre>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_11.png\" alt=\"이미지\"></p>\n<div class=\"content-ad\"></div>\n<h1>7. GROUP BY</h1>\n<p>여러 열을 기반으로 행을 그룹화하고 각 그룹에 대해 집계를 수행합니다.</p>\n<p>예시:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> column1, 집계_함수(column2)\n<span class=\"hljs-keyword\">FROM</span> table_name\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> column1;\n</code></pre>\n<p>예시 코드:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- 각 출판사의 누적 연간 매출을 찾아 내림차순으로 정렬합니다.</span>\n\n<span class=\"hljs-keyword\">SELECT</span> pub_id,  <span class=\"hljs-built_in\">SUM</span>(ytd_sales)\n<span class=\"hljs-keyword\">FROM</span> titles\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> pub_id\n<span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-built_in\">SUM</span>(ytd_sales) <span class=\"hljs-keyword\">DESC</span>;\n</code></pre>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_12.png\" alt=\"image\"></p>\n<pre><code class=\"hljs language-js\">-- 각 발행사 및 각 제목의 총 <span class=\"hljs-variable constant_\">YTD</span> 판매량을 찾고 내림차순으로 정렬합니다.\n\n<span class=\"hljs-variable constant_\">SELECT</span> pub_id,  title,  <span class=\"hljs-title function_\">SUM</span>(ytd_sales)\n<span class=\"hljs-variable constant_\">FROM</span> titles\n<span class=\"hljs-variable constant_\">GROUP</span> <span class=\"hljs-variable constant_\">BY</span> pub_id, title;\n</code></pre>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_13.png\" alt=\"image\"></p>\n<h1>8. WITH ROLLUP</h1>\n<div class=\"content-ad\"></div>\n<p>쿼리 결과에 여러 레벨에서 소계 및 총계를 생성합니다.</p>\n<p>*** 결과의 \"NULL\" 값은 소계 및 총계 행을 나타냅니다.</p>\n<p>예:\nSELECT column1, column2, Aggregate_function(column3)\nFROM table_name\nGROUP BY column1, column2\nWITH ROLLUP;</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 각 publisher와 title의 평균 가격을 내림차순으로 정렬하여 보려면 다음과 같은 쿼리를 사용하세요.</span>\n<span class=\"hljs-comment\">// 또한 WITH ROLLUP을 사용하여 소계 및 총계를 표시합니다.</span>\n\n<span class=\"hljs-variable constant_\">SELECT</span> pub_id, title, <span class=\"hljs-title function_\">SUM</span>(ytd_sales)\n<span class=\"hljs-variable constant_\">FROM</span> titles\n<span class=\"hljs-variable constant_\">GROUP</span> <span class=\"hljs-variable constant_\">BY</span> pub_id, title\n<span class=\"hljs-variable constant_\">WITH</span> <span class=\"hljs-variable constant_\">ROLLUP</span>;\n</code></pre>\n<div class=\"content-ad\"></div>\n<img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_14.png\">\n<h1>9. LIMIT</h1>\n<p>쿼리에서 반환되는 행의 수를 제한합니다.</p>\n<p>예시:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> column1, column2\n<span class=\"hljs-keyword\">FROM</span> table_name\nLIMIT n;\n</code></pre>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- 가장 많은 매출을 올린 상위 3개 매장을 찾아봅니다.</span>\n\n<span class=\"hljs-keyword\">SELECT</span> stor_id, <span class=\"hljs-built_in\">SUM</span>(qty)\n<span class=\"hljs-keyword\">FROM</span> sales\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> stor_id\n<span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-built_in\">SUM</span>(qty) <span class=\"hljs-keyword\">DESC</span>\nLIMIT <span class=\"hljs-number\">3</span>;\n</code></pre>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_15.png\" alt=\"링크\"></p>\n<h1>10. HAVING</h1>\n<p>그룹화된 결과에 특정 조건을 기반으로 행을 필터링합니다.\nHAVING 절은 SUM, COUNT, AVG와 같은 집계 함수와 함께 사용됩니다.</p>\n<div class=\"content-ad\"></div>\n<p><strong>표</strong> 태그를 마크다운 형식으로 변경해주세요.</p>\n<p>예시:\nWHERE 절과 유사하지만, WHERE 절에서는 집계 함수를 사용할 수 없습니다!</p>\n<p>예시:</p>\n<pre><code class=\"hljs language-js\">-- 판매 수량이 <span class=\"hljs-number\">50</span>개 이상인 가게 선택하기.\n\n<span class=\"hljs-variable constant_\">SELECT</span> stor_id, <span class=\"hljs-title function_\">SUM</span>(qty)\n<span class=\"hljs-variable constant_\">FROM</span> sales\n<span class=\"hljs-variable constant_\">GROUP</span> <span class=\"hljs-variable constant_\">BY</span> stor_id\n<span class=\"hljs-variable constant_\">HAVING</span> <span class=\"hljs-title function_\">SUM</span>(qty) > <span class=\"hljs-number\">50</span>;\n</code></pre>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_16.png\" alt=\"이미지\"></p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-comment\">-- 50개 이상의 판매 수량이 있는 가게를 선택한 다음 내림차순으로 정렬합니다.</span>\n\n\n<span class=\"hljs-keyword\">SELECT</span> stor_id, <span class=\"hljs-built_in\">SUM</span>(qty)\n<span class=\"hljs-keyword\">FROM</span> sales\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> stor_id\n<span class=\"hljs-keyword\">HAVING</span> <span class=\"hljs-built_in\">SUM</span>(qty) <span class=\"hljs-operator\">></span> <span class=\"hljs-number\">50</span>\n<span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-built_in\">SUM</span>(qty) <span class=\"hljs-keyword\">DESC</span>;\n</code></pre>\n<p><img src=\"/assets/img/2024-06-20-MasteringSQLAggregationFunctionsAComprehensiveGuidewithExamples_17.png\" alt=\"이미지\"></p>\n<h1>결론</h1>\n<p>SQL 집계 함수는 데이터 분석과 보고에 꼭 필요합니다. 데이터를 요약하고 측정하며, 의사 결정에 유용한 통찰력을 제공합니다.</p>\n<div class=\"content-ad\"></div>\n<p>이러한 함수를 마스터하면 SQL에서 강력한 데이터 분석을 수행할 수 있게 됩니다. 계속 연습하고 탐험하여 SQL 기술을 향상시키세요.</p>\n<h1>SQL 기본 지식</h1>\n<p>시간을 내주셔서 감사합니다! 🚀 SQL 기본 지식에서 더 많은 콘텐츠를 찾아볼 수 있습니다. 💫</p>\n</body>\n</html>\n"},"__N_SSG":true}