{"pageProps":{"post":{"title":"리눅스 디렉터리 구조","description":"","date":"2024-06-19 14:55","slug":"2024-06-19-LinuxDirectoryStructure","content":"\n\n# Linux 디렉토리 구조에 대한 자세한 설명\n\n# 부팅 프로세스\n\n부팅 로더 (/boot)\n\n- Linux 시스템이 시작되면 BIOS 또는 UEFI 펌웨어가 하드웨어를 초기화하고 부팅로더(예: GRUB)를 /boot 디렉토리에서 불러옵니다.\n- 부팅로더는 커널(/boot/vmlinuz)과 초기 RAM 디스크(/boot/initrd.img)를 메모리에 불러옵니다.\n\n<div class=\"content-ad\"></div>\n\n커널 초기화 (/proc, /sys)\n\n- 커널은 시스템 구성 요소를 초기화하고 루트 파일 시스템을 마운트합니다.\n- 초기화 과정에서 커널은 프로세스와 시스템 하드웨어에 관한 정보를 /proc 및 /sys에 채웁니다.\n\n# 시스템 초기화\n\n시스템 및 서비스 초기화 (/etc, /lib, /sbin, /run)\n\n<div class=\"content-ad\"></div>\n\n- 커널이 초기화된 후에는 부팅 프로세스를 담당하는 init 프로세스(또는 현대의 Linux 시스템에서는 systemd)가 시작됩니다.\n- systemd는 /etc/systemd 및 /etc의 다른 디렉토리에서 구성 파일을 읽어 필요한 시스템 서비스를 시작합니다.\n- 부팅 및 시스템 서비스 실행에 필요한 필수 라이브러리는 /lib에 위치합니다.\n- 시스템 관리 이진 파일은 /sbin 및 /usr/sbin에 있어 서비스를 관리하는 데 도움이 됩니다.\n- /run은 시스템 작동 중에 일시적인 시스템 정보를 저장하는 데 사용됩니다.\n\n# 사용자 환경 설정\n\n사용자 환경 (/home, /usr, /opt)\n\n- 시스템 서비스가 시작되면 사용자가 로그인하여 개인 환경이 설정됩니다.\n- 각 사용자는 /home 아래에 홈 디렉토리를 갖고 있어 개인 파일과 설정이 저장됩니다.\n- 사용자 응용 프로그램 및 도구는 일반적으로 /usr/bin 및 /usr/local/bin에 저장됩니다.\n- 선택적 및 제3자 응용 프로그램은 /opt에 설치됩니다.\n\n<div class=\"content-ad\"></div>\n\n# 시스템 작동\n\n장치 관리 (/dev)\n\n- /dev는 하드 드라이브, 터미널, 프린터 등의 하드웨어 구성 요소를 나타내는 장치 파일을 포함합니다.\n- 장치 파일을 통해 소프트웨어가 표준 입력/출력 작업을 사용하여 하드웨어와 상호 작용할 수 있습니다.\n\n구성 및 관리 (/etc)\n\n<div class=\"content-ad\"></div>\n\n- /etc에 있는 설정 파일들은 시스템 동작, 네트워크 설정, 사용자 계정 정보, 서비스 구성을 정의합니다.\n- 관리자들은 이러한 파일을 편집하여 시스템 설정을 관리합니다.\n\n변수 데이터 (/var)\n\n- 시스템과 애플리케이션이 생성한 로그, 캐시, 스풀 파일 등과 같은 동적 데이터는 /var에 저장됩니다.\n- 로그 파일 (/var/log)은 시스템 및 애플리케이션 활동을 기록하여 모니터링 및 문제 해결을 위해 사용됩니다.\n- 메일 스풀 (/var/spool/mail)은 수신된 이메일을 저장합니다.\n\n임시 파일 (/tmp, /var/tmp)\n\n<div class=\"content-ad\"></div>\n\n- 애플리케이션이 /tmp 및 /var/tmp에 임시 파일을 저장합니다.\n- /tmp에있는 파일은 일반적으로 재부팅 시 삭제되지만, /var/tmp에있는 파일은 다시 부팅해도 유지됩니다.\n\n# 예: 사용자 애플리케이션 실행\n\n애플리케이션 실행\n\n- 사용자는 /usr/bin이나 /usr/local/bin에서 애플리케이션을 실행합니다.\n- 해당 애플리케이션은 /lib이나 /usr/lib에서 공유 라이브러리를 로드할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n하드웨어와 상호 작용하기\n\n- 애플리케이션이 하드웨어와 상호 작용해야 할 때, /dev 디렉토리에 해당 장치 파일에 접근합니다.\n\n사용자 데이터 저장 및 접근\n\n- 사용자별 데이터 및 구성은 사용자의 홈 디렉토리 (/home/사용자이름)의 파일에서 읽거나 쓰여집니다.\n\n<div class=\"content-ad\"></div>\n\n로그 및 임시 데이터\n\n- 애플리케이션은 활동을 /var/log에 있는 파일에 기록할 수 있습니다.\n- 애플리케이션이 생성한 임시 데이터는 /tmp 또는 /var/tmp에 저장됩니다.\n\n# 시스템 유지 보수\n\n소프트웨어 업데이트\n\n<div class=\"content-ad\"></div>\n\n- 시스템 및 응용 프로그램 업데이트는 /bin, /sbin, /lib, /usr/bin, /usr/sbin 또는 /opt에 새 파일을 설치할 수 있습니다.\n\n구성 변경\n\n시스템 관리자는 시스템 또는 서비스 동작을 변경하기 위해 /etc에 있는 구성 파일을 편집할 수 있습니다.\n\n모니터링 및 문제 해결\n\n<div class=\"content-ad\"></div>\n\n`/var/log`에 있는 로그는 시스템 상태를 모니터링하고 문제를 해결하기 위해 검토됩니다.\n\n아키텍처\n\n![Image](/assets/img/2024-06-19-LinuxDirectoryStructure_0.png)\n\n디렉토리 구조 개요\n\n<div class=\"content-ad\"></div>\n\n\n/\n├── bin\n├── boot\n├── dev\n├── etc\n├── home\n│ └── user\n├── lib\n├── media\n├── mnt\n├── opt\n├── proc\n├── root\n├── run\n├── sbin\n├── srv\n├── sys\n├── tmp\n├── usr\n│ ├── bin\n│ ├── lib\n│ ├── local\n│ └── sbin\n└── var\n ├── log\n ├── spool\n └── tmp\n\n\n\n|- / (Root)\n\n설명: 모든 다른 디렉토리가 뻗어나온 최상위 디렉토리입니다.\n예시: /bin, /etc, /home은 모두 /의 하위 디렉토리입니다.\n\n\n\n|- /bin\n\n설명: 모든 사용자가 필요로 하는 기본 명령어와 도구를 위한 필수 바이너리 실행 파일이 들어 있습니다.\n예시:\n/bin/ls (디렉토리 내용 나열)\n/bin/bash (Bourne Again Shell)\n/bin/cp (파일과 디렉토리 복사)\n\n\n\n|- /boot\n\n설명: 부트로더 파일과 커널 이미지가 들어 있습니다.\n예시:\n/boot/vmlinuz (리눅스 커널)\n/boot/initrd.img (초기 RAM 디스크 이미지)\n/boot/grub/grub.cfg (GRUB 부트로더 구성 파일)\n\n\n<div class=\"content-ad\"></div>\n\n```js\n| - /dev \n\n설명: 하드웨어 장치를 나타내는 장치 파일이 포함되어 있습니다.\n예시:\n/dev/sda1 (첫 번째 하드 드라이브의 첫 번째 파티션)\n/dev/tty1 (터미널 장치)\n/dev/null (데이터를 버리는 널 장치)\n\n```\n\n```js\n| - /etc \n\n설명: 시스템 전체의 구성 파일 및 초기화를 위한 쉘 스크립트가 포함되어 있습니다.\n예시:\n/etc/passwd (사용자 계정 정보)\n/etc/fstab (파일 시스템 마운트 포인트)\n/etc/hosts (호스트 이름의 정적 테이블 조회)\n\n```\n\n```js\n| - /home \n\n설명: 시스템에 존재하는 각 사용자의 개인 디렉토리가 포함되어 있습니다. (사용자별 데이터)\n예시:\n/home/alice (앨리스의 홈 디렉토리)\n/home/bob (밥의 홈 디렉토리)\n\n```\n\n```js\n| - /lib \n\n설명: 시스템 이진 파일이 필요로 하는 공유 라이브러리가 포함되어 있습니다.\n예시:\n/lib/libc.so.6 (C 표준 라이브러리)\n/lib/modules (커널 모듈)\n\n```  \n\n<div class=\"content-ad\"></div>\n\n\n|- /media\n\nDescription: USB 드라이브, CD 및 DVD와 같은 탈착식 미디어를 연결하는 데 사용됩니다.\n예시:\n/media/cdrom (CD-ROM을 연결하는 마운트 포인트)\n/media/usb (USB 드라이브를 연결하는 마운트 포인트)\n\n\n\n|- /mnt\n\nDescription: 임시로 파일 시스템을 마운트하는 일반적인 마운트 포인트입니다.\n예시:\n관리자는 다음과 같이 파일 시스템을 임시로 마운트할 수 있습니다:\nsudo mount /dev/sdb1 /mnt\n\n\n\n|- /opt\n\nDescription: 선택적 소프트웨어 패키지 및 타사 응용 프로그램이 포함됩니다.\n예시:\n/opt/google (Google 애플리케이션의 설치 디렉토리)\n/opt/vmware (VMware 애플리케이션의 설치 디렉토리)\n\n\n\n|- /proc\n\nDescription: 프로세스 및 시스템에 대한 정보를 제공하는 가상 파일 시스템입니다.\n예시:\n/proc/cpuinfo (CPU 정보)\n/proc/meminfo (메모리 사용량 정보)\n/proc/1234 (PID가 1234인 프로세스에 대한 정보를 포함하는 디렉토리)\n\n\n<div class=\"content-ad\"></div>\n\n```js\n|- /root\n\n설명: 시스템 관리자를 위한 홈 디렉토리입니다.\n예시:\n/root/.bashrc (루트 사용자용 Bash 구성 파일)\n/root/scripts (관리 작업을 위한 사용자 정의 스크립트)\n```\n\n```js\n|- /run\n\n설명: 시스템 프로세스 및 서비스의 런타임 데이터를 포함합니다.\n예시:\n/run/lock (락 파일)\n/run/user/1000 (UID 1000을 가진 사용자를 위한 런타임 데이터)\n```\n\n```js\n|- /sbin\n\n설명: 시스템 관리에 사용되는 필수 시스템 이진 파일이 포함되어 있습니다.\n예시:\n/sbin/reboot (시스템 재부팅)\n/sbin/ifconfig (네트워크 인터페이스 구성)\n/sbin/fdisk (디스크 파티셔닝 도구)\n```\n\n```js\n|- /srv\n\n설명: 시스템에서 제공하는 서비스에 대한 데이터가 포함되어 있습니다.\n예시:\n/srv/ftp (FTP 서버 데이터)\n/srv/www (웹 서버 데이터)\n```\n\n<div class=\"content-ad\"></div>\n\n```js\n|- /sys\n\n설명: 커널, 장치 및 시스템 하드웨어에 대한 정보를 제공하는 가상 파일 시스템입니다.\n예시:\n/sys/class/net (네트워크 인터페이스)\n/sys/devices (시스템 장치)\n```\n\n```js\n|- /tmp\n\n설명: 애플리케이션에서 사용하는 임시 파일을 저장하는 디렉토리입니다.\n예시:\n애플리케이션 실행 시 생성되는 임시 파일로, 종종 재부팅 시 정리됩니다.\n/tmp/install.log (소프트웨어 설치 중 생성된 임시 로그 파일)\n```\n\n```js\n|- /usr\n\n설명: 사용자 관련 프로그램 및 데이터를 포함합니다. 중요한 하위 디렉토리가 여러 개 있습니다:\n/usr/bin: 사용자 실행 파일.\n예시:\n/usr/bin/python (Python 인터프리터)\n/usr/bin/gcc (GNU C 컴파일러)\n```\n\n```js\n|- /usr/sbin: 시스템 관리 이진 파일.\n예시:\n/usr/sbin/apache2 (아파치 웹 서버)\n\n|- /usr/lib: 사용자 응용프로그램을 위한 라이브러리.\n예시:\n/usr/lib/libssl.so (OpenSSL 라이브러리)\n```\n\n<div class=\"content-ad\"></div>\n\n```js\n|- /usr/local\n\nDescription: 로컬에 설치된 소프트웨어 및 사용자 지정 스크립트입니다.\n예시:\n/usr/local/bin/myscript.sh (사용자 지정 스크립트)\n/usr/local/lib/mylib.so (사용자 지정 공유 라이브러리)\n```\n\n```js\n|- /var\n\nDescription: 로그, 데이터베이스 및 스풀 파일과 같은 변수 데이터 파일이 포함되어 있습니다.\n예시:\n/var/log: 로그 파일.\n예시:\n/var/log/syslog (시스템 로그)\n/var/log/auth.log (인증 로그)\n```\n\n```js\n|- /var/spool \nDescription: 메일 및 인쇄와 같은 작업을 위한 스풀 디렉토리입니다.\n예시:\n/var/spool/mail (사용자 메일함)\n```\n\n```js\n|- /var/tmp: \n\nDescription: 재부팅 간에 유지되는 임시 파일입니다.\n예시:\n세션 당보다 오래 지속되어야 하는 응용 프로그램이 생성하는 임시 파일.\n```\n\n<div class=\"content-ad\"></div>\n\n# 요약\n\n- Root (/): 최상위 디렉토리.\n- 시스템 이진 파일 (/bin, /sbin): 중요한 명령 줄 유틸리티 및 시스템 이진 파일.\n- 부팅 파일 (/boot): 부트로더 및 커널 파일.\n- 장치 파일 (/dev): 하드웨어 장치와의 인터페이스.\n- 설정 파일 (/etc): 시스템 및 애플리케이션 설정.\n- 홈 디렉토리 (/home): 사용자 데이터 및 설정.\n- 라이브러리 (/lib, /usr/lib): 공유 라이브러리.\n- 임시 파일 (/tmp, /var/tmp): 애플리케이션의 임시 저장소.\n- 사용자 프로그램 (/usr): 사용자 애플리케이션과 도구.\n- 로그 및 변수 데이터 (/var): 로그, 수동 파일 및 기타 변수 데이터.\n- 선택적 소프트웨어 (/opt): 제3자 애플리케이션 및 패키지.","ogImage":{"url":"/assets/img/2024-06-19-LinuxDirectoryStructure_0.png"},"coverImage":"/assets/img/2024-06-19-LinuxDirectoryStructure_0.png","tag":["Tech"],"readingTime":7},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h1>Linux 디렉토리 구조에 대한 자세한 설명</h1>\n<h1>부팅 프로세스</h1>\n<p>부팅 로더 (/boot)</p>\n<ul>\n<li>Linux 시스템이 시작되면 BIOS 또는 UEFI 펌웨어가 하드웨어를 초기화하고 부팅로더(예: GRUB)를 /boot 디렉토리에서 불러옵니다.</li>\n<li>부팅로더는 커널(/boot/vmlinuz)과 초기 RAM 디스크(/boot/initrd.img)를 메모리에 불러옵니다.</li>\n</ul>\n<p>커널 초기화 (/proc, /sys)</p>\n<ul>\n<li>커널은 시스템 구성 요소를 초기화하고 루트 파일 시스템을 마운트합니다.</li>\n<li>초기화 과정에서 커널은 프로세스와 시스템 하드웨어에 관한 정보를 /proc 및 /sys에 채웁니다.</li>\n</ul>\n<h1>시스템 초기화</h1>\n<p>시스템 및 서비스 초기화 (/etc, /lib, /sbin, /run)</p>\n<ul>\n<li>커널이 초기화된 후에는 부팅 프로세스를 담당하는 init 프로세스(또는 현대의 Linux 시스템에서는 systemd)가 시작됩니다.</li>\n<li>systemd는 /etc/systemd 및 /etc의 다른 디렉토리에서 구성 파일을 읽어 필요한 시스템 서비스를 시작합니다.</li>\n<li>부팅 및 시스템 서비스 실행에 필요한 필수 라이브러리는 /lib에 위치합니다.</li>\n<li>시스템 관리 이진 파일은 /sbin 및 /usr/sbin에 있어 서비스를 관리하는 데 도움이 됩니다.</li>\n<li>/run은 시스템 작동 중에 일시적인 시스템 정보를 저장하는 데 사용됩니다.</li>\n</ul>\n<h1>사용자 환경 설정</h1>\n<p>사용자 환경 (/home, /usr, /opt)</p>\n<ul>\n<li>시스템 서비스가 시작되면 사용자가 로그인하여 개인 환경이 설정됩니다.</li>\n<li>각 사용자는 /home 아래에 홈 디렉토리를 갖고 있어 개인 파일과 설정이 저장됩니다.</li>\n<li>사용자 응용 프로그램 및 도구는 일반적으로 /usr/bin 및 /usr/local/bin에 저장됩니다.</li>\n<li>선택적 및 제3자 응용 프로그램은 /opt에 설치됩니다.</li>\n</ul>\n<h1>시스템 작동</h1>\n<p>장치 관리 (/dev)</p>\n<ul>\n<li>/dev는 하드 드라이브, 터미널, 프린터 등의 하드웨어 구성 요소를 나타내는 장치 파일을 포함합니다.</li>\n<li>장치 파일을 통해 소프트웨어가 표준 입력/출력 작업을 사용하여 하드웨어와 상호 작용할 수 있습니다.</li>\n</ul>\n<p>구성 및 관리 (/etc)</p>\n<ul>\n<li>/etc에 있는 설정 파일들은 시스템 동작, 네트워크 설정, 사용자 계정 정보, 서비스 구성을 정의합니다.</li>\n<li>관리자들은 이러한 파일을 편집하여 시스템 설정을 관리합니다.</li>\n</ul>\n<p>변수 데이터 (/var)</p>\n<ul>\n<li>시스템과 애플리케이션이 생성한 로그, 캐시, 스풀 파일 등과 같은 동적 데이터는 /var에 저장됩니다.</li>\n<li>로그 파일 (/var/log)은 시스템 및 애플리케이션 활동을 기록하여 모니터링 및 문제 해결을 위해 사용됩니다.</li>\n<li>메일 스풀 (/var/spool/mail)은 수신된 이메일을 저장합니다.</li>\n</ul>\n<p>임시 파일 (/tmp, /var/tmp)</p>\n<ul>\n<li>애플리케이션이 /tmp 및 /var/tmp에 임시 파일을 저장합니다.</li>\n<li>/tmp에있는 파일은 일반적으로 재부팅 시 삭제되지만, /var/tmp에있는 파일은 다시 부팅해도 유지됩니다.</li>\n</ul>\n<h1>예: 사용자 애플리케이션 실행</h1>\n<p>애플리케이션 실행</p>\n<ul>\n<li>사용자는 /usr/bin이나 /usr/local/bin에서 애플리케이션을 실행합니다.</li>\n<li>해당 애플리케이션은 /lib이나 /usr/lib에서 공유 라이브러리를 로드할 수 있습니다.</li>\n</ul>\n<p>하드웨어와 상호 작용하기</p>\n<ul>\n<li>애플리케이션이 하드웨어와 상호 작용해야 할 때, /dev 디렉토리에 해당 장치 파일에 접근합니다.</li>\n</ul>\n<p>사용자 데이터 저장 및 접근</p>\n<ul>\n<li>사용자별 데이터 및 구성은 사용자의 홈 디렉토리 (/home/사용자이름)의 파일에서 읽거나 쓰여집니다.</li>\n</ul>\n<p>로그 및 임시 데이터</p>\n<ul>\n<li>애플리케이션은 활동을 /var/log에 있는 파일에 기록할 수 있습니다.</li>\n<li>애플리케이션이 생성한 임시 데이터는 /tmp 또는 /var/tmp에 저장됩니다.</li>\n</ul>\n<h1>시스템 유지 보수</h1>\n<p>소프트웨어 업데이트</p>\n<ul>\n<li>시스템 및 응용 프로그램 업데이트는 /bin, /sbin, /lib, /usr/bin, /usr/sbin 또는 /opt에 새 파일을 설치할 수 있습니다.</li>\n</ul>\n<p>구성 변경</p>\n<p>시스템 관리자는 시스템 또는 서비스 동작을 변경하기 위해 /etc에 있는 구성 파일을 편집할 수 있습니다.</p>\n<p>모니터링 및 문제 해결</p>\n<p><code>/var/log</code>에 있는 로그는 시스템 상태를 모니터링하고 문제를 해결하기 위해 검토됩니다.</p>\n<p>아키텍처</p>\n<p><img src=\"/assets/img/2024-06-19-LinuxDirectoryStructure_0.png\" alt=\"Image\"></p>\n<p>디렉토리 구조 개요</p>\n<p>/\n├── bin\n├── boot\n├── dev\n├── etc\n├── home\n│ └── user\n├── lib\n├── media\n├── mnt\n├── opt\n├── proc\n├── root\n├── run\n├── sbin\n├── srv\n├── sys\n├── tmp\n├── usr\n│ ├── bin\n│ ├── lib\n│ ├── local\n│ └── sbin\n└── var\n├── log\n├── spool\n└── tmp</p>\n<p>|- / (Root)</p>\n<p>설명: 모든 다른 디렉토리가 뻗어나온 최상위 디렉토리입니다.\n예시: /bin, /etc, /home은 모두 /의 하위 디렉토리입니다.</p>\n<p>|- /bin</p>\n<p>설명: 모든 사용자가 필요로 하는 기본 명령어와 도구를 위한 필수 바이너리 실행 파일이 들어 있습니다.\n예시:\n/bin/ls (디렉토리 내용 나열)\n/bin/bash (Bourne Again Shell)\n/bin/cp (파일과 디렉토리 복사)</p>\n<p>|- /boot</p>\n<p>설명: 부트로더 파일과 커널 이미지가 들어 있습니다.\n예시:\n/boot/vmlinuz (리눅스 커널)\n/boot/initrd.img (초기 RAM 디스크 이미지)\n/boot/grub/grub.cfg (GRUB 부트로더 구성 파일)</p>\n<pre><code class=\"hljs language-js\">| - /dev \n\n설명: 하드웨어 장치를 나타내는 장치 파일이 포함되어 있습니다.\n예시:\n<span class=\"hljs-regexp\">/dev/</span>sda1 (첫 번째 하드 드라이브의 첫 번째 파티션)\n/dev/tty1 (터미널 장치)\n/dev/<span class=\"hljs-literal\">null</span> (데이터를 버리는 널 장치)\n\n</code></pre>\n<pre><code class=\"hljs language-js\">| - /etc \n\n설명: 시스템 전체의 구성 파일 및 초기화를 위한 쉘 스크립트가 포함되어 있습니다.\n예시:\n<span class=\"hljs-regexp\">/etc/</span>passwd (사용자 계정 정보)\n/etc/fstab (파일 시스템 마운트 포인트)\n/etc/hosts (호스트 이름의 정적 테이블 조회)\n\n</code></pre>\n<pre><code class=\"hljs language-js\">| - /home \n\n설명: 시스템에 존재하는 각 사용자의 개인 디렉토리가 포함되어 있습니다. (사용자별 데이터)\n예시:\n<span class=\"hljs-regexp\">/home/</span>alice (앨리스의 홈 디렉토리)\n/home/bob (밥의 홈 디렉토리)\n\n</code></pre>\n<pre><code class=\"hljs language-js\">| - /lib \n\n설명: 시스템 이진 파일이 필요로 하는 공유 라이브러리가 포함되어 있습니다.\n예시:\n<span class=\"hljs-regexp\">/lib/</span>libc.<span class=\"hljs-property\">so</span><span class=\"hljs-number\">.6</span> (C 표준 라이브러리)\n/lib/modules (커널 모듈)\n\n</code></pre>\n<p>|- /media</p>\n<p>Description: USB 드라이브, CD 및 DVD와 같은 탈착식 미디어를 연결하는 데 사용됩니다.\n예시:\n/media/cdrom (CD-ROM을 연결하는 마운트 포인트)\n/media/usb (USB 드라이브를 연결하는 마운트 포인트)</p>\n<p>|- /mnt</p>\n<p>Description: 임시로 파일 시스템을 마운트하는 일반적인 마운트 포인트입니다.\n예시:\n관리자는 다음과 같이 파일 시스템을 임시로 마운트할 수 있습니다:\nsudo mount /dev/sdb1 /mnt</p>\n<p>|- /opt</p>\n<p>Description: 선택적 소프트웨어 패키지 및 타사 응용 프로그램이 포함됩니다.\n예시:\n/opt/google (Google 애플리케이션의 설치 디렉토리)\n/opt/vmware (VMware 애플리케이션의 설치 디렉토리)</p>\n<p>|- /proc</p>\n<p>Description: 프로세스 및 시스템에 대한 정보를 제공하는 가상 파일 시스템입니다.\n예시:\n/proc/cpuinfo (CPU 정보)\n/proc/meminfo (메모리 사용량 정보)\n/proc/1234 (PID가 1234인 프로세스에 대한 정보를 포함하는 디렉토리)</p>\n<pre><code class=\"hljs language-js\">|- /root\n\n설명: 시스템 관리자를 위한 홈 디렉토리입니다.\n예시:\n<span class=\"hljs-regexp\">/root/</span>.<span class=\"hljs-property\">bashrc</span> (루트 사용자용 <span class=\"hljs-title class_\">Bash</span> 구성 파일)\n/root/scripts (관리 작업을 위한 사용자 정의 스크립트)\n</code></pre>\n<pre><code class=\"hljs language-js\">|- /run\n\n설명: 시스템 프로세스 및 서비스의 런타임 데이터를 포함합니다.\n예시:\n<span class=\"hljs-regexp\">/run/</span>lock (락 파일)\n/run/user/<span class=\"hljs-number\">1000</span> (<span class=\"hljs-variable constant_\">UID</span> <span class=\"hljs-number\">1000</span>을 가진 사용자를 위한 런타임 데이터)\n</code></pre>\n<pre><code class=\"hljs language-js\">|- /sbin\n\n설명: 시스템 관리에 사용되는 필수 시스템 이진 파일이 포함되어 있습니다.\n예시:\n<span class=\"hljs-regexp\">/sbin/</span>reboot (시스템 재부팅)\n/sbin/ifconfig (네트워크 인터페이스 구성)\n/sbin/fdisk (디스크 파티셔닝 도구)\n</code></pre>\n<pre><code class=\"hljs language-js\">|- /srv\n\n설명: 시스템에서 제공하는 서비스에 대한 데이터가 포함되어 있습니다.\n예시:\n<span class=\"hljs-regexp\">/srv/</span>ftp (<span class=\"hljs-variable constant_\">FTP</span> 서버 데이터)\n/srv/www (웹 서버 데이터)\n</code></pre>\n<pre><code class=\"hljs language-js\">|- /sys\n\n설명: 커널, 장치 및 시스템 하드웨어에 대한 정보를 제공하는 가상 파일 시스템입니다.\n예시:\n<span class=\"hljs-regexp\">/sys/</span><span class=\"hljs-keyword\">class</span>/net (네트워크 인터페이스)\n/sys/devices (시스템 장치)\n</code></pre>\n<pre><code class=\"hljs language-js\">|- /tmp\n\n설명: 애플리케이션에서 사용하는 임시 파일을 저장하는 디렉토리입니다.\n예시:\n애플리케이션 실행 시 생성되는 임시 파일로, 종종 재부팅 시 정리됩니다.\n/tmp/install.<span class=\"hljs-property\">log</span> (소프트웨어 설치 중 생성된 임시 로그 파일)\n</code></pre>\n<pre><code class=\"hljs language-js\">|- /usr\n\n설명: 사용자 관련 프로그램 및 데이터를 포함합니다. 중요한 하위 디렉토리가 여러 개 있습니다:\n<span class=\"hljs-regexp\">/usr/</span><span class=\"hljs-attr\">bin</span>: 사용자 실행 파일.\n예시:\n<span class=\"hljs-regexp\">/usr/</span>bin/python (<span class=\"hljs-title class_\">Python</span> 인터프리터)\n/usr/bin/gcc (<span class=\"hljs-variable constant_\">GNU</span> C 컴파일러)\n</code></pre>\n<pre><code class=\"hljs language-js\">|- <span class=\"hljs-regexp\">/usr/</span><span class=\"hljs-attr\">sbin</span>: 시스템 관리 이진 파일.\n예시:\n<span class=\"hljs-regexp\">/usr/</span>sbin/apache2 (아파치 웹 서버)\n\n|- <span class=\"hljs-regexp\">/usr/</span><span class=\"hljs-attr\">lib</span>: 사용자 응용프로그램을 위한 라이브러리.\n예시:\n<span class=\"hljs-regexp\">/usr/</span>lib/libssl.<span class=\"hljs-property\">so</span> (<span class=\"hljs-title class_\">OpenSSL</span> 라이브러리)\n</code></pre>\n<pre><code class=\"hljs language-js\">|- <span class=\"hljs-regexp\">/usr/</span>local\n\n<span class=\"hljs-title class_\">Description</span>: 로컬에 설치된 소프트웨어 및 사용자 지정 스크립트입니다.\n예시:\n<span class=\"hljs-regexp\">/usr/</span>local/bin/myscript.<span class=\"hljs-property\">sh</span> (사용자 지정 스크립트)\n/usr/local/lib/mylib.<span class=\"hljs-property\">so</span> (사용자 지정 공유 라이브러리)\n</code></pre>\n<pre><code class=\"hljs language-js\">|- /<span class=\"hljs-keyword\">var</span>\n\n<span class=\"hljs-title class_\">Description</span>: 로그, 데이터베이스 및 스풀 파일과 같은 변수 데이터 파일이 포함되어 있습니다.\n예시:\n<span class=\"hljs-regexp\">/var/</span><span class=\"hljs-attr\">log</span>: 로그 파일.\n예시:\n<span class=\"hljs-regexp\">/var/</span>log/syslog (시스템 로그)\n/<span class=\"hljs-keyword\">var</span>/log/auth.<span class=\"hljs-property\">log</span> (인증 로그)\n</code></pre>\n<pre><code class=\"hljs language-js\">|- <span class=\"hljs-regexp\">/var/</span>spool \n<span class=\"hljs-title class_\">Description</span>: 메일 및 인쇄와 같은 작업을 위한 스풀 디렉토리입니다.\n예시:\n<span class=\"hljs-regexp\">/var/</span>spool/mail (사용자 메일함)\n</code></pre>\n<pre><code class=\"hljs language-js\">|- <span class=\"hljs-regexp\">/var/</span><span class=\"hljs-attr\">tmp</span>: \n\n<span class=\"hljs-title class_\">Description</span>: 재부팅 간에 유지되는 임시 파일입니다.\n예시:\n세션 당보다 오래 지속되어야 하는 응용 프로그램이 생성하는 임시 파일.\n</code></pre>\n<h1>요약</h1>\n<ul>\n<li>Root (/): 최상위 디렉토리.</li>\n<li>시스템 이진 파일 (/bin, /sbin): 중요한 명령 줄 유틸리티 및 시스템 이진 파일.</li>\n<li>부팅 파일 (/boot): 부트로더 및 커널 파일.</li>\n<li>장치 파일 (/dev): 하드웨어 장치와의 인터페이스.</li>\n<li>설정 파일 (/etc): 시스템 및 애플리케이션 설정.</li>\n<li>홈 디렉토리 (/home): 사용자 데이터 및 설정.</li>\n<li>라이브러리 (/lib, /usr/lib): 공유 라이브러리.</li>\n<li>임시 파일 (/tmp, /var/tmp): 애플리케이션의 임시 저장소.</li>\n<li>사용자 프로그램 (/usr): 사용자 애플리케이션과 도구.</li>\n<li>로그 및 변수 데이터 (/var): 로그, 수동 파일 및 기타 변수 데이터.</li>\n<li>선택적 소프트웨어 (/opt): 제3자 애플리케이션 및 패키지.</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}