{"pageProps":{"post":{"title":"맥OS에서 PostgreSQL을 사용하여 SonarQube를 설치하기","description":"","date":"2024-06-20 14:29","slug":"2024-06-20-InstallSonarQubewithPostgresSQLonmacOS","content":"\n\n이 가이드에서는 macOS에서 SonarQube를 PostgreSQL과 함께 설치하고 구성하는 단계를 안내해 드리겠습니다. SonarQube는 코드 품질을 지속적으로 검사하는 인기 있는 도구이며 PostgreSQL은 강력한 오픈 소스 객체 관계형 데이터베이스 시스템입니다.\n\n# 단계 1: SonarQube 및 Sonar-Scanner 설치\n\n먼저 Homebrew를 사용하여 SonarQube와 Sonar-Scanner를 설치해야 합니다. 터미널을 열고 다음 명령을 실행해 주세요:\n\n```js\nbrew install sonar-scanner\nbrew install sonarqube\nbrew services start sonarqube\n```\n\n<div class=\"content-ad\"></div>\n\n설치를 확인하려면 브라우저를 열고 localhost:9000으로 이동하십시오. SonarQube 인터페이스가 표시되어야 합니다.\n\n![SonarQube Interface](/assets/img/2024-06-20-InstallSonarQubewithPostgresSQLonmacOS_0.png)\n\n## 단계 2: PostgreSQL 설치\n\n다음으로 PostgreSQL을 설치할 것입니다. Homebrew를 다시 사용하여 다음 명령을 실행하십시오:\n\n<div class=\"content-ad\"></div>\n\n```js\nbrew install postgresql@15\nexport PATH=\"/opt/homebrew/opt/postgresql@15/bin:$PATH\"\n```\n\n# 단계 3: PostgreSQL 시작하기\n\nPostgreSQL 서비스를 시작합니다:\n\n```js\nbrew services restart postgresql@15\n```\n\n<div class=\"content-ad\"></div>\n\n문제가 발생하면 다음 명령어를 사용하여 PostgreSQL 사용자를 수동으로 생성하십시오:\n\n```js\n/opt/homebrew/opt/postgresql@15/bin/createuser -s postgres\n```\n\n# 단계 4: SonarQube를 위해 PostgreSQL 구성하기\n\n이제 SonarQube를 위해 PostgreSQL 데이터베이스와 사용자를 설정해야 합니다. PostgreSQL 명령줄 인터페이스로 이동하여 다음 명령을 실행하십시오:\n\n<div class=\"content-ad\"></div>\n\n```js\npsql -U postgres\n```\n\nPostgreSQL 인터페이스에서 데이터베이스와 사용자를 생성하겠어요:\n\n```js\ncreate database sonarqube;\ncreate user sonar;\nalter user sonar with encrypted password 'yourstrongpassword';\nGRANT ALL PRIVILEGES ON DATABASE sonarqube TO sonar;\n\\q\n```\n\n# 단계 5: OpenJDK 11 설치하기\n\n<div class=\"content-ad\"></div>\n\nSonarQube에서 Java가 필요합니다, 그래서 OpenJDK 11을 설치할 거에요:\n\n```js\nbrew install openjdk@11\n```\n\n# 단계 6: SonarQube를 PostgreSQL 사용하도록 구성하기\n\nSonarQube 구성 파일을 열어주세요. 파일 위치는 /opt/homebrew/Cellar/sonarqube/10.5.0.89998/libexec/conf/sonar.properties입니다. 아래 라인들을 추가하거나 업데이트해서 SonarQube가 PostgreSQL 데이터베이스를 사용하도록 구성해주세요:\n\n<div class=\"content-ad\"></div>\n\n```js\nsonar.jdbc.username=sonar\nsonar.jdbc.password=yourstrongpassword\nsonar.jdbc.url=jdbc:postgresql://localhost/sonarqube\nsonar.path.logs=/path/to/log\n```\n\n# 7단계: SonarQube 다시 시작\n\n변경 사항을 적용하기 위해 SonarQube 서비스를 다시 시작하세요:\n\n```js\nbrew services restart sonarqube\n```\n\n<div class=\"content-ad\"></div>\n\n# 단계 8: 잠재적인 문제 처리\n\nSonarQube가 데이터베이스에 액세스하는 데 문제가 발생하면, sonar 사용자가 필요한 권한을 갖고 있는지 확인해주세요:\n\n```js\npsql -U postgres\nalter user sonar with superuser;\n\\q\n```\n\nSonarQube 서비스를 한 번 더 재시작해주세요.\n\n<div class=\"content-ad\"></div>\n\n```js\nbrew services restart sonarqube\n```\n\n# 단계 9: SonarQube에 로그인하세요\n\n브라우저를 열고 localhost:9000으로 이동하세요. 다음 기본 자격 증명을 사용하여 로그인하세요:\n\n- 사용자 이름: admin\n- 비밀번호: admin\n\n<div class=\"content-ad\"></div>\n\n첫 로그인 시 비밀번호를 변경하라는 안내를 받게 될 것입니다.\n\n이러한 단계를 따라하면 맥OS에서 PostgreSQL을 사용하여 완벽하게 작동하는 SonarQube 인스턴스를 구축할 수 있습니다. 즐거운 코딩과 코드 품질 검사를 하세요!","ogImage":{"url":"/assets/img/2024-06-20-InstallSonarQubewithPostgresSQLonmacOS_0.png"},"coverImage":"/assets/img/2024-06-20-InstallSonarQubewithPostgresSQLonmacOS_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>이 가이드에서는 macOS에서 SonarQube를 PostgreSQL과 함께 설치하고 구성하는 단계를 안내해 드리겠습니다. SonarQube는 코드 품질을 지속적으로 검사하는 인기 있는 도구이며 PostgreSQL은 강력한 오픈 소스 객체 관계형 데이터베이스 시스템입니다.</p>\n<h1>단계 1: SonarQube 및 Sonar-Scanner 설치</h1>\n<p>먼저 Homebrew를 사용하여 SonarQube와 Sonar-Scanner를 설치해야 합니다. 터미널을 열고 다음 명령을 실행해 주세요:</p>\n<pre><code class=\"hljs language-js\">brew install sonar-scanner\nbrew install sonarqube\nbrew services start sonarqube\n</code></pre>\n<p>설치를 확인하려면 브라우저를 열고 localhost:9000으로 이동하십시오. SonarQube 인터페이스가 표시되어야 합니다.</p>\n<p><img src=\"/assets/img/2024-06-20-InstallSonarQubewithPostgresSQLonmacOS_0.png\" alt=\"SonarQube Interface\"></p>\n<h2>단계 2: PostgreSQL 설치</h2>\n<p>다음으로 PostgreSQL을 설치할 것입니다. Homebrew를 다시 사용하여 다음 명령을 실행하십시오:</p>\n<pre><code class=\"hljs language-js\">brew install postgresql@<span class=\"hljs-number\">15</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-variable constant_\">PATH</span>=<span class=\"hljs-string\">\"/opt/homebrew/opt/postgresql@15/bin:$PATH\"</span>\n</code></pre>\n<h1>단계 3: PostgreSQL 시작하기</h1>\n<p>PostgreSQL 서비스를 시작합니다:</p>\n<pre><code class=\"hljs language-js\">brew services restart postgresql@<span class=\"hljs-number\">15</span>\n</code></pre>\n<p>문제가 발생하면 다음 명령어를 사용하여 PostgreSQL 사용자를 수동으로 생성하십시오:</p>\n<pre><code class=\"hljs language-js\">/opt/homebrew/opt/postgresql@<span class=\"hljs-number\">15</span>/bin/createuser -s postgres\n</code></pre>\n<h1>단계 4: SonarQube를 위해 PostgreSQL 구성하기</h1>\n<p>이제 SonarQube를 위해 PostgreSQL 데이터베이스와 사용자를 설정해야 합니다. PostgreSQL 명령줄 인터페이스로 이동하여 다음 명령을 실행하십시오:</p>\n<pre><code class=\"hljs language-js\">psql -U postgres\n</code></pre>\n<p>PostgreSQL 인터페이스에서 데이터베이스와 사용자를 생성하겠어요:</p>\n<pre><code class=\"hljs language-js\">create database sonarqube;\ncreate user sonar;\nalter user sonar <span class=\"hljs-keyword\">with</span> encrypted password <span class=\"hljs-string\">'yourstrongpassword'</span>;\n<span class=\"hljs-variable constant_\">GRANT</span> <span class=\"hljs-variable constant_\">ALL</span> <span class=\"hljs-variable constant_\">PRIVILEGES</span> <span class=\"hljs-variable constant_\">ON</span> <span class=\"hljs-variable constant_\">DATABASE</span> sonarqube <span class=\"hljs-variable constant_\">TO</span> sonar;\n\\q\n</code></pre>\n<h1>단계 5: OpenJDK 11 설치하기</h1>\n<p>SonarQube에서 Java가 필요합니다, 그래서 OpenJDK 11을 설치할 거에요:</p>\n<pre><code class=\"hljs language-js\">brew install openjdk@<span class=\"hljs-number\">11</span>\n</code></pre>\n<h1>단계 6: SonarQube를 PostgreSQL 사용하도록 구성하기</h1>\n<p>SonarQube 구성 파일을 열어주세요. 파일 위치는 /opt/homebrew/Cellar/sonarqube/10.5.0.89998/libexec/conf/sonar.properties입니다. 아래 라인들을 추가하거나 업데이트해서 SonarQube가 PostgreSQL 데이터베이스를 사용하도록 구성해주세요:</p>\n<pre><code class=\"hljs language-js\">sonar.<span class=\"hljs-property\">jdbc</span>.<span class=\"hljs-property\">username</span>=sonar\nsonar.<span class=\"hljs-property\">jdbc</span>.<span class=\"hljs-property\">password</span>=yourstrongpassword\nsonar.<span class=\"hljs-property\">jdbc</span>.<span class=\"hljs-property\">url</span>=<span class=\"hljs-attr\">jdbc</span>:<span class=\"hljs-attr\">postgresql</span>:<span class=\"hljs-comment\">//localhost/sonarqube</span>\nsonar.<span class=\"hljs-property\">path</span>.<span class=\"hljs-property\">logs</span>=<span class=\"hljs-regexp\">/path/</span>to/log\n</code></pre>\n<h1>7단계: SonarQube 다시 시작</h1>\n<p>변경 사항을 적용하기 위해 SonarQube 서비스를 다시 시작하세요:</p>\n<pre><code class=\"hljs language-js\">brew services restart sonarqube\n</code></pre>\n<h1>단계 8: 잠재적인 문제 처리</h1>\n<p>SonarQube가 데이터베이스에 액세스하는 데 문제가 발생하면, sonar 사용자가 필요한 권한을 갖고 있는지 확인해주세요:</p>\n<pre><code class=\"hljs language-js\">psql -U postgres\nalter user sonar <span class=\"hljs-keyword\">with</span> superuser;\n\\q\n</code></pre>\n<p>SonarQube 서비스를 한 번 더 재시작해주세요.</p>\n<pre><code class=\"hljs language-js\">brew services restart sonarqube\n</code></pre>\n<h1>단계 9: SonarQube에 로그인하세요</h1>\n<p>브라우저를 열고 localhost:9000으로 이동하세요. 다음 기본 자격 증명을 사용하여 로그인하세요:</p>\n<ul>\n<li>사용자 이름: admin</li>\n<li>비밀번호: admin</li>\n</ul>\n<p>첫 로그인 시 비밀번호를 변경하라는 안내를 받게 될 것입니다.</p>\n<p>이러한 단계를 따라하면 맥OS에서 PostgreSQL을 사용하여 완벽하게 작동하는 SonarQube 인스턴스를 구축할 수 있습니다. 즐거운 코딩과 코드 품질 검사를 하세요!</p>\n</body>\n</html>\n"},"__N_SSG":true}