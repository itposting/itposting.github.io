{"pageProps":{"post":{"title":"시리얼 통신 마스터하기 아두이노 메가 2560 마스터와 우노 슬레이브 UART 튜토리얼","description":"","date":"2024-06-20 16:52","slug":"2024-06-20-MasteringSerialCommunicationArduinoMega2560MasterandUnoSlaveUARTTutorial","content":"\n\n\n![이미지](/assets/img/2024-06-20-MasteringSerialCommunicationArduinoMega2560MasterandUnoSlaveUARTTutorial_0.png)\n\n# 소개\n\n아두이노 프로젝트의 영역에서 시리얼 통신은 기본적인 기술입니다. 이것은 새로운 언어로 대화하는 것을 배우는 것과 같습니다. 하지만 단어 대신에 전기 신호를 사용합니다. 이 튜토리얼에서는 두 가지 인기 있는 아두이노 보드인 메가 2560을 마스터로, 그리고 우노를 슬레이브로하여 UART (Universal Asynchronous Receiver-Transmitter) 통신을 설정하는 방법을 알아볼 것입니다. 이 안내서를 끝까지 따라오면 이 두 보드가 서로 '대화'할 수 있는 방법에 대해 명확히 이해하게 될 것입니다.\n\n# 필요한 것\n\n\n<div class=\"content-ad\"></div>\n\n- 1 x 아두이노 메가 2560\n- 1 x 아두이노 우노\n- 점퍼 와이어\n- 아두이노 IDE\n\n# 마스터 이해하기: 아두이노 메가 2560\n\n# 설정\n\n시리얼 포트 초기화: 우리의 메가 2560은 두 개의 시리얼 포트를 사용합니다. 디버깅용으로 Serial을 사용하고 Uno와 통신하기 위해 Serial1을 사용합니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nSerial.begin(9600);\nSerial1.begin(9600);\n```\n\nLED로 표시기 사용: 내장 LED를 사용하여 받은 데이터를 시각적으로 표현합니다.\n\n```js\npinMode(LED_BUILTIN, OUTPUT);\ndigitalWrite(LED_BUILTIN, HIGH);\n```\n\n# 루프\n\n\n<div class=\"content-ad\"></div>\n\n데이터 수신: Mega는 시리얼 포트에서 데이터를 기다립니다.\n\n```js\nif (Serial.available() > 0) {\n   char received = Serial.read();\n   ...\n}\n```\n\n데이터 전달: 데이터를 수신하면 Mega는 동일한 데이터를 Serial1을 통해 Uno로 전달합니다.\n\n```js\nSerial1.write(received);\n```\n\n<div class=\"content-ad\"></div>\n\n데이터에 따른 조치: 받은 데이터가 '1'이면 LED가 꺼지고, '2'이면 켜집니다.\n\n```js\nif (received == '1') {\n   digitalWrite(LED_BUILTIN, LOW);\n} else if (received == '2') {\n   digitalWrite(LED_BUILTIN, HIGH);\n}\n```\n\n# 슬레이브 이해하기: 아두이노 우노\n\n# 설정\n\n<div class=\"content-ad\"></div>\n\n소프트웨어 시리얼: Uno는 하드웨어 시리얼 포트가 하나뿐이기 때문에, 우리는 SoftwareSerial을 사용하여 가상 시리얼 포트를 생성합니다.\n\n```js\nSoftwareSerial Serial1(10, 9); // RX, TX\n```\n\n시리얼 포트 초기화: 하드웨어 및 소프트웨어 시리얼 포트가 모두 초기화됩니다.\n\n```js\nSerial.begin(9600);\nSerial1.begin(9600);\n```\n\n<div class=\"content-ad\"></div>\n\n# 루프\n\n데이터 수신: Uno는 Mega로부터 소프트웨어 시리얼 포트에서 데이터를 수신합니다.\n\n```js\nif (Serial1.available() > 0) {\n   char received = Serial1.read();\n   ...\n}\n```\n\n데이터 응답: Mega와 유사하게, Uno는 수신한 데이터를 사용하여 LED를 제어합니다.\n\n<div class=\"content-ad\"></div>\n\n\n```js\nif (received == '1') {\n   digitalWrite(LED_BUILTIN, LOW);\n} else if (received == '2') {\n   digitalWrite(LED_BUILTIN, HIGH);\n}\n```\n\n# 함께 모두 넣어봅시다\n\n# 아두이노 메가 2560 (마스터)\n\n```js\n#include <SoftwareSerial.h>\n\nvoid setup() {\n    pinMode(LED_BUILTIN, OUTPUT);\n    digitalWrite(LED_BUILTIN, HIGH);\n    Serial.begin(9600);\n    Serial1.begin(9600);\n}\n\nvoid loop() {\n    if (Serial.available() > 0) {\n        char received = Serial.read();\n        Serial1.write(received);\n\n        if (received == '1') {\n            digitalWrite(LED_BUILTIN, LOW);\n        } else if (received == '2') {\n            digitalWrite(LED_BUILTIN, HIGH);\n        }\n    }\n}\n```\n\n\n<div class=\"content-ad\"></div>\n\n# 아두이노 Uno (슬레이브)\n\n```js\n#include <SoftwareSerial.h>\n\nSoftwareSerial Serial1(10, 9); // RX, TX\n\nvoid setup() {\n    pinMode(LED_BUILTIN, OUTPUT);\n    digitalWrite(LED_BUILTIN, HIGH);\n    Serial.begin(9600);\n    Serial1.begin(9600);\n}\n\nvoid loop() {\n    if (Serial1.available() > 0) {\n        char received = Serial1.read();\n\n        if (received == '1') {\n            digitalWrite(LED_BUILTIN, LOW);\n        } else if (received == '2') {\n            digitalWrite(LED_BUILTIN, HIGH);\n        }\n    }\n}\n```\n\n# 배선\n\n5V to 5V 연결:\n\n<div class=\"content-ad\"></div>\n\n- 아두이노 메가의 5V 핀을 아두이노 우노의 5V 핀에 연결하십시오. 이 단계에서 우노를 메가로부터 전원을 공급합니다.\n\n그라운드 연결:\n\n- 아두이노 메가의 GND(그라운드) 핀을 아두이노 우노의 GND 핀에 연결하십시오. 이 공통 그라운드는 올바른 통신을 위해 중요합니다.\n\nTX에서 RX로 연결:\n\n<div class=\"content-ad\"></div>\n\n- 아두이노 메가의 TX1 (송신) 핀을 아두이노 우노의 10번 핀에 연결하세요. 코드에서 우노의 SoftwareSerial에서 10번 핀을 RX (수신) 핀으로 설정해주세요.\n\n컴퓨터 연결 및 시리얼 모니터:\n\n- USB 케이블을 사용하여 아두이노 메가를 컴퓨터에 연결하세요.\n- 아두이노 IDE를 열고 메가에 대한 올바른 COM 포트를 선택하세요.\n- 아두이노 IDE에서 시리얼 모니터를 열어주세요. 이것은 메가에서 우노로 데이터를 보내는 데 사용될 것입니다.\n\n이제 실험을 위한 설정이 완료되었습니다. 아두이노 IDE의 시리얼 모니터에 '1' 또는 '2'를 입력하면 (메가를 선택한 상태에서), 메가는 TX1을 통해 10번 핀에 데이터를 보내고, 우노는 수신된 데이터에 따라 LED를 켜거나 끌 것입니다.","ogImage":{"url":"/assets/img/2024-06-20-MasteringSerialCommunicationArduinoMega2560MasterandUnoSlaveUARTTutorial_0.png"},"coverImage":"/assets/img/2024-06-20-MasteringSerialCommunicationArduinoMega2560MasterandUnoSlaveUARTTutorial_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-20-MasteringSerialCommunicationArduinoMega2560MasterandUnoSlaveUARTTutorial_0.png\" alt=\"이미지\"></p>\n<h1>소개</h1>\n<p>아두이노 프로젝트의 영역에서 시리얼 통신은 기본적인 기술입니다. 이것은 새로운 언어로 대화하는 것을 배우는 것과 같습니다. 하지만 단어 대신에 전기 신호를 사용합니다. 이 튜토리얼에서는 두 가지 인기 있는 아두이노 보드인 메가 2560을 마스터로, 그리고 우노를 슬레이브로하여 UART (Universal Asynchronous Receiver-Transmitter) 통신을 설정하는 방법을 알아볼 것입니다. 이 안내서를 끝까지 따라오면 이 두 보드가 서로 '대화'할 수 있는 방법에 대해 명확히 이해하게 될 것입니다.</p>\n<h1>필요한 것</h1>\n<ul>\n<li>1 x 아두이노 메가 2560</li>\n<li>1 x 아두이노 우노</li>\n<li>점퍼 와이어</li>\n<li>아두이노 IDE</li>\n</ul>\n<h1>마스터 이해하기: 아두이노 메가 2560</h1>\n<h1>설정</h1>\n<p>시리얼 포트 초기화: 우리의 메가 2560은 두 개의 시리얼 포트를 사용합니다. 디버깅용으로 Serial을 사용하고 Uno와 통신하기 위해 Serial1을 사용합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">begin</span>(<span class=\"hljs-number\">9600</span>);\n<span class=\"hljs-title class_\">Serial1</span>.<span class=\"hljs-title function_\">begin</span>(<span class=\"hljs-number\">9600</span>);\n</code></pre>\n<p>LED로 표시기 사용: 내장 LED를 사용하여 받은 데이터를 시각적으로 표현합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title function_\">pinMode</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">OUTPUT</span>);\n<span class=\"hljs-title function_\">digitalWrite</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">HIGH</span>);\n</code></pre>\n<h1>루프</h1>\n<p>데이터 수신: Mega는 시리얼 포트에서 데이터를 기다립니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">available</span>() > <span class=\"hljs-number\">0</span>) {\n   char received = <span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">read</span>();\n   ...\n}\n</code></pre>\n<p>데이터 전달: 데이터를 수신하면 Mega는 동일한 데이터를 Serial1을 통해 Uno로 전달합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">Serial1</span>.<span class=\"hljs-title function_\">write</span>(received);\n</code></pre>\n<p>데이터에 따른 조치: 받은 데이터가 '1'이면 LED가 꺼지고, '2'이면 켜집니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">if</span> (received == <span class=\"hljs-string\">'1'</span>) {\n   <span class=\"hljs-title function_\">digitalWrite</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">LOW</span>);\n} <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (received == <span class=\"hljs-string\">'2'</span>) {\n   <span class=\"hljs-title function_\">digitalWrite</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">HIGH</span>);\n}\n</code></pre>\n<h1>슬레이브 이해하기: 아두이노 우노</h1>\n<h1>설정</h1>\n<p>소프트웨어 시리얼: Uno는 하드웨어 시리얼 포트가 하나뿐이기 때문에, 우리는 SoftwareSerial을 사용하여 가상 시리얼 포트를 생성합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">SoftwareSerial</span> <span class=\"hljs-title class_\">Serial1</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">9</span>); <span class=\"hljs-comment\">// RX, TX</span>\n</code></pre>\n<p>시리얼 포트 초기화: 하드웨어 및 소프트웨어 시리얼 포트가 모두 초기화됩니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">begin</span>(<span class=\"hljs-number\">9600</span>);\n<span class=\"hljs-title class_\">Serial1</span>.<span class=\"hljs-title function_\">begin</span>(<span class=\"hljs-number\">9600</span>);\n</code></pre>\n<h1>루프</h1>\n<p>데이터 수신: Uno는 Mega로부터 소프트웨어 시리얼 포트에서 데이터를 수신합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">Serial1</span>.<span class=\"hljs-title function_\">available</span>() > <span class=\"hljs-number\">0</span>) {\n   char received = <span class=\"hljs-title class_\">Serial1</span>.<span class=\"hljs-title function_\">read</span>();\n   ...\n}\n</code></pre>\n<p>데이터 응답: Mega와 유사하게, Uno는 수신한 데이터를 사용하여 LED를 제어합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">if</span> (received == <span class=\"hljs-string\">'1'</span>) {\n   <span class=\"hljs-title function_\">digitalWrite</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">LOW</span>);\n} <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (received == <span class=\"hljs-string\">'2'</span>) {\n   <span class=\"hljs-title function_\">digitalWrite</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">HIGH</span>);\n}\n</code></pre>\n<h1>함께 모두 넣어봅시다</h1>\n<h1>아두이노 메가 2560 (마스터)</h1>\n<pre><code class=\"hljs language-js\">#include &#x3C;<span class=\"hljs-title class_\">SoftwareSerial</span>.<span class=\"hljs-property\">h</span>>\n\n<span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-title function_\">pinMode</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">OUTPUT</span>);\n    <span class=\"hljs-title function_\">digitalWrite</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">HIGH</span>);\n    <span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">begin</span>(<span class=\"hljs-number\">9600</span>);\n    <span class=\"hljs-title class_\">Serial1</span>.<span class=\"hljs-title function_\">begin</span>(<span class=\"hljs-number\">9600</span>);\n}\n\n<span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">loop</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">available</span>() > <span class=\"hljs-number\">0</span>) {\n        char received = <span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">read</span>();\n        <span class=\"hljs-title class_\">Serial1</span>.<span class=\"hljs-title function_\">write</span>(received);\n\n        <span class=\"hljs-keyword\">if</span> (received == <span class=\"hljs-string\">'1'</span>) {\n            <span class=\"hljs-title function_\">digitalWrite</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">LOW</span>);\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (received == <span class=\"hljs-string\">'2'</span>) {\n            <span class=\"hljs-title function_\">digitalWrite</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">HIGH</span>);\n        }\n    }\n}\n</code></pre>\n<h1>아두이노 Uno (슬레이브)</h1>\n<pre><code class=\"hljs language-js\">#include &#x3C;<span class=\"hljs-title class_\">SoftwareSerial</span>.<span class=\"hljs-property\">h</span>>\n\n<span class=\"hljs-title class_\">SoftwareSerial</span> <span class=\"hljs-title class_\">Serial1</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">9</span>); <span class=\"hljs-comment\">// RX, TX</span>\n\n<span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-title function_\">pinMode</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">OUTPUT</span>);\n    <span class=\"hljs-title function_\">digitalWrite</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">HIGH</span>);\n    <span class=\"hljs-title class_\">Serial</span>.<span class=\"hljs-title function_\">begin</span>(<span class=\"hljs-number\">9600</span>);\n    <span class=\"hljs-title class_\">Serial1</span>.<span class=\"hljs-title function_\">begin</span>(<span class=\"hljs-number\">9600</span>);\n}\n\n<span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">loop</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">Serial1</span>.<span class=\"hljs-title function_\">available</span>() > <span class=\"hljs-number\">0</span>) {\n        char received = <span class=\"hljs-title class_\">Serial1</span>.<span class=\"hljs-title function_\">read</span>();\n\n        <span class=\"hljs-keyword\">if</span> (received == <span class=\"hljs-string\">'1'</span>) {\n            <span class=\"hljs-title function_\">digitalWrite</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">LOW</span>);\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (received == <span class=\"hljs-string\">'2'</span>) {\n            <span class=\"hljs-title function_\">digitalWrite</span>(<span class=\"hljs-variable constant_\">LED_BUILTIN</span>, <span class=\"hljs-variable constant_\">HIGH</span>);\n        }\n    }\n}\n</code></pre>\n<h1>배선</h1>\n<p>5V to 5V 연결:</p>\n<ul>\n<li>아두이노 메가의 5V 핀을 아두이노 우노의 5V 핀에 연결하십시오. 이 단계에서 우노를 메가로부터 전원을 공급합니다.</li>\n</ul>\n<p>그라운드 연결:</p>\n<ul>\n<li>아두이노 메가의 GND(그라운드) 핀을 아두이노 우노의 GND 핀에 연결하십시오. 이 공통 그라운드는 올바른 통신을 위해 중요합니다.</li>\n</ul>\n<p>TX에서 RX로 연결:</p>\n<ul>\n<li>아두이노 메가의 TX1 (송신) 핀을 아두이노 우노의 10번 핀에 연결하세요. 코드에서 우노의 SoftwareSerial에서 10번 핀을 RX (수신) 핀으로 설정해주세요.</li>\n</ul>\n<p>컴퓨터 연결 및 시리얼 모니터:</p>\n<ul>\n<li>USB 케이블을 사용하여 아두이노 메가를 컴퓨터에 연결하세요.</li>\n<li>아두이노 IDE를 열고 메가에 대한 올바른 COM 포트를 선택하세요.</li>\n<li>아두이노 IDE에서 시리얼 모니터를 열어주세요. 이것은 메가에서 우노로 데이터를 보내는 데 사용될 것입니다.</li>\n</ul>\n<p>이제 실험을 위한 설정이 완료되었습니다. 아두이노 IDE의 시리얼 모니터에 '1' 또는 '2'를 입력하면 (메가를 선택한 상태에서), 메가는 TX1을 통해 10번 핀에 데이터를 보내고, 우노는 수신된 데이터에 따라 LED를 켜거나 끌 것입니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}