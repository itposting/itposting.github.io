{"pageProps":{"post":{"title":"WSL-2에서 Ubuntu를 사용하여 Gnome 데스크톱 설정하기","description":"","date":"2024-06-20 14:39","slug":"2024-06-20-GnomeDesktoponWSL-2UsingUbuntu","content":"\n\n<img src=\"/assets/img/2024-06-20-GnomeDesktoponWSL-2UsingUbuntu_0.png\" />\n\n이전에는 WSL-2에서 SystemD를 활성화한 Debain을 설정하는 방법을 보여드렸습니다. 이번에는 한 발짝 더 나아가 GNOME 데스크톱을 설치하고 WSL2 VM을 완전한 GUI로 사용해 봅시다!\n\n- 우선 다음 명령어를 사용하여 WSL2에 Ubuntu를 설치해 보세요: wsl --install -d ubuntu\n- Ubuntu를 설정한 후에는 다음 명령어를 실행하세요:\n\n```js\nsudo apt update\nsudo apt-mark hold acpid acpi-support\nsudo apt upgrade\n```\n\n<div class=\"content-ad\"></div>\n\n- 이제 유용한 systemd 설정 스크립트를 실행하여 WSL 내에서 systemd 환경을 설정할 수 있습니다. 이 스크립트는 필요한 패키지를 설치하고 스크립트를 복사하여 sudoers를 구성하며 bash.bashrc를 수정하고 Windows에서 환경 변수를 설정하여 WSL 내에서 systemd를 사용할 수 있게 합니다. 이를 통해 WSL 내에서 서비스 및 기타 기능을 활성화할 수 있습니다. 기본 이닛 시스템에서는 사용할 수 없는 기능들을 사용할 수 있습니다.\n\n```js\ncd ~\ngit clone https://github.com/DamionGans/ubuntu-wsl2-systemd-script.git\ncd ubuntu-wsl2-systemd-script/\n./ubuntu-wsl2-systemd-script.sh\n```\n\n- 이제 WSL을 종료하고 powershell이나 cmd 터미널에서 다음 명령을 실행하여 WSL을 다시 시작하고 업데이트할 수 있습니다:\n\n```js\nwsl.exe -d ubuntu --shutdown\nwsl.exe -d ubuntu\n```\n\n<div class=\"content-ad\"></div>\n\n- WSL에서 Ubuntu 명령줄에 다시 돌아오면 다음 환경 변수를 내보냅니다:\n\n```js\nexport DISPLAY=\"$(ip route | awk '{print $3; exit}')\":0;\nexport XDG_CONFIG_HOME=$HOME/.config\nexport XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg\nexport XDG_SESSION_DESKTOP=ubuntu\nexport XDG_SESSION_TYPE=x11\nexport XDG_CURRENT_DESKTOP=ubuntu:GNOME\nexport XDG_SESSION_CLASS=user\nexport XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop\nexport GNOME_SHELL_SESSION_MODE=ubuntu\nexport XDG_RUNTIME_DIR=\"/run/user/1000\"\n```\n\n- 이제 다음 명령을 실행합니다:\n\n```js\nsudo mkdir -p /run/user/1000\nsudo chmod 700 /run/user/1000\nsudo chown $(whoami): /run/user/1000\n```\n\n<div class=\"content-ad\"></div>\n\n- 모든 설정이 완료되었으니 이제 GNOME 데스크톱을 설치해봅시다:\n\n```js\nsudo apt install ubuntu-desktop gnome\n```\n\n- https://sourceforge.net/projects/vcxsrv/ 에서 VcXsrv Windows X Server를 다운로드하세요. 저는 1.20.14.0 버전을 사용 중입니다. Windows에서 설치하세요.\n- Windows에서 XLaunch를 실행하여 VcXsrv를 시작하세요 (이미 실행 중인 VcXsrv가 있을 경우 종료하세요. VcXsrv의 설정이 중요합니다). 첫 번째 페이지에서 \"Fullscreen\"을 선택하세요. 세 번째 페이지의 \"VcXsrv의 추가 매개변수\" 필드에 -ac -wgl -dpms를 입력하세요.\n\n![이미지](/assets/img/2024-06-20-GnomeDesktoponWSL-2UsingUbuntu_1.png)\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-20-GnomeDesktoponWSL-2UsingUbuntu_2.png)\n\nVcXsrv를 시작하면 전체 검은 화면이 표시될 수 있습니다. 이는 아직 내용이 채워지지 않은 전체 화면의 효과입니다. Alt-Tab을 눌러 WSL의 Ubuntu 명령줄로 전환할 수 있습니다.\n\n- dbus-launch --exit-with-session gnome-session를 실행합니다.\n- 전체 화면 VcXsrv 창으로 이동합니다. 이제 Ubuntu GNOME 데스크톱이 나타날 것입니다. 즐기세요!\n- 사용하지 않을 때는 GNOME을 그냥 둘 수 있습니다. 그러나 GNOME을 종료하려면 VcXsrv 창을 닫거나 WSL의 Ubuntu 명령줄에서 Ctrl-C를 누르면 됩니다.\n\n성능이 조금 느릴 수 있습니다. 지금은 GPU 가속화를 활성화하는 방법을 모르겠지만, 이것이 시작점입니다!\n","ogImage":{"url":"/assets/img/2024-06-20-GnomeDesktoponWSL-2UsingUbuntu_0.png"},"coverImage":"/assets/img/2024-06-20-GnomeDesktoponWSL-2UsingUbuntu_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>이전에는 WSL-2에서 SystemD를 활성화한 Debain을 설정하는 방법을 보여드렸습니다. 이번에는 한 발짝 더 나아가 GNOME 데스크톱을 설치하고 WSL2 VM을 완전한 GUI로 사용해 봅시다!</p>\n<ul>\n<li>우선 다음 명령어를 사용하여 WSL2에 Ubuntu를 설치해 보세요: wsl --install -d ubuntu</li>\n<li>Ubuntu를 설정한 후에는 다음 명령어를 실행하세요:</li>\n</ul>\n<pre><code class=\"hljs language-js\">sudo apt update\nsudo apt-mark hold acpid acpi-support\nsudo apt upgrade\n</code></pre>\n<ul>\n<li>이제 유용한 systemd 설정 스크립트를 실행하여 WSL 내에서 systemd 환경을 설정할 수 있습니다. 이 스크립트는 필요한 패키지를 설치하고 스크립트를 복사하여 sudoers를 구성하며 bash.bashrc를 수정하고 Windows에서 환경 변수를 설정하여 WSL 내에서 systemd를 사용할 수 있게 합니다. 이를 통해 WSL 내에서 서비스 및 기타 기능을 활성화할 수 있습니다. 기본 이닛 시스템에서는 사용할 수 없는 기능들을 사용할 수 있습니다.</li>\n</ul>\n<pre><code class=\"hljs language-js\">cd ~\ngit clone <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//github.com/DamionGans/ubuntu-wsl2-systemd-script.git</span>\ncd ubuntu-wsl2-systemd-script/\n./ubuntu-wsl2-systemd-script.<span class=\"hljs-property\">sh</span>\n</code></pre>\n<ul>\n<li>이제 WSL을 종료하고 powershell이나 cmd 터미널에서 다음 명령을 실행하여 WSL을 다시 시작하고 업데이트할 수 있습니다:</li>\n</ul>\n<pre><code class=\"hljs language-js\">wsl.<span class=\"hljs-property\">exe</span> -d ubuntu --shutdown\nwsl.<span class=\"hljs-property\">exe</span> -d ubuntu\n</code></pre>\n<ul>\n<li>WSL에서 Ubuntu 명령줄에 다시 돌아오면 다음 환경 변수를 내보냅니다:</li>\n</ul>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-variable constant_\">DISPLAY</span>=<span class=\"hljs-string\">\"$(ip route | awk '{print $3; exit}')\"</span>:<span class=\"hljs-number\">0</span>;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-variable constant_\">XDG_CONFIG_HOME</span>=$HOME/.<span class=\"hljs-property\">config</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-variable constant_\">XDG_CONFIG_DIRS</span>=<span class=\"hljs-regexp\">/etc/</span>xdg/xdg-<span class=\"hljs-attr\">ubuntu</span>:<span class=\"hljs-regexp\">/etc/</span>xdg\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-variable constant_\">XDG_SESSION_DESKTOP</span>=ubuntu\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-variable constant_\">XDG_SESSION_TYPE</span>=x11\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-variable constant_\">XDG_CURRENT_DESKTOP</span>=<span class=\"hljs-attr\">ubuntu</span>:<span class=\"hljs-variable constant_\">GNOME</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-variable constant_\">XDG_SESSION_CLASS</span>=user\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-variable constant_\">XDG_DATA_DIRS</span>=<span class=\"hljs-regexp\">/usr/</span>share/<span class=\"hljs-attr\">ubuntu</span>:<span class=\"hljs-regexp\">/usr/</span>local/share/:<span class=\"hljs-regexp\">/usr/</span>share/:<span class=\"hljs-regexp\">/var/</span>lib/snapd/desktop\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-variable constant_\">GNOME_SHELL_SESSION_MODE</span>=ubuntu\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-variable constant_\">XDG_RUNTIME_DIR</span>=<span class=\"hljs-string\">\"/run/user/1000\"</span>\n</code></pre>\n<ul>\n<li>이제 다음 명령을 실행합니다:</li>\n</ul>\n<pre><code class=\"hljs language-js\">sudo mkdir -p /run/user/<span class=\"hljs-number\">1000</span>\nsudo chmod <span class=\"hljs-number\">700</span> /run/user/<span class=\"hljs-number\">1000</span>\nsudo chown $(whoami): <span class=\"hljs-regexp\">/run/u</span>ser/<span class=\"hljs-number\">1000</span>\n</code></pre>\n<ul>\n<li>모든 설정이 완료되었으니 이제 GNOME 데스크톱을 설치해봅시다:</li>\n</ul>\n<pre><code class=\"hljs language-js\">sudo apt install ubuntu-desktop gnome\n</code></pre>\n<ul>\n<li><a href=\"https://sourceforge.net/projects/vcxsrv/\" rel=\"nofollow\" target=\"_blank\">https://sourceforge.net/projects/vcxsrv/</a> 에서 VcXsrv Windows X Server를 다운로드하세요. 저는 1.20.14.0 버전을 사용 중입니다. Windows에서 설치하세요.</li>\n<li>Windows에서 XLaunch를 실행하여 VcXsrv를 시작하세요 (이미 실행 중인 VcXsrv가 있을 경우 종료하세요. VcXsrv의 설정이 중요합니다). 첫 번째 페이지에서 \"Fullscreen\"을 선택하세요. 세 번째 페이지의 \"VcXsrv의 추가 매개변수\" 필드에 -ac -wgl -dpms를 입력하세요.</li>\n</ul>\n<p><img src=\"/assets/img/2024-06-20-GnomeDesktoponWSL-2UsingUbuntu_1.png\" alt=\"이미지\"></p>\n<p><img src=\"/assets/img/2024-06-20-GnomeDesktoponWSL-2UsingUbuntu_2.png\" alt=\"이미지\"></p>\n<p>VcXsrv를 시작하면 전체 검은 화면이 표시될 수 있습니다. 이는 아직 내용이 채워지지 않은 전체 화면의 효과입니다. Alt-Tab을 눌러 WSL의 Ubuntu 명령줄로 전환할 수 있습니다.</p>\n<ul>\n<li>dbus-launch --exit-with-session gnome-session를 실행합니다.</li>\n<li>전체 화면 VcXsrv 창으로 이동합니다. 이제 Ubuntu GNOME 데스크톱이 나타날 것입니다. 즐기세요!</li>\n<li>사용하지 않을 때는 GNOME을 그냥 둘 수 있습니다. 그러나 GNOME을 종료하려면 VcXsrv 창을 닫거나 WSL의 Ubuntu 명령줄에서 Ctrl-C를 누르면 됩니다.</li>\n</ul>\n<p>성능이 조금 느릴 수 있습니다. 지금은 GPU 가속화를 활성화하는 방법을 모르겠지만, 이것이 시작점입니다!</p>\n</body>\n</html>\n"},"__N_SSG":true}