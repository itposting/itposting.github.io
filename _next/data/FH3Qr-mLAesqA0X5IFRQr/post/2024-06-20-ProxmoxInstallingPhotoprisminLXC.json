{"pageProps":{"post":{"title":"프록시목스Proxmox LXC에 포토프리즘Photoprism 설치하기","description":"","date":"2024-06-20 17:14","slug":"2024-06-20-ProxmoxInstallingPhotoprisminLXC","content":"\n\n![이미지](/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_0.png)\n\nPhotoprism은 AI 기반의 멋진 사진 관리 서비스로, 여러분의 사진을 색인화, 보기 및 공유할 수 있습니다. 해당 기능에 대해 자세히 알아볼 수 있는 공식 웹사이트가 있습니다. 오늘은 가정 환경에서 Proxmox의 LXC 컨테이너에 이를 설치해 보겠습니다.\n\n## 요구 사항:\n\n- Proxmox가 완전히 설치되고 구성되어 있으며 GUI에 액세스할 수 있어야 합니다.\n- 정적 IP 주소를 설정하고 정적 IP, DHCP 범위에 대한 기본적인 지식이 있는 라우터 제어 패널에 액세스해야 합니다.\n- 사진 및 섬네일에 충분한 스토리지 공간이 있어야 합니다. (대부분의 컬렉션은 총 200GB까지 용량을 차지할 수 있다고 알려져 있습니다. 이 강좌에서는 NAS의 네트워크 공유를 사용할 것이지만, 원하는 경우 로컬 디스크의 폴더를 사용할 수도 있습니다.)\n- 터미널에 대한 기본 지식이 필요합니다. (파일을 열고 저장하는 등)\n- Proxmox 컨테이너에 대한 기본 지식이 필요합니다. (LXC 템플릿 다운로드, 컨테이너 설정 등)\n\n<div class=\"content-ad\"></div>\n\n## 컨테이너 생성:\n\n다음 리소스를 사용하여 컨테이너를 생성하세요:\n\n- 선택한 호스트 이름 (컨테이너 이름)을 가진 관리자 권한이 있는 컨테이너를 만듭니다.\n\n![이미지](/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_1.png)\n\n<div class=\"content-ad\"></div>\n\n-  당신이 좋아하는 리눅스 플레이버는 무엇인가요? 저는 여기서 Debian 11을 사용했어요.\n- ~16GB의 루트 저장공간입니다. (사진을 저장하기에는 절대 충분하지 않아요. 외부 저장공간을 꼭 사용하시길 강력히 추천드려요. 제 개인 NAS에서 저장 공간을 사용하겠습니다.)\n\n![첨부된 이미지](/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_2.png)\n\n- 시스템의 모든 코어를 사용하세요 (4~8개가 좋습니다).\n\n![첨부된 이미지](/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_3.png)\n\n<div class=\"content-ad\"></div>\n\n- 8GB RAM 이상, 4GB 스왑 이상이 필요합니다.\n\n![이미지](/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_4.png)\n\n- DHCP IPv4 주소를 선택하시고, 나중에 라우터에서 설정할 수 있습니다.\n\n![이미지](/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_5.png)\n\n<div class=\"content-ad\"></div>\n\n- 나머지는 기본값으로 둔 채로 컨테이너를 시작하지 마세요.\n- 컨테이너 측면 표시줄의 옵션으로 이동하여 다음을 활성화하세요:\n\n```js\nnesting=1\nSMB/CIFS=1 # 외부 공유를 사용하는 경우에만 선택적으로 필요\n```\n\n![이미지](/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_6.png)\n\n- 이제 컨테이너를 시작하세요.\n\n<div class=\"content-ad\"></div>\n\n## IP 주소 설정하기:\n\n정적 IP 주소를 설정하면 서비스에 더 쉽게 액세스할 수 있습니다.\n\n이 단계는 라우터마다 다를 수 있습니다. 제어 패널에 로그인해야 합니다. 일반적으로 192.168.xxx.1을 통해 액세스할 수 있습니다. 그리고 컨테이너에 정적 IP 주소를 추가하셔야 합니다. 정적 IP 할당이 DHCP 할당 범위와 겹치지 않도록 주의하셔야 합니다. 일반적으로 정적 IP에는 192.168.xxx.1~192.168.xxx.50을 추천합니다.\n\n참고: 만약 컨테이너가 라우터 장치 목록에 나타나지 않으면, 컨테이너로 돌아가 apt update를 실행하고 라우터 화면을 새로고침하세요.\n\n<div class=\"content-ad\"></div>\n\n대부분 인기있는 라우터에 대해 이 작업을 하는 방법을 다루는 YouTube 동영상이 많이 있습니다. 이 작업을 완료한 후 컨테이너를 다시 부팅하십시오. Proxmox를 다시 부팅할 필요는 없습니다.\n\n## 스토리지 설정:\n\n이전에 언급했던 대로 16Gb의 부팅 디스크 공간은 대량의 섬네일이나 사진을 저장하기에 부족합니다. Proxmox 호스트 디스크에 충분한 공간이 있고 lvm 스토리지로 적절히 구성된 경우, 부팅 디스크에 200-300GB의 스토리지를 추가하고 계속 진행할 수 있습니다.\n\n저는 컨테이너 부팅 디스크에 파일을 저장하는 것을 좋아하지 않으며 가능한 한 작게 유지합니다. Proxmox 호스트 디스크가 가득 차는 경우... 복구는 가능하지만 절대로 처지고 싶지 않은 상황입니다.\n\n<div class=\"content-ad\"></div>\n\n이 경우에는 NAS가 있어서 192.168.xxx.yy에 위치한 appdata라는 SMB 공유 폴더를 노출시킵니다.\n\n필요한 패키지를 설치하십시오:\n\n```js\napt install cifs-utils\n```\n\n마운트 폴더를 생성하세요:\n\n<div class=\"content-ad\"></div>\n\n```js\r\n/media/appdata를 만들기\r\n```\n\nSMB 자격 증명 파일을 만들기:\n\n```js\r\n/root/.smb에 nano 사용\r\n```\n\n다음과 같이 자격 증명을 파일에 추가하세요:\n\n<div class=\"content-ad\"></div>\n\n```js\n사용자 이름=당신의_사용자_이름\n비밀번호=당신의_비밀번호\n```\n\nfstab 설정하기:\n\n```js\nnano /etc/fstab\n```\n\n다음 줄을 추가하십시오:\n설정에 맞게 192.168.xxx.yy/appdata를 변경하십시오.\n\n<div class=\"content-ad\"></div>\n\n```js\n//192.168.xxx.yy/appdata /media/appdata cifs credentials=/root/.smb,uid=0,gid=0,dir_mode=0777,file_mode=0777,users,rw,iocharset=utf8,noperm 0 0\n```\n\n이제 `mount -a`를 실행하여 공유를 마운트하세요.\n\n## Photoprism 설치:\n\n이제 컨테이너와 저장소가 설정되었으므로 Photoprism을 설치할 준비가 되었습니다.\n\n<div class=\"content-ad\"></div>\n\n기존 패키지를 업데이트하세요:\n\n```bash\napt update && apt upgrade\n```\n\n필요한 패키지를 설치하세요:\n\n```bash\napt install -y gcc g++ git gnupg make zip unzip ffmpeg exiftool darktable libpng-dev libjpeg-dev libtiff-dev imagemagick libheif-examples\n```\n\n<div class=\"content-ad\"></div>\n\nNode.js 설치하기:\n\n```js\nwget https://deb.nodesource.com/setup_18.x -O node_setup.sh\nchmod +x node_setup.sh\n./node_setup.sh\napt install -y nodejs\nrm node_setup.sh\n```\n\nGoLang 설치하기:\n본 안내서 작성 시점에서 1.20.6 버전이 최신입니다. 최신 버전을 확인하려면 웹 사이트를 방문하여 URL을 변경해 주세요.\n\n```js\nwget https://golang.org/dl/go1.20.6.linux-amd64.tar.gz\nrm -rf /usr/local/go\ntar -C /usr/local -xzf go1.20.6.linux-amd64.tar.gz\nln -s /usr/local/go/bin/go /usr/local/bin/go\nrm go1.20.6.linux-amd64.tar.gz\n```\n\n<div class=\"content-ad\"></div>\n\n텐서플로우 설치:\n이 버전은 AVX2 호환 CPU용입니다 (현대적인 CPU 대부분이 해당됩니다). Photoprism 웹사이트에서 단순히 AVX 용이나 AVX를 지원하지 않는 CPU 용 버전을 찾을 수 있습니다.\n\n```js\nwget https://dl.photoprism.org/tensorflow/linux/libtensorflow-linux-avx2-1.15.2.tar.gz\nsudo tar -C /usr/local -xzf libtensorflow-linux-avx2-1.15.2.tar.gz\nsudo ldconfig\nrm libtensorflow-linux-avx2-1.15.2.tar.gz\n```\n\nPhotoprism 다운로드 및 설치:\nPhotoprism을 빌드하는 과정에서 많은 메모리가 사용될 수 있습니다. 여기서처럼 컨테이너를 구성한 경우 오류가 발생하지 않아야 합니다. 메모리 부족(OOM) 오류가 발생하면 이를 확인하고 각 make 단계를 개별적으로 실행하세요.\n\n```js\nmkdir -p /opt/photoprism/bin\ngit clone https://github.com/photoprism/photoprism.git\ncd photoprism\ngit checkout release\nmake all\n./scripts/build.sh prod /opt/photoprism/bin/photoprism\ncp -a assets/ /opt/photoprism/assets/\n```\n\n<div class=\"content-ad\"></div>\n\n## 구성:\n\nPhotoprism의 작업 디렉토리를 만들고 구성 파일을 추가하세요.\n전체 구성 옵션은 여기를 참조하세요.\n\n```js\nmkdir /var/lib/photoprism\nnano /var/lib/photoprism/.env\n```\n\n다음을 구성 파일에 추가하세요:\n기본 SQLite 데이터베이스를 작은 컬렉션 이외의 것에는 권장하지 않습니다. 이를 위해 MariaDB를 사용하는 것을 고려해보세요. MariaDB를 설치하는 방법에 대한 별도 가이드가 있습니다.\n\n<div class=\"content-ad\"></div>\n\n저장 요소를 변경하려면 Photoprism 저장 경로를 마운트된 폴더로 변경해야 합니다. 저의 경우에는 /media/appdata가 될 것입니다.\n\n```js\n# 초기 admin 사용자의 비밀번호\nPHOTOPRISM_AUTH_MODE=\"password\"\nPHOTOPRISM_ADMIN_PASSWORD=\"photoprism\"\n\n# Photoprism 저장 디렉터리\nPHOTOPRISM_STORAGE_PATH=\"/var/lib/photoprism\"\nPHOTOPRISM_ORIGINALS_PATH=\"/var/lib/photoprism/photos/Originals\"\nPHOTOPRISM_IMPORT_PATH=\"/var/lib/photoprism/photos/Import\"\n\n# SQLite 대신 MariaDB/MySQL을 사용하는 경우 아래 주석 해제 (기본 설정값)\n# PHOTOPRISM_DATABASE_DRIVER=\"mysql\"\n# PHOTOPRISM_DATABASE_SERVER=\"MYSQL_IP_HERE:PORT\"\n# PHOTOPRISM_DATABASE_NAME=\"DB_NAME\"\n# PHOTOPRISM_DATABASE_USER=\"USER_NAME\"\n# PHOTOPRISM_DATABASE_PASSWORD=\"PASSWORD\"\n```\n\nPhotoprism 서비스 설정:\nPhotoprism이 부팅될 때 시작되도록 설정합니다.\n\n서비스 정의 파일 생성:\n\n<div class=\"content-ad\"></div>\n\n```js\nnano /etc/systemd/system/photoprism.service\n```\n\n서비스 파일에 다음을 추가하세요:\n\n```js\n[Unit]\nDescription=PhotoPrism 서비스\nAfter=network.target\nStartLimitIntervalSec=500\nStartLimitBurst=5\n\n[Service]\nType=simple\nRestart=on-failure\nRestartSec=5s\nWorkingDirectory=/opt/photoprism\nEnvironmentFile=/var/lib/photoprism/.env\nExecStart=/opt/photoprism/bin/photoprism up\nExecStop=/opt/photoprism/bin/photoprism down\n\n[Install]\nWantedBy=multi-user.target\n```\n\n이제 데몬을 다시로드하고 서비스를 시작하세요!\n\n<div class=\"content-ad\"></div>\n\n```js\nsystemctl daemon-reload\nsystemctl start photoprism\nsystemctl enable photoprism\n```\n\n서비스 상태를 확인하세요:\n\n```js\nsystemctl status photoprism\n```\n\n모든 것이 잘 실행됐다면 (활성화된 상태는 녹색으로 표시됩니다):\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_7.png)\n\n지금은 이전에 설정한 IP 주소와 포트 2342를 통해 서버에 액세스할 수 있어야 합니다.\n\n```js\nhttp://YOUR-IP:2342\n```\n\n## 크레딧:\n\n\n<div class=\"content-ad\"></div>\n\n포토프리즘 설치는 아래 안내서를 기반으로 진행되었고, 제게는 너무나 귀중한 정보입니다. 문제 해결이 필요할 때 대비하여 읽어보는 것을 고려해보세요.\n\n고지사항:\n\n이 문서는 프로덕션 또는 비즈니스 환경에서의 설정을 위한 안내서가 아니며, 공개 인터넷에 노출할 준비가 된 상태가 아닙니다.\n\n저는 IT 전문가가 아닙니다. 기술 지원도 제공하지 않습니다. 서버를 가진 대학생입니다. 시스템에서 실행하는 모든 명령어에 대한 최종 책임은 여러분에게 있습니다.\n\n<div class=\"content-ad\"></div>\n\n질문이 있으면 댓글을 남겨주세요. 즐거운 시간 보내세요!","ogImage":{"url":"/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_0.png"},"coverImage":"/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_0.png","tag":["Tech"],"readingTime":8},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_0.png\" alt=\"이미지\"></p>\n<p>Photoprism은 AI 기반의 멋진 사진 관리 서비스로, 여러분의 사진을 색인화, 보기 및 공유할 수 있습니다. 해당 기능에 대해 자세히 알아볼 수 있는 공식 웹사이트가 있습니다. 오늘은 가정 환경에서 Proxmox의 LXC 컨테이너에 이를 설치해 보겠습니다.</p>\n<h2>요구 사항:</h2>\n<ul>\n<li>Proxmox가 완전히 설치되고 구성되어 있으며 GUI에 액세스할 수 있어야 합니다.</li>\n<li>정적 IP 주소를 설정하고 정적 IP, DHCP 범위에 대한 기본적인 지식이 있는 라우터 제어 패널에 액세스해야 합니다.</li>\n<li>사진 및 섬네일에 충분한 스토리지 공간이 있어야 합니다. (대부분의 컬렉션은 총 200GB까지 용량을 차지할 수 있다고 알려져 있습니다. 이 강좌에서는 NAS의 네트워크 공유를 사용할 것이지만, 원하는 경우 로컬 디스크의 폴더를 사용할 수도 있습니다.)</li>\n<li>터미널에 대한 기본 지식이 필요합니다. (파일을 열고 저장하는 등)</li>\n<li>Proxmox 컨테이너에 대한 기본 지식이 필요합니다. (LXC 템플릿 다운로드, 컨테이너 설정 등)</li>\n</ul>\n<h2>컨테이너 생성:</h2>\n<p>다음 리소스를 사용하여 컨테이너를 생성하세요:</p>\n<ul>\n<li>선택한 호스트 이름 (컨테이너 이름)을 가진 관리자 권한이 있는 컨테이너를 만듭니다.</li>\n</ul>\n<p><img src=\"/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_1.png\" alt=\"이미지\"></p>\n<ul>\n<li>당신이 좋아하는 리눅스 플레이버는 무엇인가요? 저는 여기서 Debian 11을 사용했어요.</li>\n<li>~16GB의 루트 저장공간입니다. (사진을 저장하기에는 절대 충분하지 않아요. 외부 저장공간을 꼭 사용하시길 강력히 추천드려요. 제 개인 NAS에서 저장 공간을 사용하겠습니다.)</li>\n</ul>\n<p><img src=\"/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_2.png\" alt=\"첨부된 이미지\"></p>\n<ul>\n<li>시스템의 모든 코어를 사용하세요 (4~8개가 좋습니다).</li>\n</ul>\n<p><img src=\"/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_3.png\" alt=\"첨부된 이미지\"></p>\n<ul>\n<li>8GB RAM 이상, 4GB 스왑 이상이 필요합니다.</li>\n</ul>\n<p><img src=\"/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_4.png\" alt=\"이미지\"></p>\n<ul>\n<li>DHCP IPv4 주소를 선택하시고, 나중에 라우터에서 설정할 수 있습니다.</li>\n</ul>\n<p><img src=\"/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_5.png\" alt=\"이미지\"></p>\n<ul>\n<li>나머지는 기본값으로 둔 채로 컨테이너를 시작하지 마세요.</li>\n<li>컨테이너 측면 표시줄의 옵션으로 이동하여 다음을 활성화하세요:</li>\n</ul>\n<pre><code class=\"hljs language-js\">nesting=<span class=\"hljs-number\">1</span>\n<span class=\"hljs-variable constant_\">SMB</span>/<span class=\"hljs-variable constant_\">CIFS</span>=<span class=\"hljs-number\">1</span> # 외부 공유를 사용하는 경우에만 선택적으로 필요\n</code></pre>\n<p><img src=\"/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_6.png\" alt=\"이미지\"></p>\n<ul>\n<li>이제 컨테이너를 시작하세요.</li>\n</ul>\n<h2>IP 주소 설정하기:</h2>\n<p>정적 IP 주소를 설정하면 서비스에 더 쉽게 액세스할 수 있습니다.</p>\n<p>이 단계는 라우터마다 다를 수 있습니다. 제어 패널에 로그인해야 합니다. 일반적으로 192.168.xxx.1을 통해 액세스할 수 있습니다. 그리고 컨테이너에 정적 IP 주소를 추가하셔야 합니다. 정적 IP 할당이 DHCP 할당 범위와 겹치지 않도록 주의하셔야 합니다. 일반적으로 정적 IP에는 192.168.xxx.1~192.168.xxx.50을 추천합니다.</p>\n<p>참고: 만약 컨테이너가 라우터 장치 목록에 나타나지 않으면, 컨테이너로 돌아가 apt update를 실행하고 라우터 화면을 새로고침하세요.</p>\n<p>대부분 인기있는 라우터에 대해 이 작업을 하는 방법을 다루는 YouTube 동영상이 많이 있습니다. 이 작업을 완료한 후 컨테이너를 다시 부팅하십시오. Proxmox를 다시 부팅할 필요는 없습니다.</p>\n<h2>스토리지 설정:</h2>\n<p>이전에 언급했던 대로 16Gb의 부팅 디스크 공간은 대량의 섬네일이나 사진을 저장하기에 부족합니다. Proxmox 호스트 디스크에 충분한 공간이 있고 lvm 스토리지로 적절히 구성된 경우, 부팅 디스크에 200-300GB의 스토리지를 추가하고 계속 진행할 수 있습니다.</p>\n<p>저는 컨테이너 부팅 디스크에 파일을 저장하는 것을 좋아하지 않으며 가능한 한 작게 유지합니다. Proxmox 호스트 디스크가 가득 차는 경우... 복구는 가능하지만 절대로 처지고 싶지 않은 상황입니다.</p>\n<p>이 경우에는 NAS가 있어서 192.168.xxx.yy에 위치한 appdata라는 SMB 공유 폴더를 노출시킵니다.</p>\n<p>필요한 패키지를 설치하십시오:</p>\n<pre><code class=\"hljs language-js\">apt install cifs-utils\n</code></pre>\n<p>마운트 폴더를 생성하세요:</p>\n<pre><code class=\"hljs language-js\">/media/appdata를 만들기\n</code></pre>\n<p>SMB 자격 증명 파일을 만들기:</p>\n<pre><code class=\"hljs language-js\">/root/.<span class=\"hljs-property\">smb</span>에 nano 사용\n</code></pre>\n<p>다음과 같이 자격 증명을 파일에 추가하세요:</p>\n<pre><code class=\"hljs language-js\">사용자 이름=당신의_사용자_이름\n비밀번호=당신의_비밀번호\n</code></pre>\n<p>fstab 설정하기:</p>\n<pre><code class=\"hljs language-js\">nano /etc/fstab\n</code></pre>\n<p>다음 줄을 추가하십시오:\n설정에 맞게 192.168.xxx.yy/appdata를 변경하십시오.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">//192.168.xxx.yy/appdata /media/appdata cifs credentials=/root/.smb,uid=0,gid=0,dir_mode=0777,file_mode=0777,users,rw,iocharset=utf8,noperm 0 0</span>\n</code></pre>\n<p>이제 <code>mount -a</code>를 실행하여 공유를 마운트하세요.</p>\n<h2>Photoprism 설치:</h2>\n<p>이제 컨테이너와 저장소가 설정되었으므로 Photoprism을 설치할 준비가 되었습니다.</p>\n<p>기존 패키지를 업데이트하세요:</p>\n<pre><code class=\"hljs language-bash\">apt update &#x26;&#x26; apt upgrade\n</code></pre>\n<p>필요한 패키지를 설치하세요:</p>\n<pre><code class=\"hljs language-bash\">apt install -y gcc g++ git gnupg make zip unzip ffmpeg exiftool darktable libpng-dev libjpeg-dev libtiff-dev imagemagick libheif-examples\n</code></pre>\n<p>Node.js 설치하기:</p>\n<pre><code class=\"hljs language-js\">wget <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//deb.nodesource.com/setup_18.x -O node_setup.sh</span>\nchmod +x node_setup.<span class=\"hljs-property\">sh</span>\n./node_setup.<span class=\"hljs-property\">sh</span>\napt install -y nodejs\nrm node_setup.<span class=\"hljs-property\">sh</span>\n</code></pre>\n<p>GoLang 설치하기:\n본 안내서 작성 시점에서 1.20.6 버전이 최신입니다. 최신 버전을 확인하려면 웹 사이트를 방문하여 URL을 변경해 주세요.</p>\n<pre><code class=\"hljs language-js\">wget <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//golang.org/dl/go1.20.6.linux-amd64.tar.gz</span>\nrm -rf /usr/local/go\ntar -C /usr/local -xzf go1<span class=\"hljs-number\">.20</span><span class=\"hljs-number\">.6</span>.<span class=\"hljs-property\">linux</span>-amd64.<span class=\"hljs-property\">tar</span>.<span class=\"hljs-property\">gz</span>\nln -s /usr/local/go/bin/go /usr/local/bin/go\nrm go1<span class=\"hljs-number\">.20</span><span class=\"hljs-number\">.6</span>.<span class=\"hljs-property\">linux</span>-amd64.<span class=\"hljs-property\">tar</span>.<span class=\"hljs-property\">gz</span>\n</code></pre>\n<p>텐서플로우 설치:\n이 버전은 AVX2 호환 CPU용입니다 (현대적인 CPU 대부분이 해당됩니다). Photoprism 웹사이트에서 단순히 AVX 용이나 AVX를 지원하지 않는 CPU 용 버전을 찾을 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">wget <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//dl.photoprism.org/tensorflow/linux/libtensorflow-linux-avx2-1.15.2.tar.gz</span>\nsudo tar -C /usr/local -xzf libtensorflow-linux-avx2-<span class=\"hljs-number\">1.15</span><span class=\"hljs-number\">.2</span>.<span class=\"hljs-property\">tar</span>.<span class=\"hljs-property\">gz</span>\nsudo ldconfig\nrm libtensorflow-linux-avx2-<span class=\"hljs-number\">1.15</span><span class=\"hljs-number\">.2</span>.<span class=\"hljs-property\">tar</span>.<span class=\"hljs-property\">gz</span>\n</code></pre>\n<p>Photoprism 다운로드 및 설치:\nPhotoprism을 빌드하는 과정에서 많은 메모리가 사용될 수 있습니다. 여기서처럼 컨테이너를 구성한 경우 오류가 발생하지 않아야 합니다. 메모리 부족(OOM) 오류가 발생하면 이를 확인하고 각 make 단계를 개별적으로 실행하세요.</p>\n<pre><code class=\"hljs language-js\">mkdir -p /opt/photoprism/bin\ngit clone <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//github.com/photoprism/photoprism.git</span>\ncd photoprism\ngit checkout release\nmake all\n./scripts/build.<span class=\"hljs-property\">sh</span> prod /opt/photoprism/bin/photoprism\ncp -a assets/ <span class=\"hljs-regexp\">/opt/</span>photoprism/assets/\n</code></pre>\n<h2>구성:</h2>\n<p>Photoprism의 작업 디렉토리를 만들고 구성 파일을 추가하세요.\n전체 구성 옵션은 여기를 참조하세요.</p>\n<pre><code class=\"hljs language-js\">mkdir /<span class=\"hljs-keyword\">var</span>/lib/photoprism\nnano /<span class=\"hljs-keyword\">var</span>/lib/photoprism/.<span class=\"hljs-property\">env</span>\n</code></pre>\n<p>다음을 구성 파일에 추가하세요:\n기본 SQLite 데이터베이스를 작은 컬렉션 이외의 것에는 권장하지 않습니다. 이를 위해 MariaDB를 사용하는 것을 고려해보세요. MariaDB를 설치하는 방법에 대한 별도 가이드가 있습니다.</p>\n<p>저장 요소를 변경하려면 Photoprism 저장 경로를 마운트된 폴더로 변경해야 합니다. 저의 경우에는 /media/appdata가 될 것입니다.</p>\n<pre><code class=\"hljs language-js\"># 초기 admin 사용자의 비밀번호\n<span class=\"hljs-variable constant_\">PHOTOPRISM_AUTH_MODE</span>=<span class=\"hljs-string\">\"password\"</span>\n<span class=\"hljs-variable constant_\">PHOTOPRISM_ADMIN_PASSWORD</span>=<span class=\"hljs-string\">\"photoprism\"</span>\n\n# <span class=\"hljs-title class_\">Photoprism</span> 저장 디렉터리\n<span class=\"hljs-variable constant_\">PHOTOPRISM_STORAGE_PATH</span>=<span class=\"hljs-string\">\"/var/lib/photoprism\"</span>\n<span class=\"hljs-variable constant_\">PHOTOPRISM_ORIGINALS_PATH</span>=<span class=\"hljs-string\">\"/var/lib/photoprism/photos/Originals\"</span>\n<span class=\"hljs-variable constant_\">PHOTOPRISM_IMPORT_PATH</span>=<span class=\"hljs-string\">\"/var/lib/photoprism/photos/Import\"</span>\n\n# <span class=\"hljs-title class_\">SQLite</span> 대신 <span class=\"hljs-title class_\">MariaDB</span>/<span class=\"hljs-title class_\">MySQL</span>을 사용하는 경우 아래 주석 해제 (기본 설정값)\n# <span class=\"hljs-variable constant_\">PHOTOPRISM_DATABASE_DRIVER</span>=<span class=\"hljs-string\">\"mysql\"</span>\n# <span class=\"hljs-variable constant_\">PHOTOPRISM_DATABASE_SERVER</span>=<span class=\"hljs-string\">\"MYSQL_IP_HERE:PORT\"</span>\n# <span class=\"hljs-variable constant_\">PHOTOPRISM_DATABASE_NAME</span>=<span class=\"hljs-string\">\"DB_NAME\"</span>\n# <span class=\"hljs-variable constant_\">PHOTOPRISM_DATABASE_USER</span>=<span class=\"hljs-string\">\"USER_NAME\"</span>\n# <span class=\"hljs-variable constant_\">PHOTOPRISM_DATABASE_PASSWORD</span>=<span class=\"hljs-string\">\"PASSWORD\"</span>\n</code></pre>\n<p>Photoprism 서비스 설정:\nPhotoprism이 부팅될 때 시작되도록 설정합니다.</p>\n<p>서비스 정의 파일 생성:</p>\n<pre><code class=\"hljs language-js\">nano /etc/systemd/system/photoprism.<span class=\"hljs-property\">service</span>\n</code></pre>\n<p>서비스 파일에 다음을 추가하세요:</p>\n<pre><code class=\"hljs language-js\">[<span class=\"hljs-title class_\">Unit</span>]\n<span class=\"hljs-title class_\">Description</span>=<span class=\"hljs-title class_\">PhotoPrism</span> 서비스\n<span class=\"hljs-title class_\">After</span>=network.<span class=\"hljs-property\">target</span>\n<span class=\"hljs-title class_\">StartLimitIntervalSec</span>=<span class=\"hljs-number\">500</span>\n<span class=\"hljs-title class_\">StartLimitBurst</span>=<span class=\"hljs-number\">5</span>\n\n[<span class=\"hljs-title class_\">Service</span>]\n<span class=\"hljs-title class_\">Type</span>=simple\n<span class=\"hljs-title class_\">Restart</span>=on-failure\n<span class=\"hljs-title class_\">RestartSec</span>=5s\n<span class=\"hljs-title class_\">WorkingDirectory</span>=<span class=\"hljs-regexp\">/opt/</span>photoprism\n<span class=\"hljs-title class_\">EnvironmentFile</span>=<span class=\"hljs-regexp\">/var/</span>lib/photoprism/.<span class=\"hljs-property\">env</span>\n<span class=\"hljs-title class_\">ExecStart</span>=<span class=\"hljs-regexp\">/opt/</span>photoprism/bin/photoprism up\n<span class=\"hljs-title class_\">ExecStop</span>=<span class=\"hljs-regexp\">/opt/</span>photoprism/bin/photoprism down\n\n[<span class=\"hljs-title class_\">Install</span>]\n<span class=\"hljs-title class_\">WantedBy</span>=multi-user.<span class=\"hljs-property\">target</span>\n</code></pre>\n<p>이제 데몬을 다시로드하고 서비스를 시작하세요!</p>\n<pre><code class=\"hljs language-js\">systemctl daemon-reload\nsystemctl start photoprism\nsystemctl enable photoprism\n</code></pre>\n<p>서비스 상태를 확인하세요:</p>\n<pre><code class=\"hljs language-js\">systemctl status photoprism\n</code></pre>\n<p>모든 것이 잘 실행됐다면 (활성화된 상태는 녹색으로 표시됩니다):</p>\n<p><img src=\"/assets/img/2024-06-20-ProxmoxInstallingPhotoprisminLXC_7.png\" alt=\"이미지\"></p>\n<p>지금은 이전에 설정한 IP 주소와 포트 2342를 통해 서버에 액세스할 수 있어야 합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-attr\">http</span>:<span class=\"hljs-comment\">//YOUR-IP:2342</span>\n</code></pre>\n<h2>크레딧:</h2>\n<p>포토프리즘 설치는 아래 안내서를 기반으로 진행되었고, 제게는 너무나 귀중한 정보입니다. 문제 해결이 필요할 때 대비하여 읽어보는 것을 고려해보세요.</p>\n<p>고지사항:</p>\n<p>이 문서는 프로덕션 또는 비즈니스 환경에서의 설정을 위한 안내서가 아니며, 공개 인터넷에 노출할 준비가 된 상태가 아닙니다.</p>\n<p>저는 IT 전문가가 아닙니다. 기술 지원도 제공하지 않습니다. 서버를 가진 대학생입니다. 시스템에서 실행하는 모든 명령어에 대한 최종 책임은 여러분에게 있습니다.</p>\n<p>질문이 있으면 댓글을 남겨주세요. 즐거운 시간 보내세요!</p>\n</body>\n</html>\n"},"__N_SSG":true}